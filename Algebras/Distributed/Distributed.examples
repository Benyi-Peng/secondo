Sequential: Yes
Database: berlintest
Restore : Yes

Operator : DELEMENT2
Number   : 1
Signature: ((array t) ... ) -> t
Example  : let workers = [const rel(tuple([Server: string, Port: int])) value (("localhost" 3333))]
Result   : ()
Remark   : Internal pseudooperator only. Test used for setup

Operator : startup
Number   : 2
Signature: startup (Server:string, Port:int, SecondoConf:string, CreateDistrDB: bool) ->  bool
Example  : query workers feed extend[Start: startup(.Server, .Port, "SecondoConfig.ini.DistrSelfTest", TRUE)] tconsume;
Result   : ((trel (tuple ((Server string) (Port int) (Start bool)))) (("localhost" 3333 TRUE)))

Operator : check_workers
Number   : 3
Signature: ((stream (tuple ((Server string) (Port int))))) ->  ((stream (tuple ((Server string) (Port int) (Status string)))))
Example  : query workers feed check_workers tconsume
Result   : ((trel (tuple ((Server string) (Port int) (Status string)))) (("localhost" 3333 "OK")))

Operator : ddistribute
Number   : 4
Signature: ((stream (tuple ((x1 t1) ... (xn tn)))) xi int (rel(tuple([Server:string, Port: int]))) ) -> (darray (rel (tuple ((x1 t1) ... (xi-1 ti-1)(xi+1 ti+1) ... (xn tn)))))
Example  : let plz_dd = plz feed head [10] extend [N:1] ddistribute [N,1, workers ]
Result   : ()

Operator : dsummarize
Number   : 5
Signature: ((darray (rel t))) -> (stream t)
Example  : query plz_dd dsummarize count
Result   : 10

Operator : DELEMENT
Number   : 6
Signature: ((array t) ... ) -> t
Example  : query plz_dd dloop [. count]
Result   : ((darray int) ((("localhost" 3333)) 10))
Remark   : Internal operator only.

Operator : d_send_rel
Number   : 7
Signature: ( hostname port t) -> int
Example  : query plz_dd dloop [. count]
Result   : ((darray int) ((("localhost" 3333)) 10))
Remark   : Internal operator only.


Operator : d_receive_rel
Number   : 8
Signature: ( hostname port) -> t
Example  : query plz_dd dloop [. count]
Result   : ((darray int) ((("localhost" 3333)) 10))
Remark   : Internal operator only.

Operator : dloop
Number   : 9
Signature: ((darray t) (map t u)) -> (darray u)
Example  : query plz_dd dloop[. count]
Result   : ((darray int) ((("localhost" 3333)) 10))

Operator : dloopa
Number   : 10
Signature: ((darray t) (darray r) (map t r u)) -> (darray u)
Example  : query plz_dd plz_dd dloopa[. count + .. count]
Result   : ((darray int) ((("localhost" 3333)) 20))


Operator : dtie
Number   : 11
Signature: ((array t) (map t t t)) -> t
Example  : query makeDarray(workers,1,2,3) dtie[. + ..]
Result   : ( int 6 )

Operator : get
Number   : 12
Signature: ((darray t) int) -> t
Example  : query get(makeDarray(workers,1,2,3),1)
Result   : (int 2)

Operator : makeDarray
Number   : 13
Signature: (rel(tuple([Server: string, Port: int])) t t ...) -> darray t
Example  : query makeDarray(workers,1,2,3)
Result   : ((darray int) ((("localhost" 3333)) 1 2 3))

Operator : put
Number   : 14
Signature: ((darray t) t int) -> darray t
Example  : query put(makeDarray(workers,1,2,3),2,2)
Result   : ((darray int) ((("localhost" 3333)) 1 2 2))

Operator : receiveD
Number   : 15
Signature: ( hostname port) -> t
Example  : query plz_dd dloop [. count]
Result   : ((darray int) ((("localhost" 3333)) 10))
Remark   : Internal operator only.

Operator : sendD
Number   : 16
Signature: ( hostname port t ) -> int
Example  : query plz_dd dloop [. count]
Result   : ((darray int) ((("localhost" 3333)) 10))
Remark   : Internal operator only.

Operator : shutdown
Number   : 17
Signature: shutdown (Server:string, Port:int) ->  bool
Example  : query shutdown("localhost", 3333)
Result   : TRUE
