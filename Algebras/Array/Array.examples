Database: berlintest
Restore : No

Operator : ELEMENT2
Number   : 1
Signature: ((array t) (array u) ... ) -> u
Example  : query ai al loopa[fun(i:int,l:int)(i+l)]
Result   : 


Operator : ELEMENT
Number   : 1
Signature: ((array t) ... ) -> t
Example  : query ai al loopa[. + ..]
Result   : 


Operator : cumulate
Number   : 1
Signature: ((array t) (map t t t)) -> (array t)
Example  : query ai cumulate[. + .]
Result   : 


Operator : distribute
Number   : 1
Signature: ((stream (tuple ((x1 t1) ... (xn tn)))) xi) -> (array (rel (tuple ((x1 t1) ... (xi-1 ti-1) (xi+1 ti+1) ... (xn tn)))))
Example  : query size( plz feed extend[Pkg: .PLZ mod 10] distribute[Pkg])
Result   : 10


Operator : get
Number   : 1
Signature: ((array t) int) -> t
Example  : query get(ai,3)
Result   : 


Operator : loop
Number   : 1
Signature: ((array t) (map t r)) -> (array r)
Example  : query ai loop [fun(i:int)(i*i)]
Result   : 


Operator : loopa
Number   : 1
Signature: ((array t) (array u) (map t u r)) -> (array r)
Example  : query ai al loopa[fun(i:int,l:int)(i+l)]
Result   : 


Operator : loopb
Number   : 1
Signature: ((array t) (array u) (map t u r)) -> (array r)
Example  : query ai al loopb[fun(i:int,l:int)(i+l)]
Result   : 


Operator : loopselect
Number   : 1
Signature: ((array t) ((name1 (map t r)) ... (namen (map t r))) int real) -> (array r)
Example  : query ai loopselect[f:fun(i:int)(i*2), g:fun(l:int)(l+l); 10, 0.1]
Result   : 


Operator : loopselecta
Number   : 1
Signature: ((array t) (array u) ((name1 (map t u r)) ... (namen (map t u r))) int real) -> (array r)
Example  : query ai al loopselecta[f:fun(i1:int,l1:int)(i1 mod l1), g:fun(i2:int,l2:int)(i2-(i2 div l2)*l2); 10, 0.1]
Result   : 


Operator : loopselectb
Number   : 1
Signature: ((array t) (array u) ((name1 (map t u r)) ... (namen (map t u r))) int real) -> (array r)
Example  : query ai al loopselectb[f:fun(i1:int,l1:int)(i1 mod l1), g:fun(i2:int,l2:int)(i2-(i2 div l2)*l2); 10, 0.1]
Result   : 


Operator : loopswitch
Number   : 1
Signature: ((array t) ((name1 (map t r)) ... (namen (map t r)))) -> (array r)
Example  : query ai loopswitch[f:fun(i:int)(i*2), g:fun(l:int)(l+l)]
Result   : 


Operator : loopswitcha
Number   : 1
Signature: ((array t) (array u) ((name1 (map t u r)) ... (namen (map t u r)))) -> (array r)
Example  : query ai al loopswitcha[f:fun(i1:int,l1:int)(i1 mod l1), g:fun(i2:int,l2:int)(i2-(i2 div l2)*l2)]
Result   : 


Operator : loopswitchb
Number   : 1
Signature: ((array t) (array u) ((name1 (map t u r)) ... (namen (map t u r)))) -> (array r)
Example  : query ai al loopswitchb[f:fun(i1:int,l1:int)(i1 mod l1), g:fun(i2:int,l2:int)(i2-(i2 div l2)*l2)]
Result   : 


Operator : makearray
Number   : 1
Signature: (t t ... t) -> (array t)
Example  : query size( makearray( 0, 1, 2, 3 ) )
Result   : 4


Operator : partjoin
Number   : 1
Signature: ((array (rel t)) (array (rel u)) (map (rel t) (rel u) r)) -> (array r)
Example  : query ar ar partjoin[fun(r1:reltype,r2:reltype)r1 feed r2 feed rename[A] product count]
Result   : 


Operator : partjoinselect
Number   : 1
Signature: ((array (rel t)) (array (rel u)) ((name1 (map (rel t) (rel u) r)) ... (namen (map (rel t) (rel u) r))) int real) -> (array r)
Example  : query ar ar partjoinselect[f:fun(r11:reltype,r12:reltype)r11 feed r12 feed rename[A] sortmergejoin[no,no_A] count, g:fun(r21:reltype,r22:reltype)r21 feed r22 feed rename[A] product filter[.no=.no_A] count; 10, 0.1]
Result   : 


Operator : partjoinswitch
Number   : 1
Signature: ((array (rel t)) (array (rel u)) ((name1 (map (rel t) (rel u) r)) ... (namen (map (rel t) (rel u) r)))) -> (array r)
Example  : query ar ar partjoinswitch[f:fun(r11:reltype,r12:reltype)r11 feed r12 feed rename[A] sortmergejoin[no,no_A] count, g:fun(r21:reltype,r22:reltype)r21 feed r22 feed rename[A] product filter[.no=.no_A] count]
Result   : 


Operator : put
Number   : 1
Signature: ((array t) t int) -> (array t)
Example  : query put(ai,9,3)
Result   : 


Operator : size
Number   : 1
Signature: ((array t)) -> int
Example  : query size(ai)
Result   : 


Operator : sortarray
Number   : 1
Signature: ((array t) (map t int)) -> (array t)
Example  : query ai sortarray[fun(i:int)i]
Result   : 


Operator : summarize
Number   : 1
Signature: ((array (rel t))) -> (stream t)
Example  : query prel summarize consume
Result   : 


Operator : tie
Number   : 1
Signature: ((array t) (map t t t)) -> t
Example  : query ai tie[fun(i:int,l:int)(i+l)]
Result   : 


