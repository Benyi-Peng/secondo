delete ai;
delete al;

let ai = makearray(0,1,2,3);
let al = makearray(100,200);

query ai sortarray[.*-1];

query ai loop[get(ai,.)];

query ai loop[put(ai,999,.)];

# Neuer Operator tie!

query ai tie[.+..];

query ai loop[.*2];
query ai al loop2[.*..];

delete plzArray;
let plzArray = plz feed extend[pkg : log(randint(65536))] distribute[pkg];

query plzArray loop[. count];
query plzArray loop[. feed filter[.Ort contains "wald"] consume];

delete ar;
create ar : array(rel(tuple((no:int))));
update ar := [const array(rel(tuple((no:int))))
		  value ( ((1)) ((2)(3)) ((4)(5)(6)) ((7)(8)(9)(10)) )];

query ar ar loop2[. feed .. feed rename[A] product consume] sortarray[. count];

# Zählen, wie oft ein Ort mit "wald" vorkommt!

query plz feed filter[.Ort contains "wald"] count;

query plz feed extend[pkg : log(randint(65536))] distribute[pkg] 
            loop[. feed filter[.Ort contains "wald"] count]
            tie[.+..];