# This file is part of SECONDO.
#
# Copyright (C) 2004, University in Hagen, Department of Computer Science, 
# Database Systems for New Applications.
#
# SECONDO is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# SECONDO is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with SECONDO; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA

set "ERA:TraceSort" = TRUE;

##############################################################################
# Setup
##############################################################################

#setup sort_iobuffer_test StandardAlgebra RelationAlgebra ExtRelation2Algebra

# Create objects opt and thousand
restore database opt from './../bin/opt';
save plz to './../bin/tmp/plz';
save thousand to './../bin/tmp/thousand';
close database;

# Create db_R1G
create database db_R1G;
open database db_R1G;
restore plz from './../bin/tmp/plz';
restore thousand from './../bin/tmp/thousand';
restore largetext from './../Algebras/ExtRelation-2/Tests/objects/largetext';

# Create relation with 1 GB data and 512 Byte tuples
let R1G_T512B = plz feed project[PLZ] thousand feed product head[2097152] extend[ival: randint(9), rval: randint(100) * 0.1, bval: TRUE, textval: subtext(largetext,1,447), ran: randint(100000)] sortby[ran asc] remove[ran] consume;

# Create relation with 1 GB data and 8 KByte tuples
let R1G_T8KB = plz feed project[PLZ] thousand feed product head[131072] extend[ival: randint(9), rval: randint(100) * 0.1, bval: TRUE, textval: subtext(largetext,1,8127), ran: randint(100000)] sortby[ran asc] remove[ran] consume;

# Create relation with 1 GB data and 64 KByte tuples
let R1G_T64KB = plz feed project[PLZ] thousand feed product head[16384] extend[ival: randint(9), rval: randint(100) * 0.1, bval: TRUE, textval: subtext(largetext,1,65469), ran: randint(100000)] sortby[ran asc] remove[ran] consume;

##############################################################################
# TestCases
##############################################################################

#testcase tuplesize_R1G_T512B
#yields (int 512)
query R1G_T512B feed head[1] tuplesize;

#--------------------------------------------------  

#testcase tuplesize_R1G_T8KB
#yields (int 8192)
query R1G_T8KBfeed head[1] tuplesize;

#--------------------------------------------------  

#testcase tuplesize_R1G_T64KB
#yields (int 16384)
query R1G_T64KB feed head[1] tuplesize;

#--------------------------------------------------  

#testcase small_tuplesize_1
#yields success
query R1G_T512B feed head[100] sortby2with[textval asc, PLZ asc;16*1024*1024,50,0];

#--------------------------------------------------  

#testcase small_tuplesize_2
#yields success
query R1G_T512B feed head[100] sortby2with[textval asc, PLZ asc;16*1024*1024,50,1024];

#--------------------------------------------------  

#testcase small_tuplesize_3
#yields success
query R1G_T512B feed head[100] sortby2with[textval asc, PLZ asc;16*1024*1024,50,2048];

#--------------------------------------------------  

#testcase small_tuplesize_4
#yields success
query R1G_T512B feed head[100] sortby2with[textval asc, PLZ asc;16*1024*1024,50,4096];

#--------------------------------------------------  

#testcase small_tuplesize_5
#yields success
query R1G_T512B feed head[100] sortby2with[textval asc, PLZ asc;16*1024*1024,50,8192];

#--------------------------------------------------  

#testcase small_tuplesize_6
#yields success
query R1G_T512B feed head[100] sortby2with[textval asc, PLZ asc;16*1024*1024,50,16384];

#--------------------------------------------------  

#testcase medium_tuplesize_1
#yields success
query R1G_T8KB feed head[100] sortby2with[textval asc, PLZ asc;16*1024*1024,50,0];

#--------------------------------------------------  

#testcase medium_tuplesize_2
#yields success
query R1G_T8KB feed head[100] sortby2with[textval asc, PLZ asc;16*1024*1024,50,1024];

#--------------------------------------------------  

#testcase medium_tuplesize_3
#yields success
query R1G_T8KB feed head[100] sortby2with[textval asc, PLZ asc;16*1024*1024,50,2048];

#--------------------------------------------------  

#testcase medium_tuplesize_4
#yields success
query R1G_T8KB feed head[100] sortby2with[textval asc, PLZ asc;16*1024*1024,50,4096];

#--------------------------------------------------  

#testcase medium_tuplesize_5
#yields success
query R1G_T8KB feed head[100] sortby2with[textval asc, PLZ asc;16*1024*1024,50,8192];

#--------------------------------------------------  

#testcase medium_tuplesize_6
#yields success
query R1G_T8KB feed head[100] sortby2with[textval asc, PLZ asc;16*1024*1024,50,16384];

#--------------------------------------------------  

#testcase big_tuplesize_1
#yields success
query R1G_T64KB feed head[100] sortby2with[textval asc, PLZ asc;16*1024*1024,50,0];

#--------------------------------------------------  

#testcase big_tuplesize_2
#yields success
query R1G_T64KB feed head[100] sortby2with[textval asc, PLZ asc;16*1024*1024,50,1024];

#--------------------------------------------------  

#testcase big_tuplesize_3
#yields success
query R1G_T64KB feed head[100] sortby2with[textval asc, PLZ asc;16*1024*1024,50,2048];

#--------------------------------------------------  

#testcase big_tuplesize_4
#yields success
query R1G_T64KB feed head[100] sortby2with[textval asc, PLZ asc;16*1024*1024,50,4096];

#--------------------------------------------------  

#testcase big_tuplesize_5
#yields success
query R1G_T64KB feed head[100] sortby2with[textval asc, PLZ asc;16*1024*1024,50,8192];

#--------------------------------------------------  

#testcase big_tuplesize_6
#yields success
query R1G_T64KB feed head[100] sortby2with[textval asc, PLZ asc;16*1024*1024,50,16384];

##############################################################################
# TearDown
##############################################################################

#teardown
close database;
delete database R1G;
