# This file is part of SECONDO.
#
# Copyright (C) 2004, University in Hagen, Department of Computer Science, 
# Database Systems for New Applications.
#
# SECONDO is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# SECONDO is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with SECONDO; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA

#--------------------------------------------------  
# Enable Flags
#--------------------------------------------------  

set "ERA:TraceHybridHashJoin" = TRUE;
set "ERA:HybridHashJoinNoSubpartitioning" = TRUE;
#set "SI:PrintCounters" = TRUE;
set "SI:PrintCmdTimes" = TRUE;
set "SI:NoQueryTimers" = TRUE;
set "SI:NoCommandEcho" = TRUE;
#set "SI:RelStatistics" = TRUE;
set "SMI:NoTransactions" = TRUE;

#--------------------------------------------------  
# Create and open database DB_TMP
#--------------------------------------------------  

#setup hashjoin_number_of_partitions StandardAlgebra RelationAlgebra ExtRelation2Algebra

restore database db_tmp from '$(SECONDO_BUILD_DIR)/bin/opt';

#--------------------------------------------------  
# Create relation with 25 MB data and ~25 Byte tuples
#--------------------------------------------------  

#testcase create_relation_A
#yields success
let relA = plz feed thousand feed head[26] product head[1048576] extend[ran: randint(50000)] sortby2Param[PLZ;30*1024*1024,-1,-1] remove[ran] {a} consume; 

#testcase create_relation_B
#yields success
let relB = plz feed thousand feed head[6] product head[209716] extend[ran: randint(50000)] sortby2Param[PLZ;30*1024*1024,-1,-1] remove[ran] {b} consume; 

#--------------------------------------------------  
# Hybrid Hash-Join with 200 Buckets
#--------------------------------------------------  

#testcase 200_buckets_2_partitions
#yields success
query relA feed relB feed hybridhashjoinParam[PLZ_a,PLZ_b;200,2,-1,-1] count;

#testcase 200_buckets_3_partitions
#yields success
query relA feed relB feed hybridhashjoinParam[PLZ_a,PLZ_b;200,3,-1,-1] count;

#testcase 200_buckets_4_partitions
#yields success
query relA feed relB feed hybridhashjoinParam[PLZ_a,PLZ_b;200,4,-1,-1] count;

#testcase 200_buckets_5_partitions
#yields success
query relA feed relB feed hybridhashjoinParam[PLZ_a,PLZ_b;200,5,-1,-1] count;

#testcase 200_buckets_6_partitions
#yields success
query relA feed relB feed hybridhashjoinParam[PLZ_a,PLZ_b;200,6,-1,-1] count;

#testcase 200_buckets_7_partitions
#yields success
query relA feed relB feed hybridhashjoinParam[PLZ_a,PLZ_b;200,7,-1,-1] count;

#testcase 200_buckets_8_partitions
#yields success
query relA feed relB feed hybridhashjoinParam[PLZ_a,PLZ_b;200,8,-1,-1] count;

#testcase 200_buckets_9_partitions
#yields success
query relA feed relB feed hybridhashjoinParam[PLZ_a,PLZ_b;200,9,-1,-1] count;

#testcase 200_buckets_10_partitions
#yields success
query relA feed relB feed hybridhashjoinParam[PLZ_a,PLZ_b;200,10,-1,-1] count;

#testcase 200_buckets_11_partitions
#yields success
query relA feed relB feed hybridhashjoinParam[PLZ_a,PLZ_b;200,11,-1,-1] count;

#testcase 200_buckets_12_partitions
#yields success
query relA feed relB feed hybridhashjoinParam[PLZ_a,PLZ_b;200,12,-1,-1] count;

#testcase 200_buckets_13_partitions
#yields success
query relA feed relB feed hybridhashjoinParam[PLZ_a,PLZ_b;200,13,-1,-1] count;

#testcase 200_buckets_14_partitions
#yields success
query relA feed relB feed hybridhashjoinParam[PLZ_a,PLZ_b;200,14,-1,-1] count;

#testcase 200_buckets_15_partitions
#yields success
query relA feed relB feed hybridhashjoinParam[PLZ_a,PLZ_b;200,15,-1,-1] count;

#testcase 200_buckets_16_partitions
#yields success
query relA feed relB feed hybridhashjoinParam[PLZ_a,PLZ_b;200,16,-1,-1] count;

#testcase 200_buckets_17_partitions
#yields success
query relA feed relB feed hybridhashjoinParam[PLZ_a,PLZ_b;200,17,-1,-1] count;

#testcase 200_buckets_18_partitions
#yields success
query relA feed relB feed hybridhashjoinParam[PLZ_a,PLZ_b;200,18,-1,-1] count;

#testcase 200_buckets_19_partitions
#yields success
query relA feed relB feed hybridhashjoinParam[PLZ_a,PLZ_b;200,19,-1,-1] count;

#testcase 200_buckets_20_partitions
#yields success
query relA feed relB feed hybridhashjoinParam[PLZ_a,PLZ_b;200,20,-1,-1] count;

#testcase 200_buckets_30_partitions
#yields success
query relA feed relB feed hybridhashjoinParam[PLZ_a,PLZ_b;200,30,-1,-1] count;

#testcase 200_buckets_40_partitions
#yields success
query relA feed relB feed hybridhashjoinParam[PLZ_a,PLZ_b;200,40,-1,-1] count;

#testcase 200_buckets_50_partitions
#yields success
query relA feed relB feed hybridhashjoinParam[PLZ_a,PLZ_b;200,50,-1,-1] count;

#testcase 200_buckets_60_partitions
#yields success
query relA feed relB feed hybridhashjoinParam[PLZ_a,PLZ_b;200,60,-1,-1] count;

#testcase 200_buckets_70_partitions
#yields success
query relA feed relB feed hybridhashjoinParam[PLZ_a,PLZ_b;200,70,-1,-1] count;

#testcase 200_buckets_80_partitions
#yields success
query relA feed relB feed hybridhashjoinParam[PLZ_a,PLZ_b;200,80,-1,-1] count;

#testcase 200_buckets_90_partitions
#yields success
query relA feed relB feed hybridhashjoinParam[PLZ_a,PLZ_b;200,90,-1,-1] count;

#testcase 200_buckets_100_partitions
#yields success
query relA feed relB feed hybridhashjoinParam[PLZ_a,PLZ_b;200,100,-1,-1] count;

#--------------------------------------------------  
# Hybrid Hash-Join with 500 Buckets
#--------------------------------------------------  

#testcase 500_buckets_2_partitions
#yields success
query relA feed relB feed hybridhashjoinParam[PLZ_a,PLZ_b;500,2,-1,-1] count;

#testcase 500_buckets_5_partitions
#yields success
query relA feed relB feed hybridhashjoinParam[PLZ_a,PLZ_b;500,5,-1,-1] count;

#testcase 500_buckets_10_partitions
#yields success
query relA feed relB feed hybridhashjoinParam[PLZ_a,PLZ_b;500,10,-1,-1] count;

#testcase 500_buckets_15_partitions
#yields success
query relA feed relB feed hybridhashjoinParam[PLZ_a,PLZ_b;500,15,-1,-1] count;

#testcase 500_buckets_20_partitions
#yields success
query relA feed relB feed hybridhashjoinParam[PLZ_a,PLZ_b;500,20,-1,-1] count;

#testcase 500_buckets_21_partitions
#yields success
query relA feed relB feed hybridhashjoinParam[PLZ_a,PLZ_b;500,21,-1,-1] count;

#testcase 500_buckets_22_partitions
#yields success
query relA feed relB feed hybridhashjoinParam[PLZ_a,PLZ_b;500,22,-1,-1] count;

#testcase 500_buckets_23_partitions
#yields success
query relA feed relB feed hybridhashjoinParam[PLZ_a,PLZ_b;500,23,-1,-1] count;

#testcase 500_buckets_24_partitions
#yields success
query relA feed relB feed hybridhashjoinParam[PLZ_a,PLZ_b;500,24,-1,-1] count;

#testcase 500_buckets_25_partitions
#yields success
query relA feed relB feed hybridhashjoinParam[PLZ_a,PLZ_b;500,25,-1,-1] count;

#testcase 500_buckets_30_partitions
#yields success
query relA feed relB feed hybridhashjoinParam[PLZ_a,PLZ_b;500,30,-1,-1] count;

#testcase 500_buckets_40_partitions
#yields success
query relA feed relB feed hybridhashjoinParam[PLZ_a,PLZ_b;500,40,-1,-1] count;

#testcase 500_buckets_50_partitions
#yields success
query relA feed relB feed hybridhashjoinParam[PLZ_a,PLZ_b;500,50,-1,-1] count;

#testcase 500_buckets_100_partitions
#yields success
query relA feed relB feed hybridhashjoinParam[PLZ_a,PLZ_b;500,100,-1,-1] count;

#testcase 500_buckets_150_partitions
#yields success
query relA feed relB feed hybridhashjoinParam[PLZ_a,PLZ_b;500,150,-1,-1] count;

#testcase 500_buckets_200_partitions
#yields success
query relA feed relB feed hybridhashjoinParam[PLZ_a,PLZ_b;500,200,-1,-1] count;

#testcase 500_buckets_250_partitions
#yields success
query relA feed relB feed hybridhashjoinParam[PLZ_a,PLZ_b;500,250,-1,-1] count;

#--------------------------------------------------  
# Hybrid Hash-Join with 1000 Buckets
#--------------------------------------------------  

#testcase 1000_buckets_2_partitions
#yields success
query relA feed relB feed hybridhashjoinParam[PLZ_a,PLZ_b;1000,2,-1,-1] count;

#testcase 1000_buckets_5_partitions
#yields success
query relA feed relB feed hybridhashjoinParam[PLZ_a,PLZ_b;1000,5,-1,-1] count;

#testcase 1000_buckets_10_partitions
#yields success
query relA feed relB feed hybridhashjoinParam[PLZ_a,PLZ_b;1000,10,-1,-1] count;

#testcase 1000_buckets_20_partitions
#yields success
query relA feed relB feed hybridhashjoinParam[PLZ_a,PLZ_b;1000,20,-1,-1] count;

#testcase 1000_buckets_25_partitions
#yields success
query relA feed relB feed hybridhashjoinParam[PLZ_a,PLZ_b;1000,25,-1,-1] count;

#testcase 1000_buckets_26_partitions
#yields success
query relA feed relB feed hybridhashjoinParam[PLZ_a,PLZ_b;1000,26,-1,-1] count;

#testcase 1000_buckets_27_partitions
#yields success
query relA feed relB feed hybridhashjoinParam[PLZ_a,PLZ_b;1000,27,-1,-1] count;

#testcase 1000_buckets_28_partitions
#yields success
query relA feed relB feed hybridhashjoinParam[PLZ_a,PLZ_b;1000,28,-1,-1] count;

#testcase 1000_buckets_29_partitions
#yields success
query relA feed relB feed hybridhashjoinParam[PLZ_a,PLZ_b;1000,29,-1,-1] count;

#testcase 1000_buckets_30_partitions
#yields success
query relA feed relB feed hybridhashjoinParam[PLZ_a,PLZ_b;1000,30,-1,-1] count;

#testcase 1000_buckets_31_partitions
#yields success
query relA feed relB feed hybridhashjoinParam[PLZ_a,PLZ_b;1000,31,-1,-1] count;

#testcase 1000_buckets_32_partitions
#yields success
query relA feed relB feed hybridhashjoinParam[PLZ_a,PLZ_b;1000,32,-1,-1] count;

#testcase 1000_buckets_33_partitions
#yields success
query relA feed relB feed hybridhashjoinParam[PLZ_a,PLZ_b;1000,33,-1,-1] count;

#testcase 1000_buckets_34_partitions
#yields success
query relA feed relB feed hybridhashjoinParam[PLZ_a,PLZ_b;1000,34,-1,-1] count;

#testcase 1000_buckets_35_partitions
#yields success
query relA feed relB feed hybridhashjoinParam[PLZ_a,PLZ_b;1000,35,-1,-1] count;

#testcase 1000_buckets_40_partitions
#yields success
query relA feed relB feed hybridhashjoinParam[PLZ_a,PLZ_b;1000,40,-1,-1] count;

#testcase 1000_buckets_50_partitions
#yields success
query relA feed relB feed hybridhashjoinParam[PLZ_a,PLZ_b;1000,50,-1,-1] count;

#testcase 1000_buckets_100_partitions
#yields success
query relA feed relB feed hybridhashjoinParam[PLZ_a,PLZ_b;1000,100,-1,-1] count;

#testcase 1000_buckets_200_partitions
#yields success
query relA feed relB feed hybridhashjoinParam[PLZ_a,PLZ_b;1000,200,-1,-1] count;

#testcase 1000_buckets_300_partitions
#yields success
query relA feed relB feed hybridhashjoinParam[PLZ_a,PLZ_b;1000,300,-1,-1] count;

#testcase 1000_buckets_400_partitions
#yields success
query relA feed relB feed hybridhashjoinParam[PLZ_a,PLZ_b;1000,400,-1,-1] count;

#testcase 1000_buckets_500_partitions
#yields success
query relA feed relB feed hybridhashjoinParam[PLZ_a,PLZ_b;1000,500,-1,-1] count;


##############################################################################
# TearDown
##############################################################################

#teardown
close database;
delete database db_tmp;
