Database: opt
Restore : NO

Operator: doubleexport
Number: 1
Signature: ((stream (tuple((a1 t1) ... (ai ti) ... (an tm)))) (stream (tuple((b1 p1) ... (bj tj) ... (bm tm)))) ai bj)-> ((stream (tuple (key:text) (value:text))))
Example: query plz feed head[5] {p} Orte feed head[3] {o} doubleexport[Ort_p, Ort_o] count
Result: 8

Operator: parahashjoin
Number: 1
Signature: ( (stream (tuple((v: text)))) text text ) -> stream(tuple(...))
Example: query plz feed {p} Orte feed {o} doubleexport[Ort_p, Ort_o] sortby[keyT] add0Tuple project[valueT] plz Orte parahashjoin count;
Result: 10052

Operator: TUPSTREAM
Number: 1
Signature: ( (rel(T1)) ... ) -> stream(T1)
Example: query plz feed {p} Orte feed {o} doubleexport[Ort_p, Ort_o] sortby[keyT] add0Tuple project[valueT] plz Orte parajoin[. {p} .. {o} product] count;
Result: 10052

Operator: TUPSTREAM2
Number: 1
Signature: ( T1 (rel(T2)) ... ) -> stream(T2)
Example: query plz feed {p} Orte feed {o} doubleexport[Ort_p, Ort_o] sortby[keyT] add0Tuple project[valueT] plz Orte parajoin[. {p} .. {o} product] count;
Result: 10052

Operator: TUPSTREAM3
Number: 1
Signature: ( T1 T2 (rel(T3)) ... ) -> stream(T3)
Example: query plz feed {p} Orte feed {o} doubleexport[Ort_p, Ort_o] sortby[keyT] add0Tuple project[valueT] plz Orte parajoin[. {p} .. {o} product] count;
Result: 10052

Operator: parajoin
Number: 1
Signature: ( (stream(tuple((v: text)))) x (rel(tuple(T1))) x (rel(tuple(T2))) x ((map (stream(T1)) (stream(T2)) (stream(T1 T2)))))) -> stream(tuple(T1 T2))
Example: query plz feed {p} Orte feed {o} doubleexport[Ort_p, Ort_o] sortby[keyT] add0Tuple project[valueT] plz Orte parajoin[. {p} .. {o} product] count;
Result: 10052

Operator: parajoin2
Number: 1
Signature: (  (stream(tuple((value text)))) x (rel(tuple(T1))) x (rel(tuple(T2))) x ((map (stream(T1)) (stream(T2)) (stream(T1 T2))))  ) -> stream(tuple(T1 T2))
Example: query plz feed sortby[Ort asc] {p} Orte feed sortby[Ort asc] {o} parajoin2[Ort_p, Ort_o;.  ..  product] count
Result: 10052

Operator: add0Tuple
Number: 1
Signature: (stream(tuple((keyT string)(valueT text)))) -> stream(tuple((keyT string)(valueT text)))
Example: query plz feed head[5] {p} Orte feed head[3] {o} doubleexport[Ort_p, Ort_o] sortby[keyT] add0Tuple count;
Result: 11

Operator : fconsume
Number   : 1
Signature: stream(tuple(...)) x string x text x [int] x [string] x [string] x [ array(string) x int x int x int] -> bool
Example  : query plz feed fconsume["plzComp", '', 1;;]
Result   : TRUE

Operator : ffeed
Number   : 1
Signature: string x string x [int] x [string] x [array(string) x int x int] -> rel(tuple(...))
Example  : query "plzComp" ffeed[,'',1;;] count
Result   : 41267

Operator : hadoopjoin
Number   : 1
Signature: ((stream(tuple(T1))) x (stream(tuple(T2))) x array(string) x int x int x (map stream(tuple(T1)) stream(tuple(T2)) stream(tuple(T1 T2)))) -> stream(tuple((mIndex int)(pIndex int)))
Example  : query plz feed extend[Cell: length(.Ort)] extend[Partition: .Cell mod 20] Orte feed extend[Cell: length(.Ort)] extend[Partition: .Cell mod 20] {rr} hadoopjoin[ [const array(string) value ("node1" "node2")], 1, 20, "Result"; . sortby[Cell] .. sortby[Cell_rr] parajoin2[Cell, Cell_rr;. .. symmjoin[.Ort = ..Ort_rr]] ] getTypeNL;
Result   : '(stream (tuple ((mIndex int) (pIndex int))))' 

Operator : fdistribute
Number   : 1
Signature: stream(tuple((a1 t1) ... (ai ti) ... (an tm))) x string x text x ai x int -> stream(tuple((sufix int) (ai ti))) 
Example  : query plz feed fdistribute["plz_dis", '', PLZ,50,TRUE] loopsel["plz_dis" ffeed['',.suffix;;]] count
Result   : 41267
