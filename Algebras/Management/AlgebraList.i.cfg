/*
---- 
This file is part of SECONDO.

Copyright (C) 2004, University in Hagen, Department of Computer Science, 
Database Systems for New Applications.

SECONDO is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 2 of the License, or
(at your option) any later version.

SECONDO is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with SECONDO; if not, write to the Free Software
Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
----

1 List of Algebra Modules for Secondo

This file contains a list of all currently available algebra modules.

The macros ~ALGEBRA\_INCLUDE~ and ~ALGEBRA\_EXCLUDE~ allow to include
or exclude an algebra to or from the set of loaded algebra modules. They
are created by make (see 4.). Here you have just to define a unique name
and id for an algebra.

These macros have three parameters:

  1 ~the unique identification number~ which must be a positive integer,
it is recommended but not absolutely necessary to order the entries of the
list in ascending order. No identification number may occur more than once
in the list.

  2 ~the algebra name~ which is used to build the name of the initialization
function: the algebra name is appended to the string "Initialize".

  3 ~the level of the algebra~ which may be one of the following: ~Descriptive~,
~Executable~ or ~Hybrid~.

  4 The active algebras are configured in the file makefile.algebras. A shell script
  extracts the identification number and the level by the Algebra name. Therfore no
  algebra initialization function name is allowed to appear twice, even if the line
  starts with a c++ comment

*/

ALGEBRA(1,StandardAlgebra,Hybrid)
ALGEBRA(2,FunctionAlgebra,Executable)
ALGEBRA(3,RelationAlgebra,Executable)
ALGEBRA(4,ExtRelationAlgebra,Executable)
ALGEBRA(5,PointRectangleAlgebra,Executable)
ALGEBRA(6,StreamExampleAlgebra,Executable)
ALGEBRA(7,PolygonAlgebra,Executable)
ALGEBRA(8,DateAlgebra,Executable)
ALGEBRA(9,BTreeAlgebra,Executable)
ALGEBRA(10,SpatialAlgebra,Executable)
ALGEBRA(11,FTextAlgebra,Executable)
ALGEBRA(12,ArrayAlgebra,Executable)
ALGEBRA(13,RTreeAlgebra,Executable)
ALGEBRA(15,RoseAlgebra,Executable)
ALGEBRA(16,FuzzyAlgebra,Executable)
ALGEBRA(17,RectangleAlgebra,Executable)
ALGEBRA(18,OldRelationAlgebra,Executable)
ALGEBRA(19,BinaryFileAlgebra,Executable)
ALGEBRA(20,TemporalAlgebra,Executable)
ALGEBRA(21,MP3Algebra,Executable)
ALGEBRA(22,PictureAlgebra,Executable)
ALGEBRA(23,MidiAlgebra,Executable)
ALGEBRA(24,JBBoxAlgebra,Executable)
//ALGEBRA(25,PeriodicAlgebra,Executable)
ALGEBRA(26,DateTimeAlgebra,Executable)
ALGEBRA(27,NetworkAlgebra,Executable)
ALGEBRA(28,PlugJoinAlgebra,Executable)
ALGEBRA(29,TupleIdentifierAlgebra,Executable)
ALGEBRA(30,PointSequenceAlgebra,Executable)
ALGEBRA(31,RemoteStreamAlgebra,Executable)
