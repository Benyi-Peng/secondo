let gamestype = [const rel(tuple([x: int])) value ((1))];

derive games = gamestype feed 
  extendstream[Match: readpgn('sochi84.pgn')] 
  project[Match] consume;

derive gamesStandard = games feed 
  extend[event: (.Match getkey["Event"])] 
  extend[site: .Match getkey["Site"]] 
  extend[date: .Match getkey["Date"]] 
  extend[round: .Match getkey["Round"]] 
  extend[white: .Match getkey["White"]] 
  extend[black: .Match getkey["Black"]] 
  extend[result: .Match getkey["Result"]] consume;
 
derive gamesMultipleStandard = gamesStandard feed 
  extend[Match2: .Match] consume;

let gamesStandard_event = gamesStandard createbtree[event];
let gamesStandard_site = gamesStandard createbtree[site];
let gamesStandard_round = gamesStandard createbtree[round];
let gamesStandard_date = gamesStandard createbtree[date];
let gamesStandard_result = gamesStandard createbtree[result];
let gamesStandard_white = gamesStandard createbtree[white];
let gamesStandard_black = gamesStandard createbtree[black];

query games;
query gamesStandard;
query gamesMultipleStandard;

