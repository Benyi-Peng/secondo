Database: berlintest
Restore : No




Operator : createemptytrie
Number   : 1
Signature: ->trie
Example  : query createemptytrie()
Result   : unpredictable
Remark   : a trie has no out function


Operator : insert2trie
Number   : 1
Signature: trie x string x int -> bool
Example  : query insert2trie(createemptytrie(),"hello",int2tid(1))
Result   : TRUE

Operator : searchtrie
Number   : 1
Signature: trie x string -> tid
Example  : query searchtrie(createemptytrie(),"hello")
Result   : (tid 0)


Operator : contains
Number   : 1
Signature: trie x string -> bool
Example  : query createemptytrie() contains "hello"
Result   : FALSE

Operator : containsPrefix
Number   : 1
Signature: trie x string -> bool
Example  : query createemptytrie() containsPrefix "hello"
Result   : FALSE

Operator : trieEntries
Number   : 1
Signature: trie x string [x bool]-> stream(string)
Example  : query createemptytrie() trieEntries["hello"] count 
Result   : 0


Operator : createInvFile
Number   : 1
Signature: stream(tuple) x a_i x a_j -> invfile
Example  : query SEC2OPERATORINFO feed addid createInvFile[Signature, TID] 
Result   : unpredictable
Remark   : A InvFile has not out function


Operator : searchWord 
Number   : 1
Signature: invfile x string -> stream(tuple((TID tid)(WordPos int)(CharPos pos)))
Example  : query strassen feed addid extend[Te : totext(.Name)]  createInvFile[Te, TID]  searchWord["Theaterufer"] count > 0
Result   : TRUE


Operator : searchPrefix
Number   : 1
Signature: invfile x string -> stream(tuple((TID tid)(WordPos int)(CharPos pos)))
Example  : query strassen feed addid extend[Te : totext(.Name)]  createInvFile[Te, TID]  searchPrefix["The"] count > 0
Result   : TRUE

Operator  : getFileInfo 
Number    : 1
Signature : invfile -> text
Example   : query length(getFileInfo(SEC2OPERATORINFO feed addid createInvFile[Signature, TID] )) > 0
Result   : TRUE


Operator : getFileInfo
Number   : 2
Signature: trie  -> text
Example  : query length(getFileInfo(createemptytrie())) > 0
Result   : TRUE

Operator  : wordCount
Number    : 1
Signature : invfile -> int
Example   : query tokenize('hello hello hello'," ") namedtransformstream[T] extend[I : int2tid(1)] createInvFile[T,I] wordCount["hello"]
Result    : 3 


Operator  : prefixCount
Number    : 1
Signature : invfile -> int
Example   : query tokenize('hello hello hello', " ") namedtransformstream[T] extend[I : int2tid(1)] createInvFile[T,I] prefixCount["hel"] tconsume
Result    : ( (trel(tuple((Word text)(Count int)))) ( ('hello' 3))) 


Operator  : getInvFileSeparators
Number    : 1
Signature : -> string
Example   : query getInvFileSeparators() contains " "
Result    : TRUE


