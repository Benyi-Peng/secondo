Database : berlintest
Restore  : No

Operator  : createboundary
Number    : 1
Signature : rel(tuple(X)) x attr x int -> boundary(X)
Example   : query plz createboundary[PLZ, 50]
Result    : (boundary (2694 4639 6493 7512 9243 11551 14806 16247 17159 18246 19322 21084 22941 24235 25557 26703 28879 31568 33627 36133 38279 39524 41720 45318 47883 49794 52051 54405 55444 56357 57577 59818 63441 65510 67034 68744 71299 73453 75404 78091 80100 82432 84137 86522 88633 91325 94140 96507 98716 99955))

Operator  : getboundaryindex
Number    : 1
Signature : boundary x attr -> int
Example   : query plz getboundaryindex[PLZ]
Result    : bug
Remark    : remote server required

Operator  : rect2cellgrid
Number    : 1
Signature : rect x int -> cellgird2d
Example   : query [const rect value(5 9 50 52)] rect2cellgrid[20]
Result    : (cellgird2d (5 50 0.1 0.1 400))

Operator  : drelfdistribute
Number    : 1
Signature : stream x rel x string x string [x attr] [x int] -> drel(X)
Example   : query strassen feed drelfdistribute[Worker3, "", "random", 5]
Result    : bug
Remark    : remote server required

Operator  : dreldistribute
Number    : 1
Signature : stream x rel x string x string [x attr] [x int] -> drel(X)
Example   : query strassen feed dreldistribute[Worker3, "", "range", No, 5]
Result    : bug
Remark    : remote server required

Operator  : comparedisttype
Number    : 1
Signature : drel x drel -> bool
Example   : query drel1 drel2 comparedisttype
Result    : bug
Remark    : remote server required

Operator  : drelcollect_box
Number    : 1
Signature : stream<SPATIAL2D> x bool -> rectangle
Example   : query (strassen feed projecttransformstream[GeoData] drelcollect_box[TRUE]) = strassen feed extend[B : bbox(.GeoData)] aggregateB[B; fun(r1 : rect,r2: rect)      r1 union r2; [const rect value undef] ] 
Result    : TRUE

Operator  : convert2darray
Number    : 1
Signature : drel -> darray
Example   : query drel1 convert2darray
Result    : bug
Remark    : remote server required

Operator  : drelsummarize
Number    : 1
Signature : d[f]rel(rel(X)) -> stream(X)
Example   : query drel1 dsummarize count
Result    : bug
Remark    : remote server required

Operator  : drelcreatebtree
Number    : 1
Signature : d[f]rel(rel(X)) -> d[f]rel(btree(X))
Example   : query drel1 drelcreatebtree["drel1_PLZ",PLZ]
Result    : bug
Remark    : remote server required

Operator  : drelexactmatch
Number    : 1
Signature : drel(btree(X)) x drel(rel(X)) x ANY -> drel(rel(X))
Example   : query drel1_PLZ drel1 drelexactmatch[99998]
Result    : bug
Remark    : remote server required

Operator  : drelrange
Number    : 1
Signature : drel(btree(X)) x drel(rel(X)) x ANY x ANY -> drel(rel(X))
Example   : query drel1_PLZ drel1 drelrange[90000,99998]
Result    : bug
Remark    : remote server required

Operator  : drelfilter
Number    : 1
Signature : (drel(rel(X)) (map x bool)) -> drel(rel(X))
Example   : query drel1 drelfilter[.PLZ > 200]
Result    : bug
Remark    : remote server required

Operator  : drelproject
Number    : 1
Signature : drel(rel(X)) x list -> stream(Y)
Example   : query drel1 drelproject[PLZ, Ort] consume
Result    : bug
Remark    : remote server required

Operator  : drelextend
Number    : 1
Signature : drel(rel(X)) x funlist -> drel(rel(Y))
Example   : query drel1 drelextend[PLZ2 : .PLZ + 1]
Result    : bug
Remark    : remote server required

Operator  : drelprojectextend
Number    : 1
Signature : drel(rel(X)) x attrlist x funlist -> drel(rel(Y))
Example   : query drel1 drelprojectextend[PLZ; PLZ2 : .PLZ + 1]
Result    : bug
Remark    : remote server required

Operator  : drelhead
Number    : 1
Signature : drel(rel(X)) x int -> drel(rel(X))
Example   : query drel1 drelhead[3]
Result    : bug
Remark    : remote server required