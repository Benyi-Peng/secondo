Database: berlintest
Restore : No

Operator : ##
Number   : 1
Signature: (uT uT) -> bool
Example  : query [const ubool value (("2010-11-11" "2011-01-03" TRUE FALSE) TRUE)] ## [const ubool value (("2011-01-01" "2012-09-17" FALSE TRUE) TRUE)]
Result   : TRUE


Operator : #
Number   : 1
Signature: (uT uT) -> (stream bool)
Example  : query [const ubool value (("2010-11-11" "2011-01-03" TRUE FALSE) TRUE)] # [const ubool value (("2011-01-01" "2012-09-17" FALSE TRUE) TRUE)] the_mvalue
Result   :


Operator : <<==
Number   : 1
Signature: (uT uT) -> bool
Example  : query [const ubool value (("2010-11-11" "2011-01-03" TRUE FALSE) TRUE)] <<== [const ubool value (("2011-01-01" "2012-09-17" FALSE TRUE) TRUE)]
Result   :


Operator : <<
Number   : 1
Signature: (uT uT) -> bool
Example  : query [const ubool value (("2010-11-11" "2011-01-03" TRUE FALSE) TRUE)] << [const ubool value (("2011-01-01" "2012-09-17" FALSE TRUE) TRUE)]
Result   :


Operator : <=
Number   : 1
Signature: (uT uT) -> (stream bool)
Example  : query [const ubool value (("2010-11-11" "2011-01-03" TRUE FALSE) TRUE)] <= [const ubool value (("2011-01-01" "2012-09-17" FALSE TRUE) TRUE)] the_mvalue
Result   :


Operator : <
Number   : 1
Signature: (uT uT) -> (stream bool)
Example  : query [const ubool value (("2010-11-11" "2011-01-03" TRUE FALSE) TRUE)] < [const ubool value (("2011-01-01" "2012-09-17" FALSE TRUE) TRUE)] the_mvalue
Result   :


Operator : ==
Number   : 1
Signature: (uT uT) -> bool
Example  : query [const ubool value (("2010-11-11" "2011-01-03" TRUE FALSE) TRUE)] == [const ubool value (("2011-01-01" "2012-09-17" FALSE TRUE) TRUE)]
Result   :


Operator : =
Number   : 1
Signature: (uT uT) -> bool
Example  : query [const ubool value (("2010-11-11" "2011-01-03" TRUE FALSE) TRUE)] = [const ubool value (("2011-01-01" "2012-09-17" FALSE TRUE) TRUE)] the_mvalue
Result   :


Operator : >=
Number   : 1
Signature: (uT uT) -> (stream bool)
Example  : query [const ubool value (("2010-11-11" "2011-01-03" TRUE FALSE) TRUE)] >= [const ubool value (("2011-01-01" "2012-09-17" FALSE TRUE) TRUE)] the_mvalue
Result   :


Operator : >>==
Number   : 1
Signature: (uT uT) -> bool
Example  : query [const ubool value (("2010-11-11" "2011-01-03" TRUE FALSE) TRUE)] >>== [const ubool value (("2011-01-01" "2012-09-17" FALSE TRUE) TRUE)]
Result   :


Operator : >>
Number   : 1
Signature: (uT uT) -> bool
Example  : query [const ubool value (("2010-11-11" "2011-01-03" TRUE FALSE) TRUE)] >> [const ubool value (("2011-01-01" "2012-09-17" FALSE TRUE) TRUE)]
Result   :


Operator : >
Number   : 1
Signature: (uT uT) -> (stream bool)
Example  : query [const ubool value (("2010-11-11" "2011-01-03" TRUE FALSE) TRUE)] > [const ubool value (("2011-01-01" "2012-09-17" FALSE TRUE) TRUE)] the_mvalue
Result   :


Operator : always
Number   : 1
Signature: ubool -> bool
Example  : query never(ubool1)
Result   :


Operator : always
Number   : 2
Signature: stream ubool -> bool
Example  : query never(ubool1)
Result   :

Operator : and
Number   : 1
Signature: (ubool ubool) -> ubool
Example  : query [const ubool value (("2010-11-11" "2011-01-03" TRUE FALSE) TRUE)] and [const ubool value (("2011-01-01" "2012-09-17" FALSE TRUE) TRUE)]
Result   :


Operator : and
Number   : 2
Signature: (ubool  bool) -> ubool
Example  : query [const ubool value (("2010-11-11" "2011-01-03" TRUE FALSE) TRUE)] and [const ubool value (("2011-01-01" "2012-09-17" FALSE TRUE) TRUE)]
Result   :


Operator : and
Number   : 3
Signature: (bool ubool) -> ubool
Example  : query [const ubool value (("2010-11-11" "2011-01-03" TRUE FALSE) TRUE)] and [const ubool value (("2011-01-01" "2012-09-17" FALSE TRUE) TRUE)]
Result   :


Operator : at
Number   : 1
Signature: (uT     T     ) -> uT
Example  : query upoint1 at point1
Result   :


Operator : atinstant
Number   : 1
Signature: (uT instant) -> iT
Example  : query upoint1 atinstant instant1
Result   :


Operator : atmax
Number   : 1
Signature: uT -> uT
Example  : query atmax( uT1 )
Result   :


Operator : atmax
Number   : 2
Signature: ureal -> (stream ureal)
Example  : query atmax( ureal1 ) count
Result   :


Operator : atmin
Number   : 1
Signature: uT    -> uT
Example  : query atmin( uT1 )
Result   :


Operator : atmin
Number   : 2
Signature: ureal -> (stream ureal)
Example  : query atmin( ureal1 ) count
Result   :


Operator : atperiods
Number   : 1
Signature: For T in {int, bool, real, string, point, region}:
(uT periods) -> stream uT
((stream uT) periods) -> stream uT
Example  : query upoint1 atperiods thehour(2003,11,11,8)
sfeed(upoint1) atperiods thehour(2003,11,11,8)
Result   :


Operator : atperiods
Number   : 1
Signature: (uT periods) -> stream uT
Example  : query upoint1 atperiods thehour(2003,11,11,8)
sfeed(upoint1) atperiods thehour(2003,11,11,8)
Result   :


Operator : atperiods
Number   : 2
Signature: ((stream uT) periods) -> stream uT
Example  : query upoint1 atperiods thehour(2003,11,11,8)
sfeed(upoint1) atperiods thehour(2003,11,11,8)
Result   :


Operator : circle
Number   : 1
Signature: (point real int) -> region
Example  : query circle (p,10.0,10)
Result   :


Operator : deftime
Number   : 1
Signature: uT -> periods
(for T in {bool, int, real, string, point, region})
Example  : query deftime( up1 )
Result   :


Operator : derivable
Number   : 1
Signature: mreal -> mbool
ureal -> ubool
Example  : query derivable (mreal)
Result   :


Operator : derivative
Number   : 1
Signature: {m|u}real -> {m|u}real
Example  : query derivable (mreal)
Result   :


Operator : distance
Number   : 1
Signature: (uT uT) -> ureal
Example  : query distance(upoint1,point1)
Result   :


Operator : distance
Number   : 2
Signature: (uT  T) -> ureal
Example  : query distance(upoint1,point1)
Result   :


Operator : distance
Number   : 3
Signature: ( T uT) -> ureal
Example  : query distance(upoint1,point1)
Result   :


Operator : final
Number   : 1
Signature: uT -> iT
(stream uT) -> iT
Example  : query final( upoint1 )
Result   :


Operator : final
Number   : 2
Signature: (stream uT) -> iT
Example  : query final( upoint1 )
Result   :


Operator : get_duration
Number   : 1
Signature: (periods) -> real
Example  : query get_duration(periods)
Result   :


Operator : initial
Number   : 1
Signature: uT -> iT
Example  : query initial( upoint1 )
Result   :


Operator : initial
Number   : 2
Signature: (stream uT) -> iT
Example  : query initial( upoint1 )
Result   :


Operator : inside
Number   : 1
Signature: (upoint  uregion) -> (stream ubool)
Example  : query upoint1 inside uregion1 count
Result   :


Operator : intersection
Number   : 1
Signature: (uT uT) -> (stream uT)
Example  : query intersection(upoint1, upoint2) count
Result   :


Operator : intersection
Number   : 2
Signature: (uT  T) -> (stream uT)
Example  : query intersection(upoint1, upoint2) count
Result   :


Operator : intersection
Number   : 3
Signature: ( T uT) -> (stream uT)
Example  : query intersection(upoint1, upoint2) count
Result   :


Operator : intersection
Number   : 4
Signature: (line upoint) -> (stream upoint)
Example  : query intersection(upoint1, upoint2) count
Result   :


Operator : intersection
Number   : 5
Signature: (upoint line) -> (stream upoint)
Example  : query intersection(upoint1, upoint2) count
Result   :


Operator : intersection
Number   : 6
Signature: (upoint uregion) -> (stream upoint)
Example  : query intersection(upoint1, upoint2) count
Result   :


Operator : intersection
Number   : 7
Signature: (uregion upoint) -> (stream upoint)
Example  : query intersection(upoint1, upoint2) count
Result   :


Operator : intersection
Number   : 8
Signature: (upoint region) -> (stream upoint)
Example  : query intersection(upoint1, upoint2) count
Result   :


Operator : intersection
Number   : 9
Signature: (region upoint) -> (stream upoint)
Example  : query intersection(upoint1, upoint2) count
Result   :


Operator : isempty
Number   : 1
Signature: U -> bool
Example  : query is_empty([const uint value undef])
Result   :


Operator : makemvalue
Number   : 1
Signature: stream (tuple ((x1 t1)...(xi uint)...(xn tn))) xi -> mint
Example  : query the_unit(123, [const instant value "2000-01-03"], [const instant value "2000-01-04"], FALSE, TRUE) feed transformstream makemvalue[elem]
Result   : ((("2000-01-03" "2000-01-04" FALSE TRUE)123))


Operator : makemvalue
Number   : 2
Signature: stream (tuple ((x1 t1)...(xi ubool)...(xn tn))) xi -> mbool
Example  : query the_unit(TRUE, [const instant value "2000-01-03"], [const instant value "2000-01-04"], TRUE, FALSE) feed transformstream makemvalue[elem]
Result   : ((("2000-01-03" "2000-01-04" TRUE FALSE)TRUE))


Operator : makemvalue
Number   : 3
Signature: stream (tuple ((x1 t1)...(xi ustring)...(xn tn))) xi -> mstring
Example  : query the_unit("Test!", [const instant value "2000-01-03"], [const instant value "2000-01-04"], TRUE, TRUE) feed transformstream makemvalue[elem]
Result   : ((("2000-01-03" "2000-01-04" TRUE TRUE)"Test!"))


Operator : makemvalue
Number   : 4
Signature: stream (tuple ((x1 t1)...(xi ureal)...(xn tn))) xi -> mreal
Example  : query the_unit(-1.0, 2.3, 4.5, TRUE, [const instant value "2000-01-03"], [const instant value "2000-01-04"], FALSE, FALSE) feed transformstream makemvalue[elem]
Result   : ((("2000-01-03" "2000-01-04" FALSE FALSE)(-1.0 2.3 4.5 TRUE)))


Operator : makemvalue
Number   : 5
Signature: stream (tuple ((x1 t1)...(xi upoint)...(xn tn))) xi -> mpoint
Example  : query the_unit(makepoint(1000.0, -1000.0), makepoint(-2000.0, 2000.0), [const instant value "2000-01-03"], [const instant value "2000-01-04"], FALSE, FALSE) feed transformstream makemvalue[elem]
Result   : ((("2000-01-03" "2000-01-04" FALSE FALSE)(1000.0 -1000.0 -2000.0 2000.0)))


Operator : makemvalue
Number   : 6
Signature: stream (tuple ((x1 t1)...(xi uregion)...(xn tn))) xi -> movingregion
Example  : query
Result   : CRASH

Operator : makepoint
Number   : 1
Signature: int x int -> point
Example  : query makepoint (5,5)
Result   : (5.0 5.0)


Operator : makepoint
Number   : 2
Signature: real x real -> point
Example  : query makepoint (5.0,5.0)
Result   : (5.0 5.0)


Operator : never
Number   : 1
Signature: ubool -> bool
Example  : query never([const ubool value (("2010-11-11" "2011-01-03" TRUE FALSE) TRUE)])
Result   : FALSE


Operator : never
Number   : 2
Signature: (stream ubool) -> bool
Example  : query never(units(speed(train1) > 15.0))
Result   : FALSE


Operator : no_components
Number   : 1
Signature: (uT) -> uint
Example  : query no_components([const uint value undef])
Result   : undef


Operator : not
Number   : 1
Signature: ubool -> ubool
Example  : query not([const ubool value (("2010-11-11" "2011-01-03" TRUE FALSE) TRUE)])
Result   : (("2010-11-11" "2011-01-03" TRUE FALSE) FALSE)


Operator : or
Number   : 1
Signature: (ubool ubool) -> ubool
Example  : query [const ubool value (("2010-11-11" "2011-01-03" TRUE FALSE) TRUE)] or [const ubool value (("2011-01-01" "2012-09-17" FALSE TRUE) TRUE)]
Result   : (("2011-01-01" "2011-01-03" FALSE FALSE) TRUE)


Operator : or
Number   : 2
Signature: (ubool  bool) -> ubool
Example  : query [const ubool value (("2010-11-11" "2011-01-03" TRUE FALSE) TRUE)] or FALSE
Result   : (("2010-11-11" "2011-01-03" TRUE FALSE) TRUE)


Operator : or
Number   : 3
Signature: ( bool ubool) -> ubool
Example  : query FALSE or [const ubool value (("2010-11-11" "2011-01-03" TRUE FALSE) TRUE)]
Result   : (("2010-11-11" "2011-01-03" TRUE FALSE) TRUE))


Operator : passes
Number   : 1
Signature: (uT T) -> bool
Example  : query the_unit(mehringdamm, alexanderplatz, six30, nine, FALSE, TRUE) passes alexanderplatz
Result   : TRUE


Operator : point2d
Number   : 1
Signature: (periods) -> point
Example  : query point2d(deftime(train1)
Result   : (1417.2520833333333 1417.2798611111111)


Operator : present
Number   : 1
Signature: (mT instant) -> bool
Example  : query train1 present six30
Result   : TRUE


Operator : present
Number   : 2
Signature: (uT instant) -> bool
Example  : query the_unit(mehringdamm, alexanderplatz, six30, nine, TRUE, TRUE) present six30
Result   : TRUE


Operator : present
Number   : 3
Signature: (mT periods) -> bool
Example  : query train1 present deftime(train1)
Result   : TRUE


Operator : present
Number   : 4
Signature: (uT periods) -> bool
Example  : query the_unit(mehringdamm, alexanderplatz, six30, nine, FALSE, TRUE) present deftime(train1)
Result   : FALSE


Operator : queryrect2d
Number   : 1
Signature: (instant) -> rect
Example  : query queryrect2d(six30)
Result   : (-2.147483648E9 1417.2708333333333 1417.2708333333333 2.147483648E9)


Operator : sometimes
Number   : 1
Signature: ubool -> bool
Example  : query sometimes(the_unit(the_ivalue(six30,TRUE), create_duration(0, 600000), TRUE, TRUE))
Result   : TRUE


Operator : sometimes
Number   : 2
Signature: (stream ubool) -> bool
Example  : query sometimes(units(isempty(train1)))
Result   : TRUE


Operator : speed
Number   : 1
Signature: mpoint -> mreal
Example  : query speed(the_unit(mehringdamm, alexanderplatz, six30, nine, FALSE, TRUE) feed the_mvalue)
Result   : ((("2003-11-20-06:30" "2003-11-20-09:00" FALSE TRUE)(0.0 0.0 0.3839392956133162 FALSE)))


Operator : speed
Number   : 2
Signature: upoint -> ureal
Example  : query speed(the_unit(mehringdamm, alexanderplatz, six30, nine, FALSE, TRUE))
Result   : (("2003-11-20-06:30" "2003-11-20-09:00" FALSE TRUE)(0.0 0.0 0.3839392956133162 FALSE))


Operator : the_ivalue
Number   : 1
Signature: instant T --> iT
Example  : query the_ivalue(six30, alexanderplatz)
Result   : ("2003-11-20-06:30" (11068.0 12895.0))


Operator : the_mvalue
Number   : 1
Signature: (stream uT) -> mT
Example  : query the_unit(mehringdamm, alexanderplatz, six30, nine, FALSE, TRUE) feed the_mvalue
Result   : ((("2003-11-20-06:30" "2003-11-20-09:00" FALSE TRUE)(9396.0 9871.0 11068.0 12895.0)))


Operator : the_unit
Number   : 1
Signature: point  point  instant instant bool bool --> ubool
Example  : query the_unit(mehringdamm, alexanderplatz, six30, nine, FALSE, TRUE)
Result   : (("2003-11-20-06:30" "2003-11-20-09:00" FALSE TRUE)(9396.0 9871.0 11068.0 12895.0))


Operator : the_unit
Number   : 2
Signature: ipoint ipoint bool    bool              --> ubool
Example  : query the_unit(the_ivalue(six30,mehringdamm), the_ivalue(six30,makepoint(10,100)), TRUE, TRUE)
Result   : (("2003-11-20-06:30" "2003-11-20-06:30" TRUE TRUE)(10.0 100.0 9396.0 9871.0))


Operator : the_unit
Number   : 3
Signature: real real real bool instant instant bool bool --> ureal
Example  : query the_unit(-5.6, 3.2, 4.9, TRUE, six30, nine, FALSE, TRUE)
Result   : (("2003-11-20-06:30" "2003-11-20-09:00" FALSE TRUE)(-5.6 3.2 4.9 TRUE))


Operator : the_unit
Number   : 4
Signature: iT duration bool bool --> uT
Example  : query the_unit(the_ivalue(six30,15), create_duration(0, 600000), TRUE, TRUE)
Result   : (("2003-11-20-06:30" "2003-11-20-06:40" TRUE TRUE)15)


Operator : the_unit
Number   : 5
Signature: T instant instant bool bool --> uT
Example  : query the_unit(TRUE, six30, nine, FALSE, TRUE)
Result   : (("2003-11-20-06:30" "2003-11-20-09:00" FALSE TRUE) TRUE)


Operator : trajectory
Number   : 1
Signature: upoint -> line
Example  : query UnitTrains feed head[3] project[UTrip] transformstream use[fun(X:upoint) trajectory(X)] aggregateS[fun(Y:line, Z:line) union_new(Y,Z); [const line value ()]]
Result   : ((13244.0 10635.0 13287.0 10675.0)(13287.0 10675.0 13336.0 10785.0)(13336.0 10785.0 13506.0 11159.0))


Operator : uint2ureal
Number   : 1
Signature: uint -> ureal
Example  : query uint2ureal([const uint value (("2010-11-11" "2011-01-03" TRUE FALSE) -5)])
Result   : (("2010-11-11" "2011-01-03" TRUE FALSE)(0.0 0.0 -5.0 FALSE))


Operator : velocity
Number   : 1
Signature: upoint -> upoint
Example  : query units(Trains feed extract[Trip]) use[fun(X:upoint) velocity(X)] count
Result   : 113


Operator : velocity
Number   : 1
Signature: mpoint -> mpoint
Example  : query units(velocity(Trains feed extract[Trip]) at makepoint(0, 0)) count
Result   : 23


