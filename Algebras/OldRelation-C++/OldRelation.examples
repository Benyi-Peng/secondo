Database: berlintest
Restore : No

Operator : GROUP
Number   : 1
Signature: ((stream x)) -> (mrel x)
Example  : query ten feed groupby[no; Sum: fun(g1: GROUP) g1 count] count
Result   : 10 


Operator : TUPLE2
Number   : 1
Signature: ((stream x) (stream y) ...) -> y, ((mrel x) (mrel y) ...) -> y
Example  : query ten feed ten feed {B} symmjoin[ fun(t1: TUPLE, t2: TUPLE2) attr(t1,no) = attr(t2,no_B)] count
Result   : 10 


Operator : TUPLE
Number   : 1
Signature: ((stream x)...) -> x, ((mrel x)...) -> x
Example  : query ten feed extend[No2: fun(t1: TUPLE) attr(t1,no) * 2] count
Result   : 10 


Operator : attr
Number   : 1
Signature: ((tuple ((x1 t1)...(xn tn))) xi)  -> ti)
Example  : query ten feed extend[No2: fun(t1: TUPLE) attr(t1,no)] count
Result   : 10 


Operator : avg
Number   : 1
Signature: ((stream (mtuple([a1:d1, ... ,an:dn]))) x ai) -> real
Example  : query cities feed avg [population]
Result   : 


Operator : cancel
Number   : 1
Signature: ((stream x) (map x bool)) -> (stream x)
Example  : query cities feed cancel [.cityname = "Dortmund"] consume
Result   : 


Operator : concat
Number   : 1
Signature: ((stream (mtuple (a1:d1 ... an:dn))) (stream (mtuple (b1:d1 ... bn:dn)))) -> (stream (mtuple (a1:d1 ... an:dn)))
Example  : query ten feed five feed concat consume
Result   : 


Operator : consume
Number   : 1
Signature: (stream x) -> (mrel x)
Example  : query cities feed consume
Result   : 


Operator : count
Number   : 1
Signature: ((stream/mrel (mtuple x))) -> int
Example  : query cities count 
Result   : 


Operator : extend
Number   : 1
Signature: (stream(mtuple(x)) x [(a1, (mtuple(x) -> d1)) ... (an, (mtuple(x) -> dn))] -> stream(mtuple(x@[a1:d1, ... , an:dn])))
Example  : query ten feed extend [mult5 : .nr * 5, mod2 : .nr mod 2] consume
Result   : 


Operator : extract
Number   : 1
Signature: ((stream (mtuple([a1:d1, ... ,an:dn]))) x ai) -> di
Example  : query cities feed extract [population]
Result   : 


Operator : feed
Number   : 1
Signature: (mrel x) -> (stream x)
Example  : query cities feed consume
Result   : 


Operator : filter
Number   : 1
Signature: ((stream x) (map x bool)) -> (stream x)
Example  : query cities feed filter [.population > 500000] consume
Result   : 


Operator : groupby
Number   : 1
Signature: ((stream (mtuple (a1:d1 ... an:dn))) (ai1 ... aik) ((bj1 (fun (mrel (mtuple (a1:d1 ... an:dn))) (_))) ... (bjl (fun (mrel (mtuple (a1:d1 ... an:dn))) (_))))) -> (stream (mtuple (ai1:di1 ... aik:dik bj1 ... bjl)))
Example  : query Employee feed sortby[DeptNr asc] groupby[DeptNr; anz : group feed count] consume
Result   : 


Operator : hashjoin
Number   : 1
Signature: ((stream (mtuple ((x1 t1) ... (xn tn)))) (stream (mtuple ((y1 d1) ... (ym dm)))) xi yj nbuckets) -> (stream (mtuple ((x1 t1) ... (xn tn) (y1 d1) ... (ym dm))))
Example  : query Employee feed Dept feed rename[A] hashjoin[DeptNr, DeptNr_A, 17] sort consume
Result   : 


Operator : head
Number   : 1
Signature: ((stream (mtuple([a1:d1, ... ,an:dn]))) x int) -> (stream (mtuple([a1:d1, ... ,an:dn])))
Example  : query cities feed head[10] consume
Result   : 


Operator : loopjoin
Number   : 1
Signature: ((stream mtuple1) (map mtuple1 mrel(mtuple2))) -> (stream mtuple1*mtuple2)
Example  : query cities feed loopjoin [five feed filter [.no > 2]] consume
Result   : 


Operator : loopjoinrel
Number   : 1
Signature: ((stream mtuple1) (map mtuple1 mrel(mtuple2))) -> (stream mtuple1*mtuple2)
Example  : query cities feed loopjoin [ five ] consume
Result   : 


Operator : loopsel
Number   : 1
Signature: ((stream mtuple1) (map mtuple1 mrel(mtuple2))) -> (stream mtuple2)
Example  : query cities feed loopsel [five feed filter [.no > 2]] consume
Result   : 


Operator : max
Number   : 1
Signature: ((stream (mtuple([a1:d1, ... ,an:dn]))) x ai) -> di
Example  : query cities feed max [ cityname ]
Result   : 


Operator : mergediff
Number   : 1
Signature: ((stream (mtuple ((x1 t1) ... (xn tn)))) stream (mtuple ((x1 t1) ... (xn tn))))) -> (stream (mtuple ((x1 t1) ... (xn tn))))
Example  : query twenty feed oddtwenty feed mergediff consume
Result   : 


Operator : mergejoin
Number   : 1
Signature: ((stream (mtuple ((x1 t1) ... (xn tn)))) (stream (mtuple ((y1 d1) ... (ym dm)))) xi yj) -> (stream (mtuple ((x1 t1) ... (xn tn) (y1 d1) ... (ym dm))))
Example  : query duplicates feed ten feed rename[A] mergejoin[no, no_A] sort rdup consume
Result   : 


Operator : mergesec
Number   : 1
Signature: ((stream (mtuple ((x1 t1) ... (xn tn)))) stream (mtuple ((x1 t1) ... (xn tn))))) -> (stream (mtuple ((x1 t1) ... (xn tn))))
Example  : query twenty feed oddtwenty feed mergesec consume
Result   : 


Operator : mergeunion
Number   : 1
Signature: ((stream (mtuple ((x1 t1) ... (xn tn))))stream (mtuple ((x1 t1) ... (xn tn))))) -> (stream (mtuple ((x1 t1) ... (xn tn))))
Example  : query twenty feed oddtwenty feed mergeunion consume
Result   : 


Operator : min
Number   : 1
Signature: ((stream (mtuple([a1:d1, ... ,an:dn]))) x ai) -> di
Example  : query cities feed min [ cityname ]
Result   : 


Operator : product
Number   : 1
Signature: ((stream (mtuple (x1 ... xn))) (stream (mtuple (y1 ... ym)))) -> (stream (mtuple (x1 ... xn y1 ... ym)))
Example  : query ten feed twenty feed product count
Result   : 


Operator : project
Number   : 1
Signature: ((stream (mtuple ((x1 T1) ... (xn Tn)))) (ai1 ... aik)) -> (stream (mtuple ((ai1 Ti1) ... (aik Tik))))
Example  : query cities feed project[cityname, population] consume
Result   : 


Operator : rdup
Number   : 1
Signature: ((stream (mtuple([a1:d1, ... ,an:dn])))) -> (stream (mtuple([a1:d1, ... ,an:dn])))
Example  : query twenty feed ten feed concat sort rdup consume
Result   : 


Operator : remove
Number   : 1
Signature: ((stream (mtuple ((x1 T1) ... (xn Tn)))) (ai1 ... aik)) -> (stream (mtuple ((aj1 Tj1) ... (ajn-k Tjn-k))))
Example  : query cities feed remove[zipcode] consume
Result   : 


Operator : rename
Number   : 1
Signature: ((stream (mtuple([a1:d1, ... ,an:dn)))ar) -> (stream (mtuple([a1ar:d1, ... ,anar:dn)))
Example  : query ten feed rename [r1] consume
Result   : 


Operator : sample
Number   : 1
Signature: (mrel x) int real -> (stream x)
Example  : query cities sample[0, 0.45] count
Result   : 


Operator : sort
Number   : 1
Signature: ((stream (mtuple([a1:d1, ... ,an:dn])))) -> (stream (mtuple([a1:d1, ... ,an:dn])))
Example  : query cities feed sort consume
Result   : 


Operator : sortby
Number   : 1
Signature: ((stream (mtuple([a1:d1, ... ,an:dn]))) ((xi1 asc/desc) ... (xij asc/desc))) -> (stream (mtuple([a1:d1, ... ,an:dn])))
Example  : query employee feed sortby[DeptNo asc] consume
Result   : 


Operator : sortmergejoin
Number   : 1
Signature: ((stream (mtuple ((x1 t1) ... (xn tn)))) (stream (mtuple ((y1 d1) ... (ym dm)))) xi yj) -> (stream (mtuple ((x1 t1) ... (xn tn) (y1 d1) ... (ym dm))))
Example  : query duplicates feed ten feed mergejoin[no, nr] consume
Result   : 


Operator : sum
Number   : 1
Signature: ((stream (mtuple([a1:d1, ... ,an:dn]))) x ai) -> di
Example  : query cities feed sum[population]
Result   : 


