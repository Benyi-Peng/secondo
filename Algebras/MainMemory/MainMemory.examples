Sequential: Yes
Database  : berlintest
Restore   : No

Operator  : memload
Number    : 1
Signature : string -> bool
Example   : query memload ("ten")
Result    : TRUE

Operator  : meminit
Number    : 2
Signature : int -> int
Example   : query meminit (256)
Result    : 256

Operator  : mfeed
Number    : 3
Signature : string -> stream(tuple)
Example   : query "ten" mfeed count
Result    : 10

Operator  : letmconsume
Number    : 4
Signature : stream(tuple(...)) x string -> string
Example   : query "ten" mfeed letmconsume ["zehn"]
Result    : "zehn"

Operator  : memobject
Number    : 5
Signature : string -> m:MEMLOADABLE
Example   : query memobject ("ten") count
Result    : 10

Operator  : memlet
Number    : 6
Signature : string x m:MEMLOADABLE -> bool
Example   : query memlet ("fuenf", ten feed head[5])
Result    : TRUE

Operator  : memdelete
Number    : 7
Signature : string -> bool
Example   : query memdelete ("ten")
Result    : TRUE

Operator  : memupdate
Number    : 8
Signature : string x m:MEMLOADABLE -> bool
Example   : query memupdate ("fuenf", ten feed head[7])
Result    : TRUE

Operator  : memload
Number    : 9
Signature : string -> bool
Example   : query memload ("strassen")
Result    : TRUE

Operator  : memgetcatalog
Number    : 10
Signature : -> stream(tuple(...))
Example   : query memgetcatalog () count
Result    : 3

Operator  : memlet
Number    : 11
Signature : string x m:MEMLOADABLE -> bool
Example   : query memlet ("fuenf2", ten feed head[5])
Result    : TRUE

Operator  : mcreateRtree
Number    : 12
Signature : string x string -> string
Example   : query mcreateRtree ("strassen", "GeoData")
Result    : "strassen_GeoData"

Operator  : memsize
Number    : 13
Signature : -> int
Example   : query memsize ()
Result    : 256

Operator  : memload
Number    : 14
Signature : string -> bool
Example   : query memload ("ten")
Result    : TRUE

Operator  : minsert
Number    : 15
Signature : stream(tuple) x string -> stream(tuple)
Example   : query minsert (ten feed head [5], "ten") count
Result    : 15

Operator  : mwindowintersects
Number    : 16
Signature : string x string x T -> stream(tuple) where T in {rect<d>} U SPATIAL2D U SPATIAL3D U SPATIAL4D U SPATIAL8D
Example   : query mwindowintersects("strassen_GeoData", "strassen", bbox(thecenter)) count
Result    : 1266

Operator  : mconsume
Number    : 17
Signature : stream(tuple) -> memoryRelObject
Example   : query "ten" mfeed mconsume
Result    : TRUE


Operator  : memclear
Number    : 18
Signature : -> bool
Example   : query memclear ()
Result    : TRUE

Operator  : memload
Number    : 19
Signature : string -> bool
Example   : query memload ("Staedte")
Result    : TRUE

Operator  : mcreateAVLtree
Number    : 20
Signature : string x string -> string
Example   : query mcreateAVLtree ("Staedte", "SName")
Result    : "Staedte_SName"

Operator  : mexactmatch
Number    : 21
Signature : string x string x key -> stream(tuple)
Example   : query "Staedte_SName" "Staedte" mexactmatch ["Aachen"] count;
Result    : 1

Operator  : mrange
Number    : 22
Signature : string x string x key x key-> stream(tuple)
Example   : query "Staedte_SName" "Staedte" mrange ["Aachen", "Dortmund"] count;
Result    : 10

Operator  : memload
Number    : 23
Signature : string -> bool
Example   : query memload ("ten")
Result    : TRUE

Operator  : mcreateAVLtree
Number    : 24
Signature : string x string -> string
Example   : query mcreateAVLtree ("ten", "No")
Result    : "ten_No"

Operator  : matchbelow
Number    : 25
Signature : string x string x key -> stream(tuple)
Example   : query "ten_No" "ten" matchbelow [2] count;
Result    : 1

Operator  : memloadflob
Number    : 26
Signature : string -> bool
Example   : query memloadflob ("Trains")
Result    : TRUE
