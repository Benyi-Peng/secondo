Operator : #
Number   : 1
Signature: (int int) -> bool, (int real) -> bool, (real int) -> bool, (real real) -> bool, (bool bool) -> bool, (string string) -> bool
Example  : query 2.1 # 2.01
Result   : TRUE


Operator : *
Number   : 1
Signature: (int int) -> int, (int real) -> real, (real int) -> real, (real real) -> real
Example  : query 5 * 1.4 
Result   : 7


Operator : +
Number   : 1
Signature: (int int) -> int, (int real) -> real, (real int) -> real, (real real) -> real (string string) -> string
Example  : query -1.2 + 7
Result   : 5.8


Operator : -
Number   : 1
Signature: (int int) -> int, (int real) -> real, (real int) -> real, (real real) -> real
Example  : query -.2 - 4
Result   : -4.2


Operator : /
Number   : 1
Signature: (int int) -> real, (int real) -> real, (real int) -> real, (real real) -> real
Example  : query 5 / 2 
Result   : 2.5


Operator : <
Number   : 1
Signature: (int int) -> bool, (int real) -> bool, (real int) -> bool, (real real) -> bool, (bool bool) -> bool, (string string) -> bool
Example  : query "house" < "hotel"
Result   : FALSE


Operator : <=
Number   : 1
Signature: (int int) -> bool, (int real) -> bool, (real int) -> bool, (real real) -> bool, (bool bool) -> bool, (string string) -> bool
Example  : query 8.2 <= 8.2
Result   : TRUE


Operator : =
Number   : 1
Signature: (int int) -> bool, (int real) -> bool, (real int) -> bool, (real real) -> bool, (bool bool) -> bool, (string string) -> bool
Example  : query 2.1 = 2.01
Result   : FALSE


Operator : >
Number   : 1
Signature: (int int) -> bool, (int real) -> bool, (real int) -> bool, (real real) -> bool, (bool bool) -> bool, (string string) -> bool
Example  : query 3 > 4.1
Result   : FALSE


Operator : >=
Number   : 1
Signature: (int int) -> bool, (int real) -> bool, (real int) -> bool, (real real) -> bool, (bool bool) -> bool, (string string) -> bool
Example  : query 3 >= 5
Result   : FALSE


Operator : and
Number   : 1
Signature: (bool bool) -> bool
Example  : query (8 = 8) and (3 < 4)
Result   : TRUE


Operator : between
Number   : 1
Signature: (int x int x int) ->  bool
Example  : query 5 between [3, 8]
Result   : TRUE

Operator : between
Number   : 2
Signature: (string x string x string) ->  bool
Example  : query "house" between ["ha", "hu"]
Result   : TRUE

Operator : contains
Number   : 1
Signature: (string string) -> bool
Example  : query "contains" contains "tai"
Result   : TRUE


Operator : div
Number   : 1
Signature: (int int) -> int
Example  : query 5 div 2 
Result   : 2


Operator : elapsedtime
Number   : 1
Signature: (any type) ->  string.
Example  : query plz feed elapsedtime
Result   : crashes


Operator : hashvalue
Number   : 1
Signature: T in DATA, y in int, T x y -> int
Example  : query hashvalue( "Test", 9997 )
Result   : 3719


Operator : ifthenelse
Number   : 1
Signature: (bool x T x T) ->  T
Example  : query ifthenelse(3 < 5,[const string value "less"],[const string value "greater"])
Result   : "less"


Operator : intersection
Number   : 1
Signature: (int int) -> int
Example  : query intersection(3 , 3)
Result   : 3 

Operator : intersection
Number   : 2
Signature: (real real) -> real
Example  : query intersection(3.0 , 3.0)
Result   : 3.0 

Operator : intersection
Number   : 3
Signature: (bool bool) -> bool
Example  : query intersection(TRUE , TRUE)
Result   : TRUE 

Operator : intersection
Number   : 4
Signature: (string string) -> string
Example  : query intersection("abcd" , "abcd")
Result   : "abcd" 

Operator : isempty
Number   : 1
Signature: bool -> bool, int -> bool, real -> bool, string -> bool
Example  : query isempty ( 8 )
Result   : FALSE


Operator : keywords
Number   : 1
Signature: (string) -> (stream string)
Example  : query "this is a test" keywords count
Result   : 4


Operator : ldistance
Number   : 1
Signature: string x string  -> int
Example  : query ldistance( "hello", "world" )
Result   : 4


Operator : log
Number   : 1
Signature: int -> int 
Example  : query log (200)
Result   : 7


Operator : minus
Number   : 1
Signature:  (int int) -> int, (real real) -> real, (bool bool) -> bool, (string string) -> string
Example  : query 4 minus 3
Result   : 4 


Operator : mod
Number   : 1
Signature: (int int) -> int
Example  : query 8 mod 3 
Result   : 2


Operator : not
Number   : 1
Signature: bool -> bool
Example  : query not ( 4=4 )
Result   : FALSE


Operator : or
Number   : 1
Signature: (bool bool) -> bool
Example  : query (3 <= 4) or ("hotel" > "house")
Result   : TRUE


Operator : randint
Number   : 1
Signature: int -> int 
Example  : query randint (9)
Result   : 0


Operator : randmax
Number   : 1
Signature:  -> int 
Example  : query randmax()
Result   : 32767


Operator : relcount
Number   : 1
Signature: string -> int
Example  : query "ten" relcount
Result   : 10


Operator : relcount2
Number   : 1
Signature: string -> int
Example  : query "ten" relcount2
Result   : 10


Operator : seqinit
Number   : 1
Signature: int -> bool 
Example  : query seqinit(100)
Result   : TRUE


Operator : seqnext
Number   : 1
Signature:  -> int 
Example  : query seqnext ()
Result   : 100


Operator : setoption
Number   : 1
Signature: string x int -> bool
Example  : query setoption("MaxMemPerOperator", 512*1024);
Result   : TRUE


Operator : sqrt
Number   : 1
Signature: real -> real
Example  : query sqrt(2.1)
Result   : 1.44914


Operator : starts
Number   : 1
Signature: (string string) -> bool
Example  : query "starts" starts "st"
Result   : TRUE


Operator : substr
Number   : 1
Signature: (string x int x int) ->  string.
Example  : query substr("Hello World!", 2, 8)
Result   : "ello Wo"


Operator : upper
Number   : 1
Signature: string -> string
Example  : query upper ( "hello" )
Result   : "hellp"


