/* Generated by Together */

public class rr_common_border {

    public static void main (String[] args) {

        SegList r1 = null;
        SegList r2 = null;
        SegList lResult = null;
	
	System.out.println("loading...");
	r1 = RPGConv.getRegions ("poly480_1.ply");
	//r1 = RPGConv.getRegions("polyLinks512.ply");
	if (!RPGConv.lastConversionSuccessful()){
	    System.out.println (RPGConv.lastConversionErrorMsg());
	    System.exit(0);
	}
	r2 = RPGConv.getRegions ("poly480_1.ply");
	//r2 = RPGConv.getRegions("polyRechts512.ply");
	if (!RPGConv.lastConversionSuccessful()){
	    System.out.println (RPGConv.lastConversionErrorMsg());
	    System.exit(0);
	}

	System.out.println("scaling...");
	Rational fact = new Rational(70);
	for (int i = 0; i < r1.size(); i++) {
	    ((Segment)r1.get(i)).zoom(fact); }
	for (int i = 0; i < r2.size(); i++) {
	    ((Segment)r2.get(i)).zoom(fact); }

	/*
        Segment s1 = null;
        Segment s2 = null;
        Segment s3 = null;
        Segment s4 = null;
        Segment s5 = null;
        Segment s6 = null;
        Segment s7 = null;
        Segment s8 = null;
        Segment s9 = null;
        Segment s10 = null;
        Segment s11 = null;
        Segment s12 = null;
        Segment s13 = null;
        Segment s14 = null;
        Segment s15 = null;
        Segment s16 = null;
        Segment s17 = null;
        Segment s18 = null;
        Segment s19 = null;
        Segment s20 = null;
	
        Point p1 = new Point (1,2);
	Point p2 = new Point (2,6);
	Point p3 = new Point (5,8);
	Point p4 = new Point (6.5,4.5);
	Point p5 = new Point (5.5,4);
	Point p6 = new Point (4.5,3);
	Point p7 = new Point (4.5,2);
	Point p8 = new Point (4,1.5);
	Point p9 = new Point (5,0.5);
	Point p10 = new Point (2,1);
	
	Point p11 = new Point (5,0.5);
	Point p12 = new Point (4,1.5);
	Point p13 = new Point (4.5,2);
	Point p14 = new Point (4.5,3);
	Point p15 = new Point (5.5,4);
	Point p16 = new Point (6.5,4.5);
	Point p17 = new Point (9,5.5);
	Point p18 = new Point (9.5,3.5);
	Point p19 = new Point (7,2.5);
	Point p20 = new Point (8,1);
	
	//Segments for r1
	s1 = new Segment (p1, p2);
	s2 = new Segment (p2, p3);
	s3 = new Segment (p3, p4);
	s4 = new Segment (p4, p5);
	s5 = new Segment (p5, p6);
	s6 = new Segment (p6, p7);
	s7 = new Segment (p7, p8);
	s8 = new Segment (p8, p9);
	s9 = new Segment (p9, p10);
	s10 = new Segment (p10, p1);
	
	//Segments for r2
	s11 = new Segment (p11, p12);
	s12 = new Segment (p12, p13);
	s13 = new Segment (p13, p14);
	s14 = new Segment (p14, p15);
	s15 = new Segment (p15, p16);
	s16 = new Segment (p16, p17);
	s17 = new Segment (p17, p18);
	s18 = new Segment (p18, p19);
	s19 = new Segment (p19, p20);
	s20 = new Segment (p20, p11);
	
	r1 = new SegList();
	r2 = new SegList();
	
	r1.add (s1);
	r1.add (s2);
	r1.add (s3);
	r1.add (s4);
	r1.add (s5);
	r1.add (s6);
	r1.add (s7);
	r1.add (s8);
	r1.add (s9);
	r1.add (s10);
	
	r2.add (s11);
	r2.add (s12);
	r2.add (s13);
	r2.add (s14);
	r2.add (s15);
	r2.add (s16);
	r2.add (s17);
	r2.add (s18);
	r2.add (s19);
	r2.add (s20);
	*/
	System.out.println("triangulating...");
        TriList t1 = (new Polygons (r1)).triangles();
        TriList t2 = (new Polygons (r2)).triangles();
	
	System.out.println("finished preprocessing.");
	
	long summe = 0;
        for (int n = 0; n < 1; n++) {
	    
	    long millis1 = System.currentTimeMillis();
	    for (int i = 0; i<1; i++) {
                lResult = Algebra.rr_common_border (t1, t2);
            }
	    long millis2 = System.currentTimeMillis();
	    System.out.println ("Laufzeit: " + (millis2 - millis1));
	    summe = summe + (millis2 - millis1);
        }
	
        System.out.println ("Summe: " + summe);
        System.out.println ("Durchschnittliche Laufzeit: " + summe/10 + " ms");
	/*
	GFXout zzz = new GFXout();
	zzz.initWindow();
	zzz.addList(lResult);
	zzz.showIt();
	*/
    }
    
    
    
}

