/* Generated by Together */

public class lr_inside {
    
    public static void main (String[] args) {

        SegList r1 = null;
        SegList l2 = null;
        boolean lResult = false;
	
	r1 = RPGConv.getRegions ("InsideTest1024.ply");
        if (!RPGConv.lastConversionSuccessful()){
            System.out.println (RPGConv.lastConversionErrorMsg());
            System.exit(0);
        }
        l2 = RPGConv.getLines ("Lines1024Inside1024.ply");
        if (!RPGConv.lastConversionSuccessful()){
            System.out.println (RPGConv.lastConversionErrorMsg());
            System.exit(0);
        }

	Rational fact = new Rational(70);
	for (int i = 0; i < r1.size(); i++) {
	    ((Segment)r1.get(i)).zoom(fact); }
	for (int i = 0; i < l2.size(); i++) {
	    ((Segment)l2.get(i)).zoom(fact); }
	
	//nt.zoom(fact); ns.zoom(fact);
        TriList t1 = (new Polygons (r1)).triangles();

	//System.out.println("triangles:"); t1.print();
	//System.out.println("\nsegments:"); l2.print();
	//System.exit(0);
	
	/*
	GFXout gfx = new GFXout();
	gfx.initWindow();
	gfx.addList(t1);
	gfx.addList(r1);
	//gfx.add(new Point(new Rational(3423756,98521),new Rational(26379591,98521)));
	//gfx.add(new Point(604,716));
	//gfx.add(nt);
	//gfx.add(ns.startpoint);
	//gfx.add(ns.endpoint);
	gfx.addList(l2);
	gfx.showIt();
	*/
	
	long summe = 0;
        for (int n = 0; n < 10; n++) {
	    
	    long millis1 = System.currentTimeMillis();
	    for (int i = 0; i<1; i++) {
                lResult = Algebra.lr_inside (l2, t1);
            }
	    long millis2 = System.currentTimeMillis();
	    System.out.println ("Laufzeit: " + (millis2 - millis1));
	    summe = summe + (millis2 - millis1);
        }
	System.out.println("\nlResult: "+lResult);
        System.out.println ("Summe: " + summe);
        System.out.println ("Durchschnittliche Laufzeit: " + summe/10 + " ms");
	
    }

}
