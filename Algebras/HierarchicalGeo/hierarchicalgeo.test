#This file is part of SECONDO.
#
#Copyright (C) 2004, University in Hagen, Department of Computer Science, 
#Database Systems for New Applications.
#
#SECONDO is free software; you can redistribute it and/or modify
#it under the terms of the GNU General Public License as published by
#the Free Software Foundation; either version 2 of the License, or
#(at your option) any later version.
#
#SECONDO is distributed in the hope that it will be useful,
#but WITHOUT ANY WARRANTY; without even the implied warranty of
#MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#GNU General Public License for more details.
#
#You should have received a copy of the GNU General Public License
#along with SECONDO; if not, write to the Free Software
#Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA

# a test for the spatial algebra
# run with : TestRunner -c SecondoConfig.ini < hierarchicalgeo.test

# A fresh restored berlin database needs to be present for
# this test


#setup hierarchicalgeotest

open database berlin



# The conventions for commands are the same as in SecondoTTYBDB
# make sure that commands are always terminated 
# (either by a semicolon or by a newline)

# a TESTCASE consists of a TESTCASE declarative followed
# by a YIELDS declarative followed by a command.
# multiple or no commands after a YIELD directive
# will confuse the TestRunner

# the expected output specified by the YIELD declarative
# is converted to a ListExpr and the TestRunner compares
# it to Secondo's actual output by calling  
# NestedList->Equal 



# 1 - Creating, updating, querying and deleting a cpoint-object

#testcase createcpoint
#yields success 
create ctest1 : cpoint;

#testcase updatecpoint
#yields success
update ctest1 := [const cpoint value(50.0 (9876.5 8765.4))];

#testcase letcpoint
#yields success
let ctest2 = [const cpoint value(50.0 (8888.8 7777.7))];


#testcase querycpoint
#yields success
query ctest2


#testcase queryepsilon
#yields (real 50.0)
query epsilon(ctest2)


#testcase queryval
#yields success
query val(ctest2)


#testcase tocpoint with wrong arguments (first argument is not a real)
#yields error
let calex = tocpoint(33, alexanderplatz)


#testcase tocpoint with too many arguments
#yields error
let calex = tocpoint(44.5, true, alexanderplatz)


#testcase tocpoint
#yields success
let calex = tocpoint(44.5, alexanderplatz)


#testcase query tocpoint-object
#yields success
query calex


#testcase deletecpoint
#yields success
delete ctest1;


#testcase createcupoint
#yields success 
create cuptest : cupoint;


#testcase updatecupoint
#yields success
update cuptest := [const cupoint value(50.0 (
							("2003-11-20-07:01:44.586" "2003-11-20-07:01:50" TRUE FALSE)
			        (-3544.0 14312.0 -3560.0 14235.0)))];


#testcase querycpoint
#yields success
query cuptest;

#testcase deletecpoint
#yields success
delete cuptest;


#teardown

delete ctest2;
delete calex;
close database;