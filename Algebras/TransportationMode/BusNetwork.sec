#script file to build the bus network database
# 1.put it into Secondo/bin directory
# 2.start SecondoTTYBDB run this script file
##############################################

restore database berlintest from berlintest;
#construct the pre-defined path (bus routes)
let berlintrainsroutes = Trains feed project[Id,Line,Trip] consume;
save berlintrainsroutes to berlintrainsroutes;
close database;


create database tm;
open database tm;
restore berlintrainsroutes from berlintrainsroutes;

#create bus network;
let berlintrains = thebusnetwork(1,berlintrainsroutes);



#query example
let edge_rel_order_t =  busedgerel(berlintrains) feed extend [start_t:minimum(.def_t)]
sortby [v1 asc,start_t desc] remove[start_t] consume;

let btree_edge_rel_order_t_v1 = edge_rel_order_t createbtree[v1];
let btree_edge_rel_order_t_v2 = edge_rel_order_t createbtree[v2];


let mint1=[const mint value(
(("begin of time" "2003-11-20-06:18:16.027" TRUE FALSE) 1)
(("2003-11-20-06:18:16.027" "2003-11-20-06:35:29.353" FALSE FALSE) 1)
(("2003-11-20-06:35:29.353" "2003-11-20-06:47:30.647" FALSE TRUE) 5)
(("2003-11-20-06:47:30.647" "2003-11-20-06:57:30.647" FALSE FALSE) 20)
(("2003-11-20-06:57:30.647" "end of time" TRUE TRUE) 1)
)];


query deftime(edge_rel_order_t btree_edge_rel_order_t_v1 find_path_t_3[berlintrains,mint1]);


query deftime(edge_rel_order_t btree_edge_rel_order_t_v1 btree_edge_rel_order_t_v2 find_path_t_4[berlintrains,mint1]);


close database;
