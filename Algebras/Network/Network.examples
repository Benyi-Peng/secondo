Database: networktest
Restore : yes

Operator : junctions
Number   : 1
Signature: network -> rel
Example  : query junctions(B_NETWORK);
Result   : file

Operator : routes
Number   : 1
Signature: network -> rel
Example  : query routes(B_NETWORK);
Result   : file

Operator : sections
Number   : 1
Signature: network -> rel
Example  : query sections(B_NETWORK);
Result   : file

Operator : thenetwork
Number   : 1
Signature: rel x rel -> network
Example  : query thenetwork(1, B_ROUTES, B_JUNCTIONS);
Result   : file

Operator : shortest_path
Number   : 1
Signature: gpoint x gpoint -> gline
Example  : query shortest_path(X_GPOINT, X_GPOINT2);
Result   : (gline(1((2 0.0 1.0)(1 385.0474775448921 773.1299430080975)(1 1.0 385.04744775448921))))
Tolerance: %0.01

Operator : length
Number   : 1
Signature: gline -> real
Example  : query length(shortest_path(X_GPOINT, X_GPOINT2));
Result   : 773.1299430081
Tolerance:%0.01

Operator : netdistance
Number   : 1
Signature: gpoint x gpoint -> real
Example  : query netdistance(X_GPOINT, X_GPOINT2);
Result   : 773.1299430081
Tolerance:%0.01

Operator : netdistance
Number   : 2
Signature: gline x gline -> real
Example  : query netdistance([const gline value(1((1 0.0 0.5)))], [const gline value(1((1 0.7 1.5)))]);
Result   : 0.2
Tolerance:%0.01

Operator : point2gpoint
Number   : 1
Signature: point -> gpoint
Example  : query point2gpoint(B_NETWORK, [const point value(8594.0 8773.0)]);
Result   : (gpoint (1 1 385.0474775448921 2))
Tolerance:%0.01

Operator : =
Number   : 1
Signature: gpoint x gpoint -> bool
Example  : query X_GPOINT = X_GPOINT2;
Result   : FALSE

Operator : =
Number   : 2
Signature: gpoint x gpoint -> bool
Example  : query X_GPOINT = X_GPOINT;
Result   : TRUE

Operator : line2gline
Number   : 1
Signature: line -> gline
Example  : query line2gline(B_NETWORK, [const line value((8594.0 8773.0 8982.0 8781.0))]);
Result   : (gline (1 ((1 385.0474775448921 773.1299430080975))))
Tolerance:%0.01

Operator : inside
Number   : 1
Signature: gpoint x gline -> bool
Example  : query [const gpoint value (1 1 0.8 2)] inside  [const gline value(1((1 0.7 1.5)))];
Result   : TRUE

Operator : inside
Number   : 2
Signature: gpoint x gline -> bool
Example  : query [const gpoint value (1 1 5.2 2)] inside [const gline value (1 ((1 0.0 5.0)))];
Result   : FALSE

Operator : no_components
Number   : 1
Signature: gline -> int
Example  : query no_components([const gline value(1((1 0.0 0.5)))]);
Result   : 1

Operator : polygpoints
Number   : 1
Signature: gpoint x network -> stream(gpoint)
Example  : query polygpoints(X_GPOINT, B_NETWORK) count;
Result   : 1

Operator : routeintervals
Number   : 1
Signature: gline -> stream(rect)
Example  : query routeintervals([const gline value(1((1 0.0 0.5)))]) count;
Result   : 1

Operator : routeintervals
Number   : 2
Signature: gline -> stream(rect)
Example  : query routeintervals([const gline value(1((1 0.0 0.5)(2 0.1 6.5)(4 2.4 3.5)))]) count;
Result   : 3

Operator : intersects
Number   : 1
Signature: gline x gline -> bool
Example  : query [const gline value(1((1 0.0 0.5)))] intersects [const gline value(1((1 0.7 1.5)))];
Result   : FALSE

Operator : intersects
Number   : 2
Signature: gline x gline -> bool
Example  : query [const gline value(1((1 0.0 0.5)))] intersects [const gline value(1((1 0.2 1.5)))];
Result   : TRUE

Operator : gpoint2rect
Number   : 1
Signature: gpoint -> rect
Example  : query gpoint2rect([const gpoint value (1 1 0.8 2)]);
Result   : (rect(1.0 1.0 0.8 0.8))
Tolerance: 0.01%
