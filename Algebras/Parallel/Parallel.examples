Database: berlintest
Restore : No

Operator : multicount
Number   : 1
Signature : stream x stream ... -> int
Example   : query multicount(ten feed, intstream(1,10) , plz feed) = ten count + intstream(1,10) count + plz count
Result   : TRUE

Operator  : pbuffer
Number    : 1
Signature : stream x int -> stream
Example   : query plz feed pbuffer[100] count = plz count
Result    : TRUE

Operator  : pbuffer1
Number    : 1
Signature : stream  -> stream
Example   : query plz feed pbuffer1 count = plz count
Result    : TRUE

Operator  : pbufferU
Number    : 1
Signature : stream  -> stream
Example   : query plz feed pbufferU count = plz count
Result    : TRUE

Operator  : pfilterS
Number    : 1
Signature : stream(tuple) x int x x int x int x (tuple -> bool) -> stream(tuple)
Example   : query plz feed pfilterS[10,100, 20, .PLZ < 7000] count = plz feed filter[.PLZ < 7000] count
Result    : TRUE

Operator  : pextend
Number    : 1
Signature : stream(tuple) x int x int x int x funlist -> stream(tuple)
Example   : query plz feed pextend[10, 20, 20; P : .PLZ + 32] count = plz count
Result    : TRUE

Operator  : pextendstream
Number    : 1
Signature : stream(tuple) x int x int x int x (tuple -> stream(attr))  -> stream(tuple@attr)
Example   : query plz feed pextendstream[10i, 10, 200,; P : intstream(1,20)] count = ((plz count)*20)
Result    : TRUE

Operator  : punion
Number    : 1
Signature : stream(tuple) xstream(tuple) -> stream(tuple)
Example   : query plz feed plz feed punion count = (2* plz count)
Result    : TRUE

Operator  : ploopsel
Number    : 1
Signature : stream(tuple) x int x (tupleA -> stream(tupleB)) -> stream(tupleB)
Example   : query Orte feed {o} ploopsel[4, intstream(1,10) namedtransformstream[N] ] count > 2
Result    : TRUE

Operator  : ploopjoin
Number    : 1
Signature : stream(tuple) x int x (tupleA -> stream(tupleB)) -> stream(tupleAB)
Example   : query Orte feed {o} ploopjoin[4, intstream(1,10) namedtransformstream[N] ] count > 2
Result    : TRUE

