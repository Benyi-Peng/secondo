#This file is part of SECONDO.
#
#Copyright (C) 2004, University in Hagen, Department of Computer Science, 
#Database Systems for New Applications.
#
#SECONDO is free software; you can redistribute it and/or modify
#it under the terms of the GNU General Public License as published by
#the Free Software Foundation; either version 2 of the License, or
#(at your option) any later version.
#
#SECONDO is distributed in the hope that it will be useful,
#but WITHOUT ANY WARRANTY; without even the implied warranty of
#MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#GNU General Public License for more details.
#
#You should have received a copy of the GNU General Public License
#along with SECONDO; if not, write to the Free Software
#Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA

# a test for the relational algebra
# run with : Runner -c MyConfig.config <relalgtest
# (Runner can be found in directory UserInterfaces)

#setup
open database germany;

#testcase test1
#yields (int 674)
query Autobahn feed Fluss feed spatialjoin[AVerlauf, FVerlauf] count;

#testcase test2
#yields (bool TRUE)
query Autobahn feed loopjoin[fun(t:TUPLE) Fluss feed filter[bbox(.FVerlauf) intersects bbox(attr(t, AVerlauf))]] count =
      Autobahn feed Fluss feed spatialjoin[AVerlauf, FVerlauf] count;

#testcase test3
#yields (int 235)
query Autobahn feed loopjoin[fun(t:TUPLE) Fluss feed filter[.FVerlauf intersects attr(t, AVerlauf)]] count;

#testcase test4
#yields (bool TRUE)
query Autobahn feed loopjoin[fun(t:TUPLE) Fluss feed filter[.FVerlauf intersects attr(t, AVerlauf)]] count =
      Autobahn feed Fluss feed spatialjoin[AVerlauf, FVerlauf] filter[.AVerlauf intersects .FVerlauf] count;

#testcase test7
#yields (int 3303)
query Kreis feed {X} loopjoin[fun(t: TUPLE) Kreis feed filter[bbox(.Gebiet) intersects bbox(attr(t, Gebiet_X))]] count;

#testcase test16
#yields (int 2707) 
query Kreis feed {X} loopjoin[fun(t: TUPLE) Kreis feed filter[bbox(.Gebiet) intersects bbox(attr(t, Gebiet_X))] 
  filter[.Gebiet touches attr(t, Gebiet_X)]] count;

#testcase test17
#yields (bool TRUE)
query Kreis feed {X} Kreis feed spatialjoin[Gebiet_X, Gebiet] filter[.Gebiet_X touches .Gebiet] count =
      Kreis feed {X} loopjoin[fun(t: TUPLE) Kreis feed filter[bbox(.Gebiet) intersects bbox(attr(t, Gebiet_X))]
        filter[.Gebiet touches attr(t, Gebiet_X)]] count;

#teardown
close database;

