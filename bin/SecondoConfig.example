# This file is part of SECONDO.

# Copyright (C) 2004, University in Hagen, Department of Computer Science, 
# Database Systems for New Applications.

# SECONDO is free software;  you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation;  either version 2 of the License, or
# (at your option) any later version.

# SECONDO is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY;  without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.

# You should have received a copy of the GNU General Public License
# along with SECONDO;  if not, write to the Free Software
# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA

# --- Secondo Configuration ---
#
# This is an example file. copy or rename it to SecondoConfig.ini
#
# Note: every parameter explained below can be overruled by an environment
# variable with name SECONDO_PARAM_<keyname>, 
# e.g.: export SECONDO_PARAM_SecondoHome="/tmp/databases"

[Environment]
# Home directory of Secondo database, in fact the place where the Berkeley DB will
# store all record files used by Secondo. Note: By default, the directory /home/secondo-databases
# is used for the Berkeley DB files. A directory different from this will be used iff it is 
# specified below AND it exists!
# Note: On windows you need absolute path names, e.g.
# C:\msys\1.0\home\user\secondo-dbtest 
SecondoHome=/home/databases1

# Algebralevel after startup (Executable|Descriptive|Hybrid). 
AlgebraLevel=Executable

# Name of the local socket of the Secondo registrar
RegistrarName=SECONDO_REGISTRAR

# Name of the executable of the Secondo registrar program
RegistrarProgram=SecondoRegistrar

# Name of the executable of the Secondo listener program
ListenerProgram=SecondoListener

# Host address of the Secondo server
SecondoHost=127.0.0.1

# Port of the Secondo server (default: )
SecondoPort=1234

# Runtime Flags (refer to class RTFlags). This key can be used to define 
# a comma separated list of runtime flags which switch on some special messages 
# (for debugging or profiling) or some features like creating binary 
# list formats for CS-communication. Please document new flags otherwise
# this mechanism is not useful. Note: a += assignment will extend the list.
#

# Print the counter values of Class Counter (refer Counter.h) after every query
# command
RTFlags = SI:PrintCounters

# This flag controls the generation of binary lists.
#RTFlags +=  Server:BinaryTransfer

# If set, a result.bnl file is created on the server side.
# Server:ResultFile

# Measure the time for writing the result list to the socket object. 
#RTFlags += Server:SendTimeMsg

# Supress to measure cpu-time,real-time, and nested list 
# memory used for processing a query.
#RTFlags += SI:NoQueryAnalysis 

# Suppress the output of the command in NL format before execution
#RTFlags += SI:NoCommandEcho 

# Various statistical information about tuples and relations.
#RTFlags += SI:RelStatistics 

# Print out nested list of the result before copying it into 
# the applications list memory.
#RTFlags += SI:ResultList

# Measure the time for copying lists between NL-instances.
#RTFlags += SI:CopyListTime

# Show the used times for every Secondo Command
#RTFlags += SI:CommandTime

# Switch off the transaction and logging subsystem of Berkeley-DB
#RTFlags += SMI:NoTransactions

# Print out messages in methods of the FText algebra. 
#RTFlags += FText:Trace

# Show how often the requested buffersize could not be 
# transferred and the number of sleep calls; 
#RTFlags += Socket:SendStat

# --- Berkeley DB Section ---
#
# If Secondo is configured to use the Berkeley DB for persistent
# storage, the parameters in this section need to be specified

[BerkeleyDB]
# Name of the executable of the Secondo server program
ServerProgram=SecondoServerBDB

# Name of the executable of the Berkeley DB checkpoint program
CheckpointProgram=SecondoCheckpoint
CheckpointTime=5
# Directory where logging files are stored (may be relative to home directory)
#LogDir=
# Cache Size in kB
CacheSize=4096
# Lock System Configuration
MaxLockers=300000
MaxLocks=300000
MaxLockObjects=300000


# --- Context sections ---
#
# To allow fine tuning of the storage management it is possible to
# define several "context" sections which can be referenced when
# creating or opening SmiFiles. The "Default" context section lists
# all possible parameters.

[Default]
#Bdbxxx=

######### End of Secondo Configuration ########### 

