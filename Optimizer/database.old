/*
---- 
This file is part of SECONDO.

Copyright (C) 2004, University in Hagen, Department of Computer Science, 
Database Systems for New Applications.

SECONDO is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 2 of the License, or
(at your option) any later version.

SECONDO is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with SECONDO; if not, write to the Free Software
Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
----

1 Database Dependent Information

[File ~database.pl~]


1.1 Relation Schemas

*/
relation(staedte, [sname, bev, plz, vorwahl, kennzeichen]).
relation(plz, [plz, ort]).
relation(ten, [no]).
relation(thousand, [no]).
relation(orte, [kennzeichen, ort, vorwahl, bevt]).


/*
1.2 Spelling of Relation and Attribute Names

*/

spelling(staedte, staedte).
spelling(staedte:sname, sName).
spelling(staedte:bev, bev).
spelling(staedte:plz, pLZ).
spelling(staedte:vorwahl, vorwahl).
spelling(staedte:kennzeichen, kennzeichen).
spelling(staedte_sample, staedte_sample).
spelling(plz, lc(plz)).
spelling(plz:plz, pLZ).
spelling(plz:ort, ort).
spelling(plz_sample, lc(plz_sample)).
spelling(ten, lc(ten)).
spelling(ten:no, lc(no)).
spelling(ten_sample, lc(ten_sample)).
spelling(thousand, lc(thousand)).
spelling(thousand:no, lc(no)).
spelling(thousand_sample, lc(thousand_sample)).
spelling(orte, orte).
spelling(orte:kennzeichen, kennzeichen).
spelling(orte:ort, ort).
spelling(orte:vorwahl, vorwahl).
spelling(orte:bevt, bevT).
spelling(orte_sample, orte_sample).


/*

1.3  Cardinalities of Relations

*/
card(staedte, 58).
card(staedte_sample, 58).
card(plz, 41267).
card(plz_sample, 428).
card(ten, 10).
card(ten_sample, 10).
card(thousand, 1000).
card(thousand_sample, 89).
card(orte, 506).
card(orte_sample, 100).


/*
1.4 Indexes

*/
hasIndex(Rel, attr(_:A, _, _), IndexName) :-
  hasIndex(Rel, attr(A, _, _), IndexName).

hasIndex(rel(Rel, _, _), attr(Attr, _, _), Index) :- index(Rel, Attr, _, Index).



index(plz, ort, btree, plz_Ort).
index(plz, plz, btree, plz_PLZ).


index(_, _, _, _) :- fail.












