
# file OSM/OsmAlgebra.spec 

#This file is part of SECONDO.

#Copyright (C) 2004, University in Hagen,
#Faculty of Mathematics and Computer Science,
#Database Systems for New Applications.

#SECONDO is free software; you can redistribute it and/or modify
#it under the terms of the GNU General Public License as published by
#the Free Software Foundation; either version 2 of the License, or
#(at your option) any later version.

#SECONDO is distributed in the hope that it will be useful,
#but WITHOUT ANY WARRANTY; without even the implied warranty of
#MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#GNU General Public License for more details.

#You should have received a copy of the GNU General Public License
#along with SECONDO; if not, write to the Free Software
#Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA

operator shpimport alias SHPIMPORT pattern _ op [ _ ]
operator convertstreets alias CONVERTSTREETS pattern _ op [ _ , _ ]
# file TemporalLifted/TemporalLiftedAlgebra.spec 

operator abs alias ABS pattern op ( _ )
operator zero alias ZERO pattern op ()
operator periods2mint alias PERIODS2MINT pattern op ( _ )
operator rough_center alias ROUGH_CENTER pattern op ( _ )
operator area alias AREA pattern op ( _ )
operator perimeter alias PERIMETER pattern op ( _ )
operator eplus alias EPLUS pattern _ infixop _ 


# file HadoopParallel/HadoopParallelAlgebra.spec 

#This file is part of SECONDO.

#Copyright (C) 2004, University in Hagen, Department of Computer Science, 
#Database Systems for New Applications.

#SECONDO is free software; you can redistribute it and/or modify
#it under the terms of the GNU General Public License as published by
#the Free Software Foundation; either version 2 of the License, or
#(at your option) any later version.

#SECONDO is distributed in the hope that it will be useful,
#but WITHOUT ANY WARRANTY; without even the implied warranty of
#MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#GNU General Public License for more details.

#You should have received a copy of the GNU General Public License
#along with SECONDO; if not, write to the Free Software
#Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA

operator doubleexport alias DOUBLEEXPORT pattern _ _ op[_,_]
operator parahashjoin alias PARAHASHJOIN pattern _ _ _ op
operator parajoin alias PARAJOIN pattern _ _ _ op[fun] implicit parameters stream1, stream2 types TUPSTREAM2, TUPSTREAM3 
operator add0Tuple alias ADD0TUPLE pattern _ op
operator fconsume alias FCONSUME pattern _ op [list; list; list]
operator ffeed alias FFEED pattern _ op [list; list; list]
operator hadoopjoin alias HADOOPJOIN pattern _ _ op [_, _, _, _; list; fun] implicit parameters stream1, stream2 types ANY, ANY2
operator fdistribute alias FDISTRIBUTE pattern _ op [list; list; list; list]
operator ffeed2 alias FFEED2 pattern _ op [list; list; list]
operator fconsume3 alias FCONSUME3 pattern _ op [list; list; list]
operator ffeed3 alias FFEED3 pattern _ op [list; list; list]
operator fetchFlob alias FETCHFLOB pattern _ op [list]
operator fdistribute3 alias FDISTRIBUTE3 pattern _ op [list; list; list; list]
operator genFlobResult alias GENFLOBRESULT pattern op(_, _, _)
# file LineFunction/LineFunctionAlgebra.spec 

#This file is part of SECONDO.

#Copyright (C) 2004, University in Hagen, Department of Computer Science,
#Database Systems for New Applications.

#SECONDO is free software; you can redistribute it and/or modify
#it under the terms of the GNU General Public License as published by
#the Free Software Foundation; either version 2 of the License, or
#(at your option) any later version.

#SECONDO is distributed in the hope that it will be useful,
#but WITHOUT ANY WARRANTY; without even the implied warranty of
#MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#GNU General Public License for more details.

#You should have received a copy of the GNU General Public License
#along with SECONDO; if not, write to the Free Software
#Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA

operator heightatposition alias HEIGHTATPOSITION pattern _ infixop _
operator lcompose  alias LCOMPOSE pattern _ op [_,_]
operator lfdistance alias LFDISTANCE pattern op ( _ , _ , _ , _ )
operator lfdistanceparam alias LFDISTANCEPARAM pattern op ( _ , _ , _ , _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _ )

# file OptAux/OptAuxAlgebra.spec 

#This file is part of SECONDO.

#Copyright (C) 2004, University in Hagen, Department of Computer Science, 
#Database Systems for New Applications.

#SECONDO is free software; you can redistribute it and/or modify
#it under the terms of the GNU General Public License as published by
#the Free Software Foundation; either version 2 of the License, or
#(at your option) any later version.

#SECONDO is distributed in the hope that it will be useful,
#but WITHOUT ANY WARRANTY; without even the implied warranty of
#MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#GNU General Public License for more details.

#You should have received a copy of the GNU General Public License
#along with SECONDO; if not, write to the Free Software
#Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA

operator predcounts alias PREDCOUNTS pattern _ op [ funlist ] implicit parameter tuple type TUPLE



# file Hash/HashAlgebra.spec 

#This file is part of SECONDO.

#Copyright (C) 2004, University in Hagen, Department of Computer Science,
#Database Systems for New Applications.

#SECONDO is free software; you can redistribute it and/or modify
#it under the terms of the GNU General Public License as published by
#the Free Software Foundation; either version 2 of the License, or
#(at your option) any later version.

#SECONDO is distributed in the hope that it will be useful,
#but WITHOUT ANY WARRANTY; without even the implied warranty of
#MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#GNU General Public License for more details.

#You should have received a copy of the GNU General Public License
#along with SECONDO; if not, write to the Free Software
#Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA

operator createhash alias CREATEHASH pattern _ op [ _ ]
operator inserthash alias INSERTHASH pattern _ _ op [ _ ]
operator deletehash alias DELETEHASH pattern _ _ op [ _ ]
operator updatehash alias UPDATEHASH pattern _ _ op [ _ ]
operator exactmatch alias EXACTMATCH pattern _ _ op [ _ ]
operator exactmatchS alias EXACTMATCHS pattern _ op [ _ ]
operator getFileInfo alias GETFILEINFO pattern op ( _ )

# file Guide/Guide.spec 


# simple prefix operator having one argument
operator perimeter alias PERIMETER pattern op(_)

# infix operator
operator distN alias DISTN pattern _ infixop _

# postfix operator having a parameter in square brackets
operator countNumber alias COUNTNUMBER pattern _ op[_]

#simple prefix operator
operator getChars alias GETCHARS pattern op(_)

# operator having a function with implicit arguments
operator replaceElem alias REPLACEELEM pattern _ op[ fun ] 
         implicit parameter streamelem type STREAMELEM

# postfix operator with an parameter
operator startsWithS alias STARTSWITHS pattern _ op [_ ]

# postfix operator with an additional argument
operator attrIndex alias ATTRINDEX pattern _ op [_]

#postfix operator without parameters
operator createPAVL alias CREATEPAVL pattern _ op


# infix operator
operator contains alias CONTAINS pattern _ infixop _


# postfix operazor with two arguments
operator insert alias INSERT pattern _ _ op


# prefix operator
operator importObject alias IMPORTOBJECT pattern op(_)

# prefix operator
operator importObject2 alias IMPORTOBJECT2 pattern op(_)

# prefix operator
operator text2vstring alias text2vstring pattern op(_)


# file RegionInterpolation2/RegionInterpolation2Algebra.spec 

operator interpolate2 alias INTERPOLATE2 pattern op ( _ , _ , _ , _ )

# file Graph/GraphAlgebra.spec 

operator thevertex alias THEVERTEX pattern op (_, _)
operator mindegree alias MINDEGREE pattern op (_, _)
operator maxdegree alias MAXDEGREE pattern op (_, _)
operator circle alias CIRCLE pattern op (_, _, _)
operator shortestpath alias SHORTESTPATH pattern op (_, _, _ )
operator connectedcomponents alias CONNECTEDCOMPONENTS pattern op ( _ )
operator get_key alias GET_KEY pattern op ( _ )
operator get_pos alias GET_POS pattern op ( _ )
operator get_source alias GET_SOURCE pattern op ( _ )
operator get_target alias GET_TARGET pattern op ( _ )
operator get_cost alias GET_COST pattern op ( _ )
operator placenodes alias PLACENODES pattern op ( _ )
operator vertices alias VERTICES pattern op (_)
operator merge alias MERGE pattern op (_, _)
operator partof alias PARTOF pattern _ infixop _
operator = alias EQUAL pattern _ infixop _
operator equalway alias EQUALWAY pattern _ infixop _
operator constgraph alias CONSTGRAPH pattern _ op [ _, _, fun ] implicit parameter tuple type TUPLE
operator constgraphpoints alias CONSTGRAPHPOINTS pattern _ op [ _, _, fun, _, _ ] implicit parameter tuple type TUPLE

# file Spatial/SpatialAlgebra.spec 

operator touches alias TOUCHES pattern _ infixop _
operator adjacent alias ADJACENT pattern _ infixop _
operator overlaps alias OVERLAPS pattern _ infixop _
operator onborder alias ONBORDER pattern _ infixop _
operator ininterior alias ININTERIOR pattern _ infixop _
operator crossings1 alias CROSSINGS1 pattern op ( _, _ )
operator single alias SINGLE pattern  op ( _ )
operator distance alias DISTANCE pattern  op ( _, _ )
operator direction alias DIRECTION pattern  op ( _, _, _ )
operator nocomponents alias NOCOMPONENTS pattern  op ( _ )
operator nohalfseg alias NOHALFSEG pattern  op ( _ )
operator size alias SIZE pattern  op ( _ )
operator touchpoints alias TOUCHPOINTS pattern  op ( _, _ )
operator commonborder alias COMMONBORDER pattern  op ( _, _ )
operator bbox alias BBOX pattern  op ( _, _ )
operator insidepathlength alias INSIDEPATHLENGTH pattern  _ infixop _
operator insidescanned alias INSIDESCANNED pattern  _ infixop _
operator insideold alias INSIDEOLD pattern  _ infixop _
operator translate alias TRANSLATE pattern  _ op [list]
operator rotate alias ROTATE pattern  _ op [ _,  _, _ ]
operator clip alias CLIP pattern  op (_, _)
operator windowclippingin alias WINDOWCLIPPINGIN pattern op ( _ , _)
operator windowclippingout alias WINDOWCLIPPINGOUT pattern op ( _ , _)
operator vertices alias VERTICES pattern op ( _ )
operator isempty alias ISEMPTY pattern op(_)
operator = alias EQ pattern _ infixop _
operator # alias NEQ pattern _ infixop _
operator < alias LT pattern _ infixop _
operator intersects1 alias INTERSECTS1 pattern _ infixop _
operator inside alias INSIDE pattern _ infixop _
operator intersection1 alias INTERSECTION1 pattern op(_,_)
operator minus1 alias MINUS1 pattern _ infixop _
operator union1 alias UNION1 pattern _ infixop _
operator no_components alias NO_COMPONENTS pattern  op ( _ )
operator no_segments alias NO_SEGMENTS pattern  op ( _ )
operator components alias COMPONENTS pattern op(_)
operator elements alias ELEMENTS pattern op(_)
operator boundary alias BOUNDARY pattern op(_)
operator atpoint alias ATPOINT pattern op(_,_)
operator atposition alias ATPOSITION pattern op(_,_)
operator subline alias SUBLINE pattern op(_,_)
operator + alias PLUS pattern _ infixop _
operator getx alias GETX pattern op(_)
operator gety alias GETY pattern op(_)
operator line2region alias LINE2REGION pattern _ op
operator rect2region alias RECT2REGION pattern _ op
operator area alias AREA pattern op ( _ )
operator polylines alias POLYLINES pattern _ op [ _ ]
operator polylinesC alias POLYLINESC pattern _ op [ _ ]
operator simplify alias SIMPLIFY pattern  op ( _ , _ )
operator segments alias SEGMENTS pattern  op ( _ )
operator get alias GET pattern   op ( _, _ )
operator realminize alias REALMINIZE pattern op ( _ )
operator makeline alias MAKELINE pattern op (_ , _ )
operator makesline alias MAKESLINE pattern op (_ , _ )
operator center alias CENTER pattern op (_)
operator convexhull alias CONVEXHULL pattern op (_)
operator realminize2 alias REALMINIZE2 pattern op(_)
operator commonborder2 alias COMMONBORDER2  pattern _ infixop _
operator collect_line alias COLLECTLINE pattern _ op [ _ ]
operator collectDline alias COLLECTDLINE pattern _ op [ _ ]
operator collect_sline alias COLLECTSLINE pattern _ op [ _ ]
operator collect_points alias COLLECTPOINTS pattern _ op [ _ ]
operator makepoint alias MAKEPOINT pattern op ( _  )
operator get_startsmaller alias GET_STARTSMALLER pattern op ( _ )
operator set_startsmaller alias SET_STARTSMALLER pattern op ( _ , _ )
operator getstartpoint alias GETSTARTPOINT pattern op ( _ )
operator getendpoint alias GETENDPOINT pattern op ( _ )
operator create_sline alias CREATE_SLINE pattern op (_, _)
operator distanceOrthodrome alias DISTANCEORTHODROME pattern op( _, _, _ )
operator create_geoid alias CREATE_GEOID pattern op( _, _, _ )
operator getRadius alias GETRADIUS pattern op( _ )
operator getFlattening alias GETFLATTENING pattern op( _ )
operator point2string alias POINT2STRING pattern op( _ , _ )
operator midpointBetween alias MIDPOINTBETWEEN pattern op( _, _, _, _ )
operator direction2heading alias DIRECTION2HEADING pattern op( _ )
operator heading2direction alias HEADING2DIRECTION pattern op( _ )
operator fromline alias FROMLINE pattern op( _ )
operator gk alias GK pattern op( _, _ )
operator halfSegments alias HALFSEGMENTS pattern op( _ )
operator heading alias HEADING pattern op( _, _, _ )
operator iscycle alias ISCYCLE pattern op( _ )
operator reverseGk alias REVERSEGK pattern op( _ )
operator toline alias TOLINE pattern op( _ )
operator utm alias UTM pattern op( _ )
operator scale alias SCALE pattern _ op [ _, _ ]
operator create_triangle alias CREATE_TRIANGLE pattern op(_, _, _)
operator circle alias CIRCLE pattern op ( _ , _ , _ )
operator longlines alias LONGLINES pattern _ op
operator splitslineatpoints alias SPLITSLINEATPOINTS pattern op ( _ , _ )
operator findCycles alias FINDCYCLES pattern op(_)
operator collect_box alias COLLECTBOX pattern _ op[_]

operator collect_line2 alias COLLECT_LINE2 pattern _ op
operator berlin2wgs alias BERLIN2WGS pattern op( _ )
operator twist alias TWIST pattern op(_,_,_)
operator contour2 alias CONTOUR2 pattern _ op[_,_,_]
operator twist2 alias TWIST2 pattern  op(_,_,_)
operator simpleProject alias SIMPLEPROJECT pattern op(_)
operator todline  alias TODLINE pattern _ op
operator distanceWithin alias DISTANCEWITHIN pattern op(_,_,_)


# file MONTree/MONTreeAlgebra.spec 

#This file is part of SECONDO. 

#Copyright (C) 2004, University in Hagen, Department of Computer Science, 
#Database Systems for New Applications.

#SECONDO is free software; you can redistribute it and/or modify
#it under the terms of the GNU General Public License as published by
#the Free Software Foundation; either version 2 of the License, or
#(at your option) any later version.

#SECONDO is distributed in the hope that it will be useful,
#but WITHOUT ANY WARRANTY; without even the implied warranty of
#MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#GNU General Public License for more details.

#You should have received a copy of the GNU General Public License
#along with SECONDO; if not, write to the Free Software
#Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA

operator createmontree alias CREATEMONTREE pattern _ _ op [ _ ]
operator windowtimeintersects alias WINDOWTIMEINTERSECTS pattern _ _ _ op [ _, _, _ ]
operator windowtimeintersectsS alias WINDOWTIMEINTERSECTSS pattern _ _ _ op [ _, _, _ ]

# file TopOps/TopOpsAlgebra.spec 


operator toprel alias TOPREL pattern op( _ , _ )
operator toppred alias TOPPRED pattern op (_, _, _, _)


operator tradjacent  alias TRADJACENT2  pattern _ infixop _
operator trinside    alias TRINSIDE  pattern _ infixop _
operator trcontains  alias TRCONTAINS  pattern _ infixop _
operator trcovers    alias TRCOVERS  pattern _ infixop _
operator trcoveredby alias TRCOVEREDBY  pattern _ infixop _
operator trequal     alias TREQUAL  pattern _ infixop _
operator trdisjoint  alias TRDISJOINT  pattern _ infixop _
operator troverlaps  alias TROVERLAPS  pattern _ infixop _





# file Periodic/PeriodicAlgebra.spec 

#This file is part of SECONDO.

# Copyright (C) 2004-2007,
# University in Hagen,
# Faculty of Mathematics and  Computer Science,
# Database Systems for New Applications.

#SECONDO is free software; you can redistribute it and/or modify
#it under the terms of the GNU General Public License as published by
#the Free Software Foundation; either version 2 of the License, or
#(at your option) any later version.

#SECONDO is distributed in the hope that it will be useful,
#but WITHOUT ANY WARRANTY; without even the implied warranty of
#MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#GNU General Public License for more details.

#You should have received a copy of the GNU General Public License
#along with SECONDO; if not, write to the Free Software
#Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA

operator = alias EQUALS pattern _ infixop _
operator contains alias CONTAINS pattern _ infixop _
operator atinstant alias ATINSTANT pattern _ infixop _
operator breakpoints alias BREAKPOINTS pattern op(_,_)
operator createpmpoint alias CREATEPMPOINT pattern op(_)
operator distance alias DISTANCE pattern op(_ , _ )
operator end alias END pattern op(_)
operator expand alias EXPAND pattern op(_)
operator final alias FINAL pattern op(_)
operator initial alias INITIAL pattern op(_)
operator intersection alias INTERSECTION pattern op(_,_)
operator intersects alias INTERSECTS pattern _ infixop _
operator length alias LENGTH pattern op(_)
operator numberOfCNodes alias NUMBEROFCNODES pattern op(_)
operator numberOfFlatUnits alias NUMBEROFFLATUNITS pattern op(_)
operator numberOfNodes alias NUMBEROFNODES pattern op(_)
operator numberOfPNodes alias NUMBEROFPNODES pattern op(_)
operator numberOfUnits alias NUMBEROFUNITS pattern op(_)
operator ptranslate alias PTRANSLATE pattern _ op [_]
operator start alias START pattern op(_)
operator toprel alias TOPREL pattern op(_,_)
operator trajectory alias TRAJECTORY pattern op(_)
operator union alias UNION pattern _ infixop _
operator speed alias SPEED pattern op( _ )
operator direction alias DIRECTION pattern op( _, _, _ )


# file RTree/RTreeAlgebra.spec 

#This file is part of SECONDO.

#Copyright (C) 2004, University in Hagen, Department of Computer Science,
#Database Systems for New Applications.

#SECONDO is free software; you can redistribute it and/or modify
#it under the terms of the GNU General Public License as published by
#the Free Software Foundation; either version 2 of the License, or
#(at your option) any later version.

#SECONDO is distributed in the hope that it will be useful,
#but WITHOUT ANY WARRANTY; without even the implied warranty of
#MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#GNU General Public License for more details.

#You should have received a copy of the GNU General Public License
#along with SECONDO; if not, write to the Free Software
#Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA

operator creatertree alias CREATERTREE pattern _ op [ _ ]
operator bulkloadrtree alias BULKLOADRTREE pattern _ op [ _ ]
operator windowintersects alias WINDOWINTERSECTS pattern _ _ op [ _ ]
operator windowintersectsS alias WINDOWINTERSECTSS pattern _ op [ _ ]
operator gettuples alias GETTUPLES pattern _ _ op
operator gettuples2 alias GETTUPLES2 pattern _ _ op[ _, _ ]
operator gettuplesdbl alias GETTUPLESDBL pattern _ _ op[ _ ]
operator nodes alias NODES pattern op ( _ )
operator entries alias ENTRIES pattern op ( _ )
operator treeheight alias TREEHEIGHT pattern op ( _ )
operator no_nodes alias NO_NODES pattern op ( _ )
operator no_entries alias NO_ENTRIES pattern op ( _ )
operator bbox alias BBOX pattern op ( _, _ )
operator getFileInfo alias GETFILEINFO pattern op ( _ )
operator updatebulkloadrtree alias UPDATEBULKLOADRTREE pattern _ _ op [ _]
operator getRootNode alias GETROOTNODE pattern op ( _ )
operator getNodeInfo alias GETNODEINFO pattern op ( _ , _ )
operator getNodeSons alias GETNODESONS pattern op ( _ , _ )
operator getLeafEntries alias GETLEAFENTRIES pattern op ( _ , _ )
operator cyclicbulkload alias CYCLICBULKLOAD pattern _  op [ _, _, _, _ ]

operator dspatialJoin alias DSPATIALJOIN pattern _ _ _ _ op[_]



# file Array/ArrayAlgebra.spec 

#This file is part of SECONDO.

#Copyright (C) 2004, University in Hagen, Department of Computer Science, 
#Database Systems for New Applications.

#SECONDO is free software; you can redistribute it and/or modify
#it under the terms of the GNU General Public License as published by
#the Free Software Foundation; either version 2 of the License, or
#(at your option) any later version.

#SECONDO is distributed in the hope that it will be useful,
#but WITHOUT ANY WARRANTY; without even the implied warranty of
#MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#GNU General Public License for more details.

#You should have received a copy of the GNU General Public License
#along with SECONDO; if not, write to the Free Software
#Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA

# Begin ArrayAlgebra.spec


operator makearray alias MAKEARRAY pattern op ( _, _ )
# Note: ( _, _ ) means also a comma separated list of arbitrary length 

operator makearrayN alias MAKEARRAYN pattern op ( _, _ )

operator get alias GET pattern op ( _, _ )

operator put alias PUT pattern op ( _, _, _ )

operator size alias SIZE pattern op ( _ )

operator sortarray alias SORTARRAY pattern _ op [ fun ]
         implicit parameter element type ELEMENT

operator tie alias TIE pattern _ op [ fun ] 
         implicit parameters first, second types ELEMENT, ELEMENT

operator cumulate alias CUMULATE pattern _ op [ fun ] 
         implicit parameters first, second types ELEMENT, ELEMENT

operator distribute alias DISTRIBUTE pattern _ op [ _ ]

operator summarize alias SUMMARIZE pattern _ op

operator loop alias LOOP pattern _ op [ fun ]
         implicit parameter element type ELEMENT

operator loopa alias LOOPA pattern _ _ op [ fun ] 
         implicit parameters first, second types ELEMENT, ELEMENT2

operator loopb alias LOOPB pattern _ _ op [ fun ] 
         implicit parameters first, second types ELEMENT, ELEMENT2

operator loopswitch alias LOOPSWITCH pattern _ op [ funlist ] 
         implicit parameter element type ELEMENT

operator loopswitcha alias LOOPSWITCHA pattern _ _ op [ funlist ]
         implicit parameters first, second types ELEMENT, ELEMENT2

operator loopswitchb alias LOOPSWITCHB pattern _ _ op [ funlist ]
         implicit parameters first, second types ELEMENT, ELEMENT2

operator loopselect alias LOOPSELECT pattern _ op [ funlist; _, _ ] 
         implicit parameter element type ELEMENT

operator loopselecta alias LOOPSELECTA pattern _ _ op [ funlist; _, _ ]
         implicit parameters first, second types ELEMENT, ELEMENT2

operator loopselectb alias LOOPSELECTB pattern _ _ op [ funlist; _, _ ]
         implicit parameters first, second types ELEMENT, ELEMENT2

operator partjoin alias PARTJOIN pattern _ _ op [ fun ] 
         implicit parameters first, second types ELEMENT, ELEMENT2

operator partjoinswitch alias PARTJOINSWITCH pattern _ _ op [ funlist ]
         implicit parameters first, second types ELEMENT, ELEMENT2

operator partjoinselect alias PARTJOINSELECT pattern _ _ op [ funlist; _, _ ]
         implicit parameters first, second types ELEMENT, ELEMENT2

# End ArrayAlgebra.spec

# file MP3/MP3Algebra.spec 

#This file is part of SECONDO.

#Copyright (C) 2004, University in Hagen, Department of Computer Science,
#Database Systems for New Applications.

#SECONDO is free software; you can redistribute it and/or modify
#it under the terms of the GNU General Public License as published by
#the Free Software Foundation; either version 2 of the License, or
#(at your option) any later version.

#SECONDO is distributed in the hope that it will be useful,
#but WITHOUT ANY WARRANTY; without even the implied warranty of
#MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#GNU General Public License for more details.

#You should have received a copy of the GNU General Public License
#along with SECONDO; if not, write to the Free Software
#Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA

operator bitrate alias BITRATE pattern _ op
operator version alias VERSION pattern _ op
operator frequency alias FREQUENCY pattern _ op
operator framecount alias FRAMECOUNT pattern _ op
operator songlength alias SONGLENGTH pattern _ op
operator getid3 alias GETID3 pattern _ op
operator author alias AUTHOR pattern _ op
operator titleof alias TITLEOF pattern _ op
operator album alias ALBUM pattern _ op
operator comment alias COMMENT pattern _ op
operator genre alias GENRE pattern _ op
operator track alias TRACK pattern _ op
operator savemp3to alias SAVEMP3TO pattern _ infixop _
operator getlyrics alias GETLYRICS pattern _ op
operator lyricswords alias LYRICSWORDS pattern _ _ op
operator removelyrics alias REMOVELYRICS pattern _ op
operator putlyrics alias PUTLYRICS pattern _ _ op
operator putid3 alias PUTID3 pattern _ _ op
operator removeid3 alias REMOVEID3 pattern _ op
operator concatmp3 alias CONCATMP3 pattern _ _ op
operator songyear alias SONGYEAR pattern _ op
operator submp3 alias SUBMP3 pattern _ _ _ op
operator loadmp3from alias LOADMP3 pattern op ( _ )


# file CRel/CORelationAlgebra.spec 

#This file is part of SECONDO.

#Copyright (C) 2004, University in Hagen, Department of Computer Science,
#Database Systems for New Applications.

#SECONDO is free software; you can redistribute it and/or modify
#it under the terms of the GNU General Public License as published by
#the Free Software Foundation; either version 2 of the License, or
#(at your option) any later version.

#SECONDO is distributed in the hope that it will be useful,
#but WITHOUT ANY WARRANTY; without even the implied warranty of
#MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#GNU General Public License for more details.

#You should have received a copy of the GNU General Public License
#along with SECONDO; if not, write to the Free Software
#Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
# file Auxiliary/AuxiliaryAlgebra.spec 

#This file is part of SECONDO.

#Copyright (C) 2004, University in Hagen, Department of Computer Science, 
#Database Systems for New Applications.

#SECONDO is free software; you can redistribute it and/or modify
#it under the terms of the GNU General Public License as published by
#the Free Software Foundation; either version 2 of the License, or
#(at your option) any later version.

#SECONDO is distributed in the hope that it will be useful,
#but WITHOUT ANY WARRANTY; without even the implied warranty of
#MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#GNU General Public License for more details.

#You should have received a copy of the GNU General Public License
#along with SECONDO; if not, write to the Free Software
#Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA


operator sleep alias SLEEP pattern _ op [ _ ]
operator statistics alias STATISTICS pattern _ op [ _ , _ ]
operator faultcrash alias FAULTCRASH pattern _ op [ _ ]
operator faultloop alias FAULTLOOP pattern _ op [ _ ]


# file DateTime/DateTimeAlgebra.spec 

#This file is part of SECONDO.

#Copyright (C) 2004, University in Hagen, Department of Computer Science,
#Database Systems for New Applications.

#SECONDO is free software; you can redistribute it and/or modify
#it under the terms of the GNU General Public License as published by
#the Free Software Foundation; either version 2 of the License, or
#(at your option) any later version.

#SECONDO is distributed in the hope that it will be useful,
#but WITHOUT ANY WARRANTY; without even the implied warranty of
#MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#GNU General Public License for more details.

#You should have received a copy of the GNU General Public License
#along with SECONDO; if not, write to the Free Software
#Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA

operator weekday_of alias WEEKDAY_OF pattern  op ( _ )
operator toString alias TOSTRING pattern _ op
operator leapyear alias LEAPYEAR pattern _ op
operator year_of alias YEAR pattern  op ( _ )
operator month_of alias MONTH pattern   op ( _ )
operator day_of alias DAY pattern   op ( _ )
operator hour_of alias HOUR pattern  op ( _ )
operator minute_of alias MINUTE pattern  op ( _ )
operator second_of alias SECOND pattern  op ( _ )
operator millisecond_of alias MILLISECOND pattern  op ( _ )
operator + alias PLUS pattern _ infixop _
operator - alias MINUS pattern _ infixop _
operator = alias EQUAL pattern _ infixop _
operator < alias LESS pattern _ infixop _
operator > alias GREATER pattern _ infixop _
operator * alias PRODUCT pattern _ infixop _
operator now alias NOW pattern op()
operator today alias TODAY pattern op()
operator theInstant alias THEINSTANT pattern op(_)
operator / alias DIVIDE pattern _ infixop _
operator create_duration alias CREATE_DURATION pattern op ( _ , _ )
operator create_instant alias CREATE_INSTANT pattern op ( _ , _ )
operator duration2real alias DURATION2REAL pattern op ( _ )
operator instant2real alias INSTANT2REAL pattern op ( _ )
operator mininstant alias MININSTANT pattern op()
operator maxnstant alias MAXINSTANT pattern op()
operator minduration alias MINDURATION pattern op()
operator maxduration alias MAXDURATION pattern op()
operator div alias DIV pattern _ infixop _
operator transformDateTime alias TRANSFORMDATETIME pattern op ( _ )



# file TopRel/TopRelAlgebra.spec 

operator  + alias PLUS pattern _infixop _
operator  - alias MINUS pattern _ infixop _
operator  clustername_of alias CLUSTERNAME_OF pattern op(_,_)
operator  clusterof alias CLUSTEROF pattern op(_,_)
operator  contains alias CONTAINS pattern _ infixop _
operator  createcluster alias CREATECLUSTER pattern op(_,_)
operator  createpgroup alias createpgroup pattern op(_,_)
operator  createprioritypgroup alias CREATEPRIORITYPGROUP pattern op(_,_)
operator  createvalidpgroup alias CREATEVALIDPGROUP pattern op(_,_)
operator  disjoint alias DISJOINT pattern _ infixop _
operator  intersection alias INTERSECTION pattern op(_,_)
operator  invert alias INVERT pattern op(_)
operator  isComplete alias ISCOMPLETE pattern op(_)
operator  multiintersection alias MULTIINTERSECTION pattern op(_,_)
operator  name_of alias NAME_OF pattern op(_)
operator  number_of alias NUMBER_OF pattern op(_)
operator  pwdisjoint alias PWDISJOINT pattern op(_,_)
operator  relax alias RELAX pattern op(_,_)
operator  renamecluster alias RENAMECLUSTER pattern _ op [_]
operator  restrict alias RESTRICT pattern op(_,_)
operator  sizeof alias SIZEOF pattern op(_)
operator  transpose alias TRANSPOSE pattern op(_)
operator  union alias UNION  pattern _ infixop _
operator  unspecified alias UNSPECIFIED pattern op(_)


# file RemoteStream/RemoteStreamAlgebra.spec 

#This file is part of SECONDO.

#Copyright (C) 2004, University in Hagen, Department of Computer Science, 
#Database Systems for New Applications.

#SECONDO is free software; you can redistribute it and/or modify
#it under the terms of the GNU General Public License as published by
#the Free Software Foundation; either version 2 of the License, or
#(at your option) any later version.

#SECONDO is distributed in the hope that it will be useful,
#but WITHOUT ANY WARRANTY; without even the implied warranty of
#MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#GNU General Public License for more details.

#You should have received a copy of the GNU General Public License
#along with SECONDO; if not, write to the Free Software
#Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA

operator send alias SEND pattern _ op [ _, _ ]
operator receive alias RECEIVE pattern op ( _, _ )


# file Histogram/Histogram.spec 


operator set_histogram1d alias SET_HISTOGRAM1D pattern _ op
operator set_histogram2d alias SET_HISTOGRAM2D pattern _ _ op

operator create_histogram1d alias CREATE_HISTOGRAM1D pattern _ op [_,_]
operator create_histogram2d alias CREATE_HISTOGRAM2D pattern _ op [_,_,_]

operator create_histogram1d_equiwidth alias CREATE_HISTOGRAM1D_EQUIWIDTH pattern _ op[_,_]
operator create_histogram2d_equiwidth alias CREATE_HISTOGRAM2D_EQUIWIDTH pattern _ op[_,_,_,_]

operator create_histogram1d_equicount alias CREATE_HISTOGRAM1D_EQUICOUNT pattern _ op[_,_]
operator create_histogram2d_equicount alias CREATE_HISTOGRAM2D_EQUICOUNT pattern _ op[_,_,_,_]

operator no_components alias NO_COMPONENTS pattern op(_)

operator binsX alias BINSX pattern op(_)
operator binsY alias BINSY pattern op(_)

operator binrange_min alias BINRANGE_MIN pattern op(_,_)
operator binrange_max alias BINRANGE_MAX pattern op(_,_)
operator binrange_minX alias BINRANGE_MINX pattern op(_,_)
operator binrange_maxX alias BINRANGE_MAXX pattern op(_,_)
operator binrange_minY alias BINRANGE_MINY pattern op(_,_)
operator binrange_maxY alias BINRANGE_MAXY pattern op(_,_)

operator getcount1d alias GETCOUNT1D pattern op(_,_)
operator getcount2d alias GETCOUNT2D pattern op(_,_,_)

operator findbin alias FINDBIN pattern op(_,_)
operator findbinX alias FINDBINX pattern op(_,_)
operator findbinY alias FINDBINY pattern op(_,_)

operator is_refinement alias IS_REFINEMENT pattern op(_,_)

operator < alias LT pattern _ infixop _
operator = alias EQUAL pattern _ infixop _

operator find_minbin alias FIND_MINBIN pattern _ op
operator find_maxbin alias FIND_MAXBIN pattern _ op

operator mean alias MEAN pattern _ op
operator meanX alias MEANX pattern _ op
operator meanY alias MEANY pattern _ op

operator variance alias VARIANCE pattern _ op
operator varianceX alias VARIANCEX pattern _ op
operator varianceY alias VARIANCEY pattern _ op
operator covariance alias COVARIANCE pattern _ op

operator distance alias DISTANCE pattern op(_,_)

operator translatehistogram alias TRANSLATEHISTOGRAM pattern _ op[_]

operator usehistogram alias USEHISTOGRAM pattern _ op[ list; fun ]
    implicit parameter element type ELEMENT
operator usehistogram2 alias USEHISTOGRAM2 pattern _ _ op[ list; fun ]
    implicit parameters element1, element2 types ELEMENT, ELEMENT

operator fold alias FOLD pattern _ op [ _; _ ]

operator shrink_eager alias SHRINK_EAGER pattern op(_, _, _)
operator shrink_eager2 alias SHRINK_EAGER2 pattern op(_, _, _, _, _)

operator shrink_lazy alias SHRINK_LAZY pattern op(_, _, _)
operator shrink_lazy2 alias SHRINK_LAZY2 pattern op(_, _, _, _, _)

operator insert1dvalue alias INSERT1DVALUE pattern op(_, _, _)
operator insert1d alias INSERT1D pattern op(_, _)
operator insert2dvalue alias INSERT2DVALUE pattern op(_, _, _, _)
operator insert2d alias INSERT2DVALUE pattern op(_, _, _)


# file Temporal/TemporalAlgebra.spec 

#This file is part of SECONDO.

#Copyright (C) 2004, University in Hagen, Department of Computer Science,
#Database Systems for New Applications.

#SECONDO is free software; you can redistribute it and/or modify
#it under the terms of the GNU General Public License as published by
#the Free Software Foundation; either version 2 of the License, or
#(at your option) any later version.

#SECONDO is distributed in the hope that it will be useful,
#but WITHOUT ANY WARRANTY; without even the implied warranty of
#MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#GNU General Public License for more details.

#You should have received a copy of the GNU General Public License
#along with SECONDO; if not, write to the Free Software
#Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA

operator intersects alias INTERSECTS pattern _ infixop _
operator inside alias INSIDE pattern _ infixop _
operator before alias BEFORE pattern _ infixop _
operator union alias UNION pattern _ infixop _
operator minimum alias MINIMUM pattern op ( _ )
operator maximum alias MAXIMUM pattern op ( _ )
operator inst alias INST pattern op ( _ )
operator val alias VAL pattern op ( _ )
operator atinstant alias ATINSTANT pattern _ infixop _
operator atperiods alias ATPERIODS pattern _ infixop _
operator when alias WHEN pattern _ op [_] 
operator deftime alias DEFTIME pattern op ( _ )
operator trajectory alias TRAJECTORY pattern op ( _ )
operator present alias PRESENT pattern _ infixop _
operator passes alias PASSES pattern _ infixop _
operator initial alias INITIAL pattern op ( _ )
operator final alias FINAL pattern op ( _ )
operator at alias AT pattern _ infixop _
operator units alias UNITS pattern op ( _ )
operator getunit alias GETUNIT pattern op ( _, _ )
operator theyear alias THEYEAR pattern op ( _ )
operator themonth alias THEMONTH pattern op ( _, _ )
operator theday alias THEDAY pattern op ( _, _, _ )
operator thehour alias THEHOUR pattern op ( _, _, _ ,_ )
operator theminute alias THEMINUTE pattern op ( _, _, _ ,_ , _ )
operator thesecond alias THESECOND pattern op ( _, _, _ ,_ , _, _ )
operator theperiod alias THEPERIOD pattern op ( _, _ )
operator theRange alias THERANGE pattern op( _ , _, _, _ )

operator equal alias EQUAL pattern _ infixop _
operator nonequal alias NONEQUAL pattern _ infixop _

operator bbox alias BBOX pattern op ( _, _ )
operator mbrange alias MBRANGE pattern op ( _ )
operator box2d alias BOX2D pattern op ( _ )
operator bbox2d alias BBOX2D pattern op ( _, _ )
operator bboxold alias BBOXOLD pattern op ( _, _ )
operator simplify alias SIMPLIFY pattern op (_, _)
operator breakpoints alias BREAKPOINTS pattern op(_,_)
operator breaks alias BREAKS pattern op(_,_,_)
operator integrate alias INTEGRATE pattern op(_)
operator minimum alias MINIMUM pattern op(_)
operator maximum alias MAXIMUM pattern op(_)

operator approximate alias APPROXIMATE pattern _ op [_, _ ]
operator translateappend alias TRANSLATEAPPEND pattern _ op [_, _ ]
operator translateappendS alias TRANSLATEAPPENDS pattern _ op [_, _ ]
operator reverse alias REVERSE pattern op ( _ )
operator samplempoint alias SAMPLEMPOINT pattern op ( _ , _ )
operator gps alias GPS pattern op(_, _)
operator disturb alias DISTURB pattern _ op [_, _]
operator length alias LENGTH pattern op ( _ )


operator equalizeU alias EQUALIZEU pattern _ op [_]
operator vertices alias VERTICES pattern op( _ )
operator hat alias HAT pattern op ( _ )
operator speedup alias SPEEDUP pattern _ op [_]
operator avg_speed alias AVG_SPEED pattern op(_)
operator submove alias SUBMOVE pattern _ op[_]
operator uval alias UVAL pattern op ( _ )
operator mp2onemp alias MP2ONEMP pattern op(_,_,_)
operator p2mp alias MP2ONEMP pattern op(_,_,_,_)
operator delay alias DELAY pattern op(_,_)
operator distancetraversed alias DISTANCETRAVERSED pattern op(_)
operator mint2mbool alias MINT2MBOOL pattern op(_)
operator mint2mreal alias MINT2MREAL pattern op(_)
operator turns alias TURNS pattern op( _, _, _, _, _, _ )
operator timeshift alias TIMESHIFT pattern _ op[ _ ]
operator gridcellevents alias GRIDCELLEVENTS pattern op(_)
operator squareddistance alias SQUAREDDISTANCE pattern op ( _ , _ )
operator getRefinementPartion alias GETREFINEMENTPARTION pattern op( _, _ )

operator atRect alias atRect pattern _ infixop _
operator moveTo alias moveTo pattern _ op [_]

operator fillGaps alias fillGaps pattern op(_,_)
operator removeShort alias REMOVESHORT pattern op(_,_)

operator getIntervals alias GETINTERVALS pattern op(_)

operator createCellGrid2D alias CREATECELLGRID2D pattern op( _, _, _, _, _ )
operator createCellGrid3D alias CREATECELLGRID3D pattern op( _, _, _, _, _, _, _, _)

operator components alias COMPONENTS pattern op(_)

operator replace alias REPLACE pattern op(_,_,_)

operator removePeriods alias REMOVEPERIODS pattern _ op [_,_] 



# file Collection/CollectionAlgebra.spec 

#This file is part of SECONDO.

#Copyright (C) 2004, University in Hagen, Department of Computer Science,
#Database Systems for New Applications.

#SECONDO is free software; you can redistribute it and/or modify
#it under the terms of the GNU General Public License as published by
#the Free Software Foundation; either version 2 of the License, or
#(at your option) any later version.

#SECONDO is distributed in the hope that it will be useful,
#but WITHOUT ANY WARRANTY; without even the implied warranty of
#MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#GNU General Public License for more details.

#You should have received a copy of the GNU General Public License
#along with SECONDO; if not, write to the Free Software
#Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA

operator contains alias CONTAINS pattern _ infixop _
operator in alias IN pattern _ infixop _
operator insert alias INSERT pattern _ _ op
operator + alias ADD pattern _ infixop _
operator create_vector alias CREATE_VECTOR pattern op (_, _)
operator create_set alias CREATE_SET pattern op (_, _)
operator create_multiset alias CREATE_MULTISET pattern op (_, _)
operator collect_set alias COLLET_SET pattern _ op
operator collect_multiset alias COLLECT_MULTISET pattern _ op
operator collect_vector alias COLLECT_VECTOR pattern _ op
operator components alias COMPONENTS pattern op (_)
operator get alias GET pattern op ( _, _ )
operator deleteelem alias DELETE pattern op ( _, _ )
operator concat alias CONCAT pattern _ _ op
operator union alias UNION pattern _ infixop _
operator intersection alias INTERSECTION pattern op ( _, _ )
operator difference alias DIFFERENCE pattern op ( _, _ )
operator > alias GT pattern _ infixop _
operator < alias LT pattern _ infixop _
operator <= alias LE pattern _ infixop _
operator >= alias GE pattern _ infixop _
operator = alias EQ pattern _ infixop _
operator # alias NE pattern _ infixop _
operator size alias SIZE pattern op ( _ )

# file GSL/GSLAlgebra.spec 

#This file is part of SECONDO.

#Copyright (C) 2007, University in Hagen, Department of Computer Science,
#Database Systems for New Applications.

#SECONDO is free software; you can redistribute it and/or modify
#it under the terms of the GNU General Public License as published by
#the Free Software Foundation; either version 2 of the License, or
#(at your option) any later version.

#SECONDO is distributed in the hope that it will be useful,
#but WITHOUT ANY WARRANTY; without even the implied warranty of
#MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#GNU General Public License for more details.

#You should have received a copy of the GNU General Public License
#along with SECONDO; if not, write to the Free Software
#Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA

operator rng_init alias RNG_INIT pattern op ( _, _ )
operator rng_setSeed alias RNG_SETSEED pattern op ( _ )
operator rng_getSeed alias RNG_GETSEED pattern op ( _ )
operator rng_getType alias RNG_GETTYPE pattern op ( _ )
operator rng_getMin alias RNG_GETMIN pattern op ( _ )
operator rng_getMax alias RNG_GETMAX pattern op ( _ )

operator rng_TypeDescriptors alias RNG_TYPEDESCRIPTORS pattern op ( _ )
operator rng_NoGenerators alias RNG_NOGENERATORS pattern op ( _ )
operator rng_GeneratorName alias RNG_GENERATORNAME pattern op ( _ )
operator rng_GeneratorMaxRand alias RNG_GENERATORMAXRAND pattern op ( _ )
operator rng_GeneratorMinRand alias RNG_GENERATORMINRAND pattern op ( _ )

operator rng_int alias RNG_INT pattern op ( _ )
operator rng_intN alias RNG_INTN pattern op ( _ )
operator rng_real alias RNG_REAL pattern op ( _ )
operator rng_realpos alias RNG_REALPOS pattern op ( _ )
operator rng_flat alias RNG_FLAT pattern op ( _ , _ )
operator rng_binomial alias RNG_BINOMIAL pattern op ( _, _ )
operator rng_gaussian alias RNG_GAUSSIAN pattern op ( _ )
operator rng_exponential alias RNG_EXPONENTIAL pattern op ( _ )
operator rng_geometric alias RNG_GEOMETRIC pattern op ( _ )
operator rng_poisson alias RNG_POISSON pattern op ( _ )

# file Conversion/Conversion.spec 

#This file is part of SECONDO.

#Copyright (C) 2004, University in Hagen, Department of Computer Science, 
#Database Systems for New Applications.

#SECONDO is free software; you can redistribute it and/or modify
#it under the terms of the GNU General Public License as published by
#the Free Software Foundation; either version 2 of the License, or
#(at your option) any later version.

#SECONDO is distributed in the hope that it will be useful,
#but WITHOUT ANY WARRANTY; without even the implied warranty of
#MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#GNU General Public License for more details.

#You should have received a copy of the GNU General Public License
#along with SECONDO; if not, write to the Free Software
#Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA

operator rtf2txt alias RTF2TXT pattern  op( _ )

# file MovingRegion/MovingRegionAlgebra.spec 

operator unittest2 alias UNITTEST2 pattern _ infixop _
operator unittest3 alias UNITTEST3 pattern _ infixop _
operator traversed alias TRAVERSED pattern op ( _ )
operator mraprec alias MRAPREC pattern op ( _ , _ )
operator timeshift alias TIMESHIFT pattern _ op [ _ ]
# commented out due to problems with implementation: 
#operator units alias UNITS pattern op ( _ )

# file PointRectangle/PointRectangleAlgebra.spec 

#This file is part of SECONDO.

#Copyright (C) 2004, University in Hagen, Department of Computer Science, 
#Database Systems for New Applications.

#SECONDO is free software; you can redistribute it and/or modify
#it under the terms of the GNU General Public License as published by
#the Free Software Foundation; either version 2 of the License, or
#(at your option) any later version.

#SECONDO is distributed in the hope that it will be useful,
#but WITHOUT ANY WARRANTY; without even the implied warranty of
#MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#GNU General Public License for more details.

#You should have received a copy of the GNU General Public License
#along with SECONDO; if not, write to the Free Software
#Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA

operator intersects alias INTERSECTS pattern _ infixop _
operator inside alias INSIDE pattern _ infixop _

# file NearestNeighbor/NearestNeighborAlgebra.spec 

#This file is part of SECONDO.

#Copyright (C) 2004, University in Hagen, Department of Computer Science,
#Database Systems for New Applications.

#SECONDO is free software; you can redistribute it and/or modify
#it under the terms of the GNU General Public License as published by
#the Free Software Foundation; either version 2 of the License, or
#(at your option) any later version.

#SECONDO is distributed in the hope that it will be useful,
#but WITHOUT ANY WARRANTY; without even the implied warranty of
#MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#GNU General Public License for more details.

#You should have received a copy of the GNU General Public License
#along with SECONDO; if not, write to the Free Software
#Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA

operator distancescan alias DISTANCESCAN pattern _ _ op [_, _]
operator distancescan2 alias DISTANCESCAN2 pattern _ _ op [_, _]
operator distancescan2S alias DISTANCESCAN2S pattern _ op [_, _]
operator distancescan3 alias DISTANCESCAN3 pattern _ _ op [_, _]
operator distancescan4 alias DISTANCESCAN4 pattern _ _ op [_, _, _]
operator knearest alias KNEAREST pattern _ op [_,_, _]
operator knearestvector alias KNEARESTVECTOR pattern _ _ op [_, _]
operator oldknearestfilter alias OLDKNEARESTFILTER pattern _ _ op [_, _]
operator bboxes alias bboxes pattern  _ op [_]
operator coverage alias COVERAGE pattern op(_)
operator coverage2 alias COVERAGE2 pattern op(_)
operator knearestfilter alias KNEARESTFILTER pattern _ _ _ _ op [_,_,_]
operator mqknearest alias MQKNEAREST pattern _ _ _ _ _ _ op[_, _]
operator covleafnode alias COVLEAFNODE pattern op(_,_,_)


operator greeceknearest alias TBKNEARESTFILTER pattern _ _ op [_,_, _]
operator chinaknearest alias HCKNNKNEAREST pattern _ _ op [_,_, _]

operator cellindex alias CELLINDEX pattern op(_,_)
operator cellpartition alias CELLPARTITION pattern _op[_,_,_,_,_]
operator gnuplotnode alias GNUPLOTNODE pattern _ op[_,_]
operator kclosestpair alias KCLOSESTPAIR pattern _ _ op[_,_,_]
operator isknn alias ISKNN pattern op(_,_,_,_,_)

operator mergertree alias MERGERTREE pattern op(_,_)
operator mergecov2 alias MERGECOV2 pattern op(_,_,_)

operator knearest_dist alias KNEAREST_DIST pattern _ op [_,_, _]


operator closestPairs alias CLOSESTPAIRS pattern _ _ _ _ op [_]



# file Trie/Trie.spec 




operator createemptytrie alias CREATEEMPTYTREE pattern op(_)
operator insert2trie alias INSERT2TRIE pattern op(_,_,_)
operator searchtrie alias SEARCHTRIE pattern op(_,_)
operator contains alias CONTAINS pattern _ infixop _
operator trieEntries alias trieEntries pattern _ op [_]

operator createInvFile alias CREATEINVFILE pattern _ op [_,_]
operator insertInvFile alias INSERTINVFILE pattern _ op [_,_]
operator searchWord alias SEARCHWORD pattern _ op [_]
operator searchPrefix alias SEARCHPREFIX pattern _ op [_]

operator getFileInfo alias GETFILEINFO pattern op(_)

operator wordCount alias WORDCOUNT pattern _ op [_] 
operator prefixCount alias PREFIXCOUNT pattern _ op [_] 

operator defaultInvFileSeparators alias DEFAULTSEPARATORS pattern op()
operator getSeparators alias GETSEPARATORS pattern op(_)

operator containsWord alias CONTAINSWORD pattern op(_,_,_)
operator containsPrefix alias CONTAINSPREFIX pattern op(_,_,_)




# file RobustPlaneSweep/RobustPlaneSweepAlgebra.spec 

#This file is part of SECONDO.

#Copyright (C) 2004, University in Hagen, Department of Computer Science,
#Database Systems for New Applications.

#SECONDO is free software; you can redistribute it and/or modify
#it under the terms of the GNU General Public License as published by
#the Free Software Foundation; either version 2 of the License, or
#(at your option) any later version.

#SECONDO is distributed in the hope that it will be useful,
#but WITHOUT ANY WARRANTY; without even the implied warranty of
#MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#GNU General Public License for more details.

#You should have received a copy of the GNU General Public License
#along with SECONDO; if not, write to the Free Software
#Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA

operator trajectory2 alias TRAJECTORY2 pattern op ( _ )
operator crossings alias CROSSINGS pattern op ( _, _ )
operator intersection alias INTERSECTION pattern op(_,_)
operator minus alias MINUS pattern _ infixop _
operator union alias UNION pattern _ infixop _
operator toline alias TOLINE pattern op ( _ )
operator intersects alias INTERSECTS pattern _ infixop _

# file GIS/GISAlgebra.spec 

#This file is part of SECONDO.

#Copyright (C) 2013, University in Hagen, Department of Computer Science,
#Database Systems for New Applications.

#SECONDO is free software; you can redistribute it and/or modify
#it under the terms of the GNU General Public License as published by
#the Free Software Foundation; either version 2 of the License, or
#(at your option) any later version.

#SECONDO is distributed in the hope that it will be useful,
#but WITHOUT ANY WARRANTY; without even the implied warranty of
#MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#GNU General Public License for more details.

#You should have received a copy of the GNU General Public License
#along with SECONDO; if not, write to the Free Software
#Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA

# author: Jana Stehmann

operator slope alias SLOPE pattern _ op[_]
operator aspect alias ASPECT pattern _ op[_]
operator hillshade alias HILLSHADE pattern _ op[_,_,_]
operator ruggedness alias RUGGEDNESS pattern _ op
operator contourlines alias CONTOURLINES pattern _ op[_]

# file ExtRelation-2/ExtRelation2Algebra.spec 

#This file is part of SECONDO. 

#Copyright (C) 2009, University in Hagen, Department of Computer Science, 
#Database Systems for New Applications.

#SECONDO is free software; you can redistribute it and/or modify
#it under the terms of the GNU General Public License as published by
#the Free Software Foundation; either version 2 of the License, or
#(at your option) any later version.

#SECONDO is distributed in the hope that it will be useful,
#but WITHOUT ANY WARRANTY; without even the implied warranty of
#MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#GNU General Public License for more details.

#You should have received a copy of the GNU General Public License
#along with SECONDO; if not, write to the Free Software
#Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA


operator sort alias SORT pattern _ op
operator sortby alias SORTBY pattern _ op [list]
operator sortmergejoin alias SORTMERGEJOIN pattern _ _ op [_, _] 
operator gracehashjoin alias GRACEHASHJOIN pattern _ _ op [_, _, _]
operator hybridhashjoin alias HYBRIDHASHJOIN pattern _ _ op [_, _, _]

operator sortmergejoinParam alias SORTMERGEJOINPARAM pattern _ _ op [_, _, _] 
operator gracehashjoinParam alias GRACEHASHJOINPARAM pattern _ _ op [_, _, _, _, _, _]
operator hybridhashjoinParam alias HYBRIDHASHJOINPARAM pattern _ _ op [_, _, _, _, _, _]
operator sortParam alias SORTPARAM pattern _ op[_, _, _]
operator sortbyParam alias SORTBYPARAM pattern _ op[list; _, _, _]
operator heapstl alias HEAPSTL pattern _ op
operator heapstd alias HEAPSTD pattern _ op
operator heapbup alias HEAPBUP pattern _ op
operator heapbup2 alias HEAPBUP2 pattern _ op
operator heapmdr alias HEAPMDR pattern _ op
operator tuplecomp alias TUPLECOMP pattern _ op
operator tuplefile alias TUPLEFILE pattern _ op[_]
operator tuplebuffer alias TUPLEBUFFER pattern _ op[_]
operator tuplebuffer2 alias TUPLEBUFFER2 pattern _ op[_]

operator itHashJoin alias ITHASHJOIN pattern _ _ op [_,_]

operator sorth alias SORTH pattern _ op
operator sortbyh alias SORTBYH pattern _ op [list]
operator sortattr alias SORTATTR pattern _ op [_]



# file Raster2/Raster2Algebra.spec 

#This file is part of SECONDO.

#Copyright (C) 2004, University in Hagen, Department of Computer Science,
#Database Systems for New Applications.

#SECONDO is free software; you can redistribute it and/or modify
#it under the terms of the GNU General Public License as published by
#the Free Software Foundation; either version 2 of the License, or
#(at your option) any later version.

#SECONDO is distributed in the hope that it will be useful,
#but WITHOUT ANY WARRANTY; without even the implied warranty of
#MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#GNU General Public License for more details.

#You should have received a copy of the GNU General Public License
#along with SECONDO; if not, write to the Free Software
#Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA

operator atlocation alias ATLOCATION pattern _ op [_,_]
operator atinstant alias ATINSTANT pattern _ infixop _
operator inst alias INST pattern op(_)
operator val alias VAL pattern op(_)
operator atperiods alias ATPERIODS pattern _ infixop _
operator atrange alias ATRANGE pattern _ op [_,_,_]
operator deftime alias DEFTIME pattern op(_)
operator bbox alias BBOX pattern op(_,_)
operator minimum alias MINIMUM pattern op(_)
operator maximum alias MAXIMUM pattern op(_)
operator map alias MAP pattern _ op [fun ]
         implicit parameter element type CELL1
operator map2 alias MAP2 pattern _ _ op [fun]
         implicit parameters elem1, elem2 types CELL1, CELL2
operator fromregion alias FROMREGION pattern op(_,_)
operator toregion alias TOREGION pattern _ op
operator s2ms alias STOMS pattern  op(_,_,_,_)
operator compose  alias COMPOSE pattern _ infixop _
operator matchgrid alias MATCHGRID pattern _ op [_,fun,_]
         implicit parameter element type CELLS
operator getgrid alias GETGRID pattern op(_)
operator importHgt alias IMPORTHGT pattern _ op
operator importEsriGrid alias IMPORTESRIGRID pattern op(_)
operator importEsriRaster alias IMPORTESRIRASTER pattern _ op

operator addLayer alias ADDLAYER pattern _ op[_,_]


operator importTiff alias IMPORTTIFF pattern _ op




# file TBTree/TBTreeAlgebra.spec 

#This file is part of SECONDO.

#Copyright (C) 2004, University in Hagen, Department of Computer Science,
#Database Systems for New Applications.

#SECONDO is free software; you can redistribute it and/or modify
#it under the terms of the GNU General Public License as published by
#the Free Software Foundation; either version 2 of the License, or
#(at your option) any later version.

#SECONDO is distributed in the hope that it will be useful,
#but WITHOUT ANY WARRANTY; without even the implied warranty of
#MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#GNU General Public License for more details.

#You should have received a copy of the GNU General Public License
#along with SECONDO; if not, write to the Free Software
#Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA

operator createtbtree alias CREATETBTREE pattern _ op [ _, _ ]
operator bulkloadtbtree alias BULKLOADTBTREE pattern _ op [ _, _ , _]
operator tbentries alias TBENTRIES pattern op(_)
operator tbnodes alias TBNODES pattern op(_)
operator tbleafnodes alias TBLEAFNODES pattern op(_)
operator tblevel alias TBLEVEL pattern op(_)
operator getnodes alias GETNODES pattern op(_)
operator getFileInfo alias GETFILEINFO pattern op(_)
operator getentries alias GETENTRIES pattern op(_)
operator windowintersectsS alias WINDOWINTERSECTSS pattern _ op [_]
operator getBox alias GETBOX pattern op(_)
operator windowintersects alias WINDOWINTERSECTS pattern _ _ op[_]
operator bulkloadtbtree alias BULKLOADTBTREE pattern _ op[_, _, _]
operator getentries alias GETENTRIES pattern op(_)


# file Date/DateAlgebra.spec 

#This file is part of SECONDO.

#Copyright (C) 2004, University in Hagen, Department of Computer Science, 
#Database Systems for New Applications.

#SECONDO is free software; you can redistribute it and/or modify
#it under the terms of the GNU General Public License as published by
#the Free Software Foundation; either version 2 of the License, or
#(at your option) any later version.

#SECONDO is distributed in the hope that it will be useful,
#but WITHOUT ANY WARRANTY; without even the implied warranty of
#MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#GNU General Public License for more details.

#You should have received a copy of the GNU General Public License
#along with SECONDO; if not, write to the Free Software
#Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA

operator < alias LT pattern _ infixop _
operator = alias EQ pattern _ infixop _
operator > alias GT pattern _ infixop _ 
operator year_of alias YEAR_OF pattern op ( _ )
operator month_of alias MONTH_OF pattern op ( _ )
operator day_of alias DAY_OF pattern op ( _ )
operator thedate alias THEDATE pattern op ( _, _, _ )
operator str2date alias STR2DATE pattern op ( _  )

# file SuffixTree/SuffixTreeAlgebra.spec 

#This file is part of SECONDO.

#Copyright (C) 2004, University in Hagen, Department of Computer Science, 
#Database Systems for New Applications.

#SECONDO is free software; you can redistribute it and/or modify
#it under the terms of the GNU General Public License as published by
#the Free Software Foundation; either version 2 of the License, or
#(at your option) any later version.

#SECONDO is distributed in the hope that it will be useful,
#but WITHOUT ANY WARRANTY; without even the implied warranty of
#MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#GNU General Public License for more details.

#You should have received a copy of the GNU General Public License
#along with SECONDO; if not, write to the Free Software
#Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA


operator createsuffixtree alias CREATESUFFIXTREE pattern op ( _ )

operator createsuffixtree_quadratic alias CREATESUFFIXTREE_QUADRATIC pattern op ( _ )

operator patternoccurs alias PATTERNOCCURS pattern _ infixop _

operator patternpositions alias PATTERNPOSITIONS pattern op(_ , _)

operator patterncount alias PATTERNCOUNT pattern _ infixop _

operator longestrepeatedsubstring alias LONGESTREPEATEDSUBSTRING 
pattern op ( _ )

operator shortestuniquesubstring alias SHORTESTUNIQUESUBSTRING pattern op ( _ )

operator longestcommonsubstring alias LONGESTCOMMONSUBSTRING pattern op ( _, _ )

operator maximaluniquematches alias MAXIMALUNIQUEMATCHES pattern op ( _, _ )

operator circularstringlinearization alias CIRCULARSTRINGLINEARIZATION 
pattern op ( _ )

operator kmismatch alias KMISMATCH pattern op ( _, _, _ )

operator = alias GLEICH pattern _ infixop _


operator patternFilter alias PATTERNFILTER pattern _ op [_,_]


# file MapMatchingP/MapMatchingPAlgebra.spec 

#This file is part of SECONDO.

#Copyright (C) 2004, University in Hagen, Department of Computer Science, 
#Database Systems for New Applications.

#SECONDO is free software; you can redistribute it and/or modify
#it under the terms of the GNU General Public License as published by
#the Free Software Foundation; either version 2 of the License, or
#(at your option) any later version.

#SECONDO is distributed in the hope that it will be useful,
#but WITHOUT ANY WARRANTY; without even the implied warranty of
#MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#GNU General Public License for more details.

#You should have received a copy of the GNU General Public License
#along with SECONDO; if not, write to the Free Software
#Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA


# postfix operator having a parameter in square brackets
operator countNumberMMP alias COUNTNUMBERMMP pattern _ op[_]
# operator testMMP alias TESTMMP pattern _ op
operator coordMMP alias TESTMMP pattern _ op
operator mmprelcount2 alias MMPRELCOUNT2 pattern _ op
operator nodeRelToRegion alias NODERELTOREGION pattern _ op
operator pointToRegion alias POINTTOREGION pattern _ op[_]
operator nodesToRegionNodes alias NODESTOREGIONNODES pattern _ op[ _ , _ ]
operator edgesToRegionNodes alias EDGESTOREGIONNODES pattern _ op[ _ ]
operator sLineToRegion alias SLINETOREGION pattern _ op[_]
operator sLineRelToRegion alias SLINERELTOREGION pattern _ op[_]
operator createEdgesForRegionNodes alias CREATEEDGESFORREGIONNODES pattern _ op[ _ , _ , _ , _ ]
operator mapMatchWalks alias MAPMATCHWALKS pattern op( _ , _ , _ , _ , _ )
operator removeOverlapping alias REMOVEOVERLAPPING pattern op( _ , _ , _ , _ )





# file DBScan/DBScanAlgebra.spec 


# file Standard-C++/StandardAlgebra.spec 

#This file is part of SECONDO.

#Copyright (C) 2004, University in Hagen, Department of Computer Science, 
#Database Systems for New Applications.

#SECONDO is free software; you can redistribute it and/or modify
#it under the terms of the GNU General Public License as published by
#the Free Software Foundation; either version 2 of the License, or
#(at your option) any later version.

#SECONDO is distributed in the hope that it will be useful,
#but WITHOUT ANY WARRANTY; without even the implied warranty of
#MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#GNU General Public License for more details.

#You should have received a copy of the GNU General Public License
#along with SECONDO; if not, write to the Free Software
#Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA

operator dbscanR alias DBSCANR pattern _ op [list]
operator dbscanM alias DBSCANM pattern _ op [list]
operator dbscanF alias DBSCANF pattern _ op [list]

# file StreamExample/StreamExampleAlgebra.spec 

#This file is part of SECONDO.

#Copyright (C) 2004, University in Hagen, Department of Computer Science, 
#Database Systems for New Applications.

#SECONDO is free software; you can redistribute it and/or modify
#it under the terms of the GNU General Public License as published by
#the Free Software Foundation; either version 2 of the License, or
#(at your option) any later version.

#SECONDO is distributed in the hope that it will be useful,
#but WITHOUT ANY WARRANTY; without even the implied warranty of
#MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#GNU General Public License for more details.

#You should have received a copy of the GNU General Public License
#along with SECONDO; if not, write to the Free Software
#Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA

operator intstream alias INTSTREAM pattern op (_, _)
operator printintstream alias PRINTX pattern _ op

operator filterintstream alias FILTERX pattern _ op [ fun ] implicit parameter elem type STREAMELEM
operator countintstream alias COUNTX pattern _ op

# file MainMemory2/MainMemory2Algebra.spec 

#This file is part of SECONDO.

#Copyright (C) 2004, University in Hagen, Department of Computer Science,
#Database Systems for New Applications.

#SECONDO is free software; you can redistribute it and/or modify
#it under the terms of the GNU General Public License as published by
#the Free Software Foundation; either version 2 of the License, or
#(at your option) any later version.

#SECONDO is distributed in the hope that it will be useful,
#but WITHOUT ANY WARRANTY; without even the implied warranty of
#MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#GNU General Public License for more details.

#You should have received a copy of the GNU General Public License
#along with SECONDO; if not, write to the Free Software
#Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA

operator memload alias MEMLOAD pattern op (_)
operator memloadflob alias MEMLOADFLOB pattern op (_)
operator meminit alias MEMINIT pattern op (_)
operator mfeed alias MFEED pattern _ op
operator letmconsume alias LETMCONSUME pattern _ op [_]
operator letmconsumeflob alias LETMCONSUMEFLOB pattern _ op [_]
operator memdelete alias MEMDELETE pattern op (_)
operator memobject alias MEMOBJECT pattern op (_)
operator memlet alias MEMLET pattern op(_,_)
operator memletflob alias MEMLETFLOB pattern op(_,_)
operator memupdate alias MEMUPDATE pattern op(_,_)
#operator mcreateRtree alias MCREATERTREE pattern op(_,_)
operator mcreateRtree alias MCREATERTREE pattern _ op [_]
operator memgetcatalog alias MEMGETCATALOG pattern op()
operator memsize alias MEMSIZE pattern op()
operator memclear alias MEMCLEAR pattern op()
operator meminsert alias MEMINSERT pattern _ op[_]
operator mwindowintersects alias MWINDOWINTERSECTS pattern _ _ op[_]
operator mwindowintersectsS alias MWINDOWINTERSECTSS pattern  _ op[_]
operator mconsume alias MCONSUME pattern _ op
operator mcreateAVLtree2 alias MCREATEAVLTREE2 pattern _ op[_,_,_]
operator mcreateAVLtree alias  MCREATEAVLTREE pattern _ op [_]
operator mexactmatch alias MEXACTMATCH pattern _ _ op [_]
operator mrange alias MRANGE pattern _ _ op [_, _]
operator matchbelow alias MATCHBELOW pattern _ _ op [_]
operator matchbelow2 alias MATCHBELOW2 pattern _ _ op [_,_,_]
operator mcreateRtree2 alias MCREATERTREE2 pattern _ op [_,_]

operator mcreateMtree2 alias MCREATEMTREE2 pattern _ op [_,_,_]
operator mdistRange2 alias MDISTRANGE2 pattern _ op [_,_]
operator mdistScan2 alias MDISTSCAN2 pattern _ op [_]

operator mcreateMtree alias MCREATEMTREE pattern _ op [_,_]
operator mdistRange alias MDISTRANGE pattern _ _ op [_,_]
operator mdistScan alias MDISTSCAN  pattern _ _ op [_]

operator mexactmatchS alias MEXACTMATCHS pattern _ op [_]
operator mrangeS alias MRANGES pattern _ op[_,_]
operator matchbelowS alias MATCHBELOWS pattern _ op[_]

operator gettuples alias GETTUPLES pattern _ _ op



operator mwrap alias MWRAP pattern op(_)

operator mcreatettree alias  MCREATETTREE pattern _ op [_]
operator minsertttree alias MINSERTTTREE pattern _ op [_,_]
operator mdeletettree alias MDELETETTREE pattern _ op [_,_]

operator minsertavltree alias MINSERTAVLTREE pattern _ op [_,_]
operator mdeleteavltree alias MDELETEAVLTREE pattern _ op [_,_]

operator mcreateinsertrel alias MCREATEINSERTREL pattern op(_)
operator minsert alias MINSERT pattern _ op [_]
operator minsertsave alias MINSERTSAVE pattern _ op [_,_]
operator minserttuple alias MINSERTTUPLE pattern _ op [list]
operator minserttuplesave alias MINSERTTUPLESAVE pattern _ op [list;_]
operator mcreatedeleterel alias MCREATEDELETEREL pattern op(_)
operator mdelete alias MDELETE pattern _ op [_]
operator mdeletesave alias MDELETESAVE pattern _ op [_,_]
operator mdeletebyid alias MDELETEBYID pattern _ op [_]

operator mdeletedirect     alias MDELETEDIRECT pattern _ _ op
operator mdeletedirectsave alias MDELETEDIRECTSAVE pattern _ _ _ op

operator mcreateupdaterel alias MCREATEUPDATEREL pattern op(_)
operator mupdate alias MUPDATE pattern _ op[_; funlist] implicit parameter tuple type MTUPLE2
operator mupdatesave alias MUPDATESAVE pattern _ op[_,_; funlist] implicit parameter tuple type MTUPLE2
operator mupdatebyid alias MUPDATEBYID pattern _ op[_; funlist] 
         implicit parameter tuple type MTUPLE

operator moinsert alias MOINSERT pattern _ op [_]
operator modelete alias MODELETE pattern _ op [_]
operator moconsume alias MOCONSUME pattern _ op[list]
operator letmoconsume alias LETMOCONSUME pattern _ op [_;list]
operator letmoconsumeflob alias LETMOCONSUMEFLOB pattern _ op [_;list]
operator morange alias MORANGE pattern _ op [list; list]
operator moleftrange alias MOLEFTRANGE pattern _ op [list]
operator morightrange alias MORIGHTRANGE pattern _ op [list]
operator moshortestpathd alias MOSHORTESTPATHD pattern _ op [_,_,_; fun] 
         implicit parameter tuple type MTUPLE
operator moshortestpatha alias MOSHORTESTPATHA pattern _ op [_,_,_; fun,fun] 
         implicit parameter tuple type MTUPLE
operator moconnectedcomponents alias MOCONNECTEDCOMPONENTS pattern _ op 
         
operator mquicksort alias MQUICKSORT pattern _ op
operator mquicksortby alias MQUICKSORTBY pattern _ op [list]

operator memglet alias MEMGLET pattern op(_,_)
operator memgletflob alias MEMGLETFLOB pattern op(_,_)
operator mgshortestpathd alias MGSHORTESTPATHD pattern _ op [_,_,_; fun] 
         implicit parameter tuple type MTUPLE
operator mgshortestpatha alias MGSHORTESTPATHA pattern _ op [_,_,_; fun, fun] 
         implicit parameter tuple type MTUPLE
operator mgconnectedcomponents alias MGCONNECTEDCOMPONENTS pattern _ op 
         
operator momapmatchmht alias MOMAPMATCHMHT pattern op(_,_,_,_)

         
operator collect_mvector alias COLLECT_MVECTOR pattern _ op[_,_]

operator pwrap alias PWRAP pattern op(_)

operator sizemv alias SIZEMV pattern op(_)
operator getmv alias GETMV pattern _ op[_]
operator putmv alias putMV pattern _ op[_,_]
operator isSortedmv alias ISSORTEDMV pattern op(_)
operator sortmv alias SORTMV pattern op(_)
operator feedmv alias FEEDMV pattern  _ op
operator findmv alias FINDMV pattern  op(_,_)
operator matchbelowmv alias MATCHBELOWMV pattern  _ op [_] 

# file MTree/MTreeAlgebra.spec 

#This file is part of SECONDO.

#Copyright (C) 2004, University in Hagen, Department of Computer Science,
#Database Systems for New Applications.

#SECONDO is free software; you can redistribute it and/or modify
#it under the terms of the GNU General Public License as published by
#the Free Software Foundation; either version 2 of the License, or
#(at your option) any later version.

#SECONDO is distributed in the hope that it will be useful,
#but WITHOUT ANY WARRANTY; without even the implied warranty of
#MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#GNU General Public License for more details.

#You should have received a copy of the GNU General Public License
#along with SECONDO; if not, write to the Free Software
#Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA

operator createmtree alias CREATEMTREE pattern _ op [_]
operator createmtree2 alias CREATEMTREE2 pattern _ op [_, _, _]
operator createmtree3 alias CREATEMTREE3 pattern _ op [_, _, _, _]

operator rangesearch alias RANGESEARCH pattern _ _ op [_, _]
operator nnsearch alias NNSEARCH pattern _ _ op [_, _]

# file Stream/StreamAlgebra.spec 

#This file is part of SECONDO.

#Copyright (C) 2006, University in Hagen, Department of Computer Science,
#Database Systems for New Applications.

#SECONDO is free software; you can redistribute it and/or modify
#it under the terms of the GNU General Public License as published by
#the Free Software Foundation; either version 2 of the License, or
#(at your option) any later version.

#SECONDO is distributed in the hope that it will be useful,
#but WITHOUT ANY WARRANTY; without even the implied warranty of
#MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#GNU General Public License for more details.

#You should have received a copy of the GNU General Public License
#along with SECONDO; if not, write to the Free Software
#Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA


operator aggregateS alias AGGREGATES pattern _ op [ _ ; _ ] implicit parameter streamelem type STREAMELEM
operator count alias COUNT pattern _ op
operator echo alias ECHO pattern _ op [_ , _]
operator ensure alias ENSURE pattern _ op [_]
operator feed alias FEED pattern _ op
operator filter alias FILTER pattern _ op [ fun ] implicit parameter streamelem type STREAMELEM !!
operator intstream alias INTSTREAM pattern op ( _, _ )
operator kinds alias KINDS pattern _ op
operator namedtransformstream alias NAMEDTRANSFORMSTREAM pattern _ op [_]
operator printstream alias PRINTSTREAM pattern _ op
operator projecttransformstream alias PROJECTTRANSFORMSTREAM pattern _ op [_]
operator realstream alias REALSTREAM pattern op ( _, _, _ )
operator tail alias TAIL pattern _ op [ _ , _ ]
operator timeout alias TIMEOUT pattern _ op [ _ ]
operator transformstream alias TRANSFORMSTREAM pattern _ op
operator use alias USE pattern _ op [ _ ] implicit parameter streamelem type STREAMELEM
operator use2 alias USE2 pattern _ _ op [ _ ] implicit parameters streamelem1, streamelem2 types STREAMELEM, STREAMELEM2

operator sbuffer alias SBUFFER pattern _ op [_]

operator isOrdered alias ISORDERED pattern _ op


operator mergesec alias MERGESEC pattern _ _ op
operator mergediff alias MERGEDIFF pattern _ _ op
operator mergeunion alias MERGEUNION pattern _ _ op
operator mergeattrstreams alias MERGEATTRSTREAMS pattern _ _ op
operator rdup alias RDUP pattern _ op
operator xth alias XTH pattern _ op[_]
operator minattr alias MINATTR pattern _ op
operator maxattr alias MAXATTR pattern _ op

operator nth alias NTH pattern _ op[_,_]

operator sumattr alias SUMATTR pattern _ op
operator avgattr alias AVGATTR pattern _ op
operator consume alias CONSUME pattern _ op

operator ts alias TS pattern _ op[funlist] implicit parameter streamelem type STREAMELEM

operator as alias AS pattern _ op[fun] implicit parameter streamelem type STREAMELEM

# file Region2/Region2Algebra.spec 

operator setscalefactor alias SETSCALEFACTOR pattern op ( _, _ )
operator setregion2outstyle alias SETOUTSTYLE pattern op ( _)

operator isempty alias ISEMPTY pattern op( _ )
operator intersects alias INTERSECTS pattern _ infixop _
operator inside alias INSIDE pattern _ infixop _
operator adjacent alias ADJACENT pattern _ infixop _
operator overlaps alias OVERLAPS pattern _ infixop _
operator no_components alias NO_COMPONENTS pattern  op ( _ )
operator no_segments alias NO_SEGMENTS pattern  op ( _ )
operator bbox alias BBOX pattern  op ( _, _ )
operator translate alias TRANSLATE pattern  _ op [list]
operator scale alias SCALE pattern _ op [ _, _ ]
operator scale2 alias SCALE2 pattern _ op [ _, _ ]
operator components alias COMPONENTS pattern op(_)
operator getHoles alias GETHOLES pattern op(_)
operator region2region2 alias REGION2REGION2 pattern _ op
operator regiontoregion2 alias REGIONTOREGION2 pattern op ( _, _ )
operator rect2region2 alias RECT2REGION2 pattern _ op
operator recttoregion2 alias RECTTOREGION2 pattern op ( _, _ )
operator size alias SIZE pattern op ( _ )
operator area alias AREA pattern op ( _ )


# file Simulation/SimulationAlgebra.spec 

#This file is part of SECONDO.

#Copyright (C) 2007, University in Hagen, Department of Computer Science,
#Database Systems for New Applications.

#SECONDO is free software; you can redistribute it and/or modify
#it under the terms of the GNU General Public License as published by
#the Free Software Foundation; either version 2 of the License, or
#(at your option) any later version.

#SECONDO is distributed in the hope that it will be useful,
#but WITHOUT ANY WARRANTY; without even the implied warranty of
#MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#GNU General Public License for more details.

#You should have received a copy of the GNU General Public License
#along with SECONDO; if not, write to the Free Software
#Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA

operator sim_set_dest_params alias SIM_SET_DEST_PARAMS pattern op ( _ , _ , _ , _ , _ , _ , _ , _ , _ , _ , _, _, _, _ )
operator sim_set_event_params alias SIM_SET_EVENT_PARAMS pattern op ( _ , _ , _ )
operator sim_create_trip alias SIM_CREATE_TRIP pattern _ op[ _ ]
operator sim_print_params alias SIM_PRINT_PARAMS pattern op ( _ )
operator sim_fillup_mpoint alias SIM_FILLUP_MPOINT pattern _ op [ _, _, _, _ ]
operator sim_trips alias SIM_TRIPS pattern _ op [ _ ]

# file BTree/BTreeAlgebra.spec 

#This file is part of SECONDO.

#Copyright (C) 2004, University in Hagen, Department of Computer Science,
#Database Systems for New Applications.

#SECONDO is free software; you can redistribute it and/or modify
#it under the terms of the GNU General Public License as published by
#the Free Software Foundation; either version 2 of the License, or
#(at your option) any later version.

#SECONDO is distributed in the hope that it will be useful,
#but WITHOUT ANY WARRANTY; without even the implied warranty of
#MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#GNU General Public License for more details.

#You should have received a copy of the GNU General Public License
#along with SECONDO; if not, write to the Free Software
#Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA

operator createbtree alias CREATEBTREE pattern _ op [ _ ]
operator leftrange alias LEFTRANGE pattern _ _ op [ _ ]
operator rightrange alias RIGHTRANGE pattern _ _ op [ _ ]
operator range alias RANGE pattern _ _ op [ _, _ ]
operator insertbtree alias INSERTBTREE pattern _ _ op [ _ ]
operator deletebtree alias DELETEBTREE pattern _ _ op [ _ ]
operator updatebtree alias UPDATEBTREE pattern _ _ op [ _ ]
operator exactmatch alias EXACTMATCH pattern _ _ op [ _ ]
operator exactmatchS alias EXACTMATCHS pattern _ op [ _ ]
operator leftrangeS alias LEFTRANGES pattern _ op [ _ ]
operator rightrangeS alias RIGHTRANGES pattern _ op [ _ ]
operator rangeS alias RANGES pattern _ op [ _, _ ]
operator getFileInfo alias GETFILEINFO pattern op ( _ )
operator keyrange alias KEYRANGE pattern _ _ op [ _ ]

# file TransportationMode/TransportationMode.spec 

#This file is part of SECONDO.

#Copyright (C) 2004, University in Hagen, Department of Computer Science,
#Database Systems for New Applications.

#SECONDO is free software; you can redistribute it and/or modify
#it under the terms of the GNU General Public License as published by
#the Free Software Foundation; either version 2 of the License, or
#(at your option) any later version.

#SECONDO is distributed in the hope that it will be useful,
#but WITHOUT ANY WARRANTY; without even the implied warranty of
#MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#GNU General Public License for more details.

#You should have received a copy of the GNU General Public License
#along with SECONDO; if not, write to the Free Software
#Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA

operator checksline alias CHECKSLINE pattern op(_,_)
operator modifyboundary alias MODIFYBOUNDARY pattern op(_,_)
operator segment2region alias SEGMENT2REGION pattern op(_,_)
operator paveregion alias PAVEREGION pattern op(_,_,_,_,_,_,_)
operator junregion alias JUNREGION pattern op(_,_,_,_,_,_,_)
operator decomposeregion alias DECOMPOSEREGION pattern op(_)
operator getpavenode1 alias GETPAVENODE1 pattern op(_,_,_,_,_)

operator getpavenode2 alias GETPAVENODE2 pattern op(_,_,_,_)

operator triangulation  alias TRIANGULATION pattern op(_)
operator triangulation2  alias TRIANGULATION2 pattern op(_)
operator convex alias CONVEX pattern op(_)
operator geospath alias GEOSPATH pattern op(_,_,_)
operator createdualgraph alias CREATEDUALGRAPH pattern op(_,_,_)

operator walk_sp_old alias WALK_SP_OLD pattern op(_,_,_,_,_)
operator walk_sp alias WALK_SP pattern op(_,_,_,_)
operator test_walk_sp alias TEST_WALK_SP pattern op(_,_,_,_,_)
operator setpave_rid alias SETPAVE_RID pattern op(_,_,_)
operator pave_loc_togp alias PAVE_LOC_TOGP pattern op(_,_,_,_)
operator generate_wp1 alias GENERATE_WP1 pattern op(_,_)
operator generate_wp2 alias GENERATE_WP2 pattern op(_,_)
operator generate_wp3 alias GENERATE_WP3 pattern op(_,_)
operator zval alias ZVAL pattern op(_)
operator zcurve alias ZCURVE pattern op(_,_)
operator regvertex alias REGVERTEX pattern op(_)
operator triangulation_new  alias TRIANGULATION_NEW pattern op(_)
operator triangulation_ext  alias TRIANGULATION_EXT pattern op(_)

operator triangulation_new2  alias TRIANGULATION_NEW2 pattern op(_)
operator triangulation_ext2  alias TRIANGULATION_EXT2 pattern op(_)
operator smcdgte alias SMCDGTE pattern op(_,_)
operator get_dg_edge alias GET_DG_EDGE pattern op(_,_)

operator getvnode alias GETVNODE pattern op(_,_,_,_,_,_)
operator getvgedge alias GETVGEDGE pattern op(_,_,_,_,_)
operator myinside alias MYINSIDE pattern _ infixop _
operator at_point alias AT_POINT pattern op(_,_,_)

operator decomposetri alias DECOMPOSETRI pattern op(_)
operator createvgraph alias CREATEVGRAPH pattern op(_,_,_)
operator getcontour alias GETCONTOUR pattern op(_)
operator getpolygon alias GETPOLYGON pattern op(_,_)

operator getallpoints alias GETALLPOINTS pattern op(_)
operator rotationsweep alias ROTATIONSWEEP pattern op(_,_,_,_,_)
operator gethole alias GETHOLE pattern op(_)

operator geninterestp1 alias GENINTERESTP1 pattern op(_,_,_,_,_,_,_)
operator geninterestp2 alias GENINTERESTP2 pattern op(_,_,_,_,_,_)
operator thepavement alias THEPAVEMENT pattern op(_,_)
operator cellbox alias CELLBOX pattern op(_,_)
operator create_bus_route1 alias CREATE_BUS_ROUTE1 pattern op(_,_,_,_,_,_,_)
operator create_bus_route2 alias CREATE_BUS_ROUTE2 pattern op(_,_,_,_,_,_,_,_)
operator refine_bus_route alias REFINE_BUS_ROUTE pattern op(_,_,_,_,_,_,_,_)

operator create_bus_route3 alias CREATE_BUS_ROUTE3 pattern op(_,_,_,_,_)
operator create_bus_route4 alias CREATE_BUS_ROUTE3 pattern op(_,_,_,_,_,_,_,_)
operator create_bus_stop1 alias CREATE_BUS_STOP1 pattern op(_,_,_,_,_,_,_,_,_)
operator create_bus_stop2 alias CREATE_BUS_STOP2 pattern op(_,_,_,_,_)
operator create_bus_stop3 alias CREATE_BUS_STOP3 pattern op(_,_,_,_,_,_,_,_)
operator create_bus_stop4 alias CREATE_BUS_STOP5 pattern op(_,_,_,_,_,_,_,_)
operator create_bus_stop5 alias CREATE_BUS_STOP5 pattern op(_,_,_,_,_,_,_,_)
operator getbusstops alias GETBUSSTOPS pattern op(_,_,_)
operator getstopid alias GETSTOPID pattern op(_)
operator getbusroutes alias GETBUSROUTES pattern op(_,_,_)
operator brgeodata alias BRGEODATA pattern op(_)
operator bsgeodata alias BSGEODATA pattern op(_,_)
operator up_down alias UP_DOWN pattern op(_)
operator thebusnetwork alias THEBUSNETWORK pattern op(_,_,_,_)
operator bn_busstops alias BN_BUSSTOPS pattern op(_)
operator bn_busroutes alias BN_BUSROUTES pattern op(_)
operator brsegments alias BRSEGMENTS pattern op(_,_)
operator mapbstopave alias MAPBSTOPAVE pattern op(_,_,_,_)
operator bs_neighbors1 alias BS_NEIGHBORS1 pattern op(_,_,_,_,_,_)
operator bs_neighbors2 alias BS_NEIGHBORS2 pattern op(_)
operator bs_neighbors3 alias BS_NEIGHBORS3 pattern op(_,_,_)
operator createbgraph alias CREATEBGRAPH pattern op(_,_,_,_,_)
operator getadjnode_bg alias GETADJNODE_BG pattern op(_,_)
operator bnnavigation alias BNNAVIGATION pattern op(_,_,_,_,_)
operator test_bnnavigation alias TEST_BNNAVIGATION pattern op(_,_,_,_,_)
operator get_route_density1 alias GET_ROUTE_DENSITY1 pattern op(_,_,_,_,_,_,_,_,_,_)
operator set_ts_nightbus alias SET_TS_NIGHTBUS pattern op(_,_,_,_,_,_)
operator set_ts_daybus alias SET_TS_DAYBUS pattern op(_,_,_,_,_,_)
operator set_br_speed alias SET_BR_SPEED pattern op(_,_,_,_,_,_,_,_)
operator create_bus_segment_speed alias CREATE_BUS_SEGMENT_SPEED pattern op(_,_,_,_,_,_,_,_,_,_,_)
operator create_night_bus_mo alias CREATE_NIGHT_BUS_MO pattern op(_,_,_)
operator create_daytime_bus_mo alias CREATE_DAYTIME_BUS_MO pattern op(_,_,_)

operator create_time_table1 alias CREATE_TIME_TABLE1 pattern op(_,_,_,_,_)


operator create_time_table2 alias CREATE_TIME_TABLE2 pattern op(_,_,_)
operator refmo2genmo alias REFMO2GENMO pattern op(_,_,_)
operator themetronetwork alias THEMETRONETWORK pattern op(_,_,_,_)
operator ms_neighbors1 alias MS_NEIGHBORS1 pattern op(_)
operator ms_neighbors2 alias MS_NEIGHBORS2 pattern op(_,_,_,_,_)
operator createmgraph alias CREATEMGRAPH pattern op(_,_,_,_)
operator createmetroroute alias CREATEMETROROUTE pattern op(_,_)
operator createmetrostop alias CREATEMETROSTOP pattern op(_)
operator createmetromo alias CREATEMETROMO pattern op(_,_)
operator mapmstopave alias MAPMSTOPAVE pattern op(_,_,_)
operator mnnavigation alias MNNAVIGATION pattern op(_,_,_,_)

operator thefloor alias THEFLOOR pattern op(_,_)
operator getheight alias GETHEIGHT pattern op(_)
operator getregion alias GETREGION pattern op(_)
operator thedoor alias THEDOOR pattern op(_,_,_,_,_,_)

operator type_of_door alias TYPE_OF_DOOR pattern op(_)
operator loc_of_door alias LOC_OF_DOOR pattern op(_,_)
operator state_of_door alias STATE_OF_DOOR pattern op(_)
operator get_floor alias GET_FLOOR pattern op(_,_)
operator add_height_groom alias ADD_HEIGHT_GROOM pattern op(_,_)
operator translate_groom alias TRANSLATE_GROOM pattern _ op [list]
operator createdoor3d alias CREATEDOOR3D pattern op(_)
operator createdoorbox alias CREATEDOORBOX pattern op(_)
operator createdoor1 alias CREATEDOOR1 pattern op(_,_,_,_,_,_)
operator createdoor2 alias CREATEDOOR2 pattern op(_)
operator createadjdoor1 alias CREATEADJDOOR1 pattern op(_,_,_,_,_,_,_)
operator createadjdoor2 alias CREATEADJDOOR2 pattern op(_,_)
operator path_in_region alias PATH_IN_REGION pattern op(_,_,_)
operator size alias SIZE pattern op(_)
operator bbox3d alias BBOX_D pattern op(_)
operator thebuilding alias THEBUILDING pattern op(_,_,_,_)
operator theindoor alias THEINDOOR pattern op(_,_,_)
operator createigraph alias CREATEIGRAPH pattern op(_,_,_,_)

operator generate_ip1 alias GENERATE_IP1 pattern op(_,_,_)
operator generate_mo1 alias GENERATE_MO1 pattern op(_,_,_,_,_,_)
operator getindoorpath alias GETINDOORPATH pattern op(_,_)
operator indoornavigation alias INDOORNAVIGATION pattern op(_,_,_,_,_,_)
operator instant2day alias INSTANT2DAY pattern op(_)

operator maxrect alias MAXRECT pattern op(_)
operator remove_dirty alias REMOVE_DIRTY pattern op(_,_,_)
operator getrect1 alias GETRECT1 pattern op(_,_,_)
operator path_to_building alias PATH_TO_BUILDING pattern op(_,_,_,_,_)
operator set_building_type alias SET_BUILDING_TYPE pattern op(_,_,_)
operator ref_id alias REF_ID pattern op(_)
operator tm_at alias TM_AT pattern op(_,_)
operator tm_at2 alias TM_AT2 pattern op(_,_,_)
operator tm_at3 alias TM_AT3 pattern op(_,_,_,_)
operator val alias VAL pattern op(_)
operator inst alias INST pattern op(_)
operator contains alias CONTAINS pattern _ infixop _ 
operator tmcontains alias TMCONTAINS pattern op(_,_,_,_)
operator tm_duration alias TM_DURATION pattern op(_,_)
operator initial alias INITIAL pattern op(_)
operator final alias FINAL pattern op(_)
operator tm_build_id alias TM_BUILD_ID pattern op(_,_)
operator bcontains alias BCONTAINS pattern _ infixop _
operator bcontains2 alias BCONTAINS2 pattern op(_,_,_)

operator tm_room_id alias TM_ROOM_ID pattern op(_,_)
operator tm_plus_id alias TM_PLUS_ID pattern op(_,_)
operator tm_passes alias TM_PASSES pattern op(_,_,_)
operator tm_distance alias TM_DISTANCE pattern op(_,_,_)
operator tm_genloc alias TM_GENLOC pattern op(_,_,_)
operator modeval alias MODEVAL pattern op(_)
operator genmoindex alias GENMOINDEX pattern op(_)


operator setref_id alias SETREF_ID pattern op(_)
operator deftime alias DEFTIME pattern op(_)
operator no_components alias NO_COMPONENTS pattern op (_)
operator lowres alias LOWRES pattern op(_)
operator trajectory alias TRAJECTORY pattern op(_)
operator gentrajectory alias GENTRAJECTORY pattern op(_,_)
operator genrangevisible alias GENRANGEVISIBLE pattern op(_,_)
operator getmode alias GETMODE pattern op(_)
operator getref alias GETREF pattern op(_,_)
operator atinstant alias ATINSTANT pattern _ infixop _
operator atperiods alias ATPERIODS pattern _ infixop _
operator mapgenmo alias MAPGENMO pattern op(_,_)
operator tm_units alias TM_UNITS pattern op(_)
operator getloc alias GETLOC pattern op(_,_)
operator tm_traffic alias TM_TRAFFIC pattern op(_,_,_,_)

operator thespace alias THESPACE pattern op(_)
operator putinfra alias PUTINFRA pattern op(_,_)
operator putrel alias PUTREL pattern op(_,_)
operator getinfra alias GETINFRA pattern op(_,_)
operator addinfragraph alias ADDINFRAGRAPH pattern op(_,_)
operator genmo_tm_list alias GENMO_TM_LIST pattern op(_)

operator generate_genmo alias GENERATE_GENMO pattern op(_,_,_,_)

operator generate_bench_1 alias GENERATE_BENCH_1 pattern op(_,_,_,_,_,_)
operator generate_bench_2 alias GENERATE_BENCH_2 pattern op(_,_,_,_,_)
operator generate_bench_3 alias GENERATE_BENCH_3 pattern op(_,_,_,_,_)
operator generate_bench_4 alias GENERATE_BENCH_4 pattern op(_,_,_,_,_,_)
operator generate_bench_5 alias GENERATE_BENCH_5 pattern op(_,_,_,_,_)

operator generate_car alias GENERATE_CAR pattern op(_,_,_,_)

operator get_rg_nodes alias GET_RG_NODES pattern op(_)
operator get_rg_edges1 alias GET_RG_EDGES1 pattern op(_,_)
operator get_rg_edges2 alias GET_RG_EDGES2 pattern op(_,_)
operator creatergraph alias CREATERGRAPH pattern op(_,_,_,_)
operator shortestpath_tm alias SHORTESTPATH_TM pattern op(_,_,_,_)


operator navigation1 alias NAVIGATION1 pattern op(_,_,_,_,_,_,_)

operator modifyline alias MODIFYLINE pattern op(_)
operator checkroads alias CHECKROADS pattern op(_,_)
operator tm_join1 alias TM_JOIN1 pattern op(_,_,_)



operator nearstops_building alias NEARSTOPS_PAVE pattern op(_,_)

# file RobustGeometry/RobustGeometryAlgebra.spec 

operator intersectionBO alias INTERSECTIONBO pattern op(_,_)

# file UpdateRel/UpdateRelationAlgebra.spec 

#This file is part of SECONDO. 

#Copyright (C) 2004, University in Hagen, Department of Computer Science, 
#Database Systems for New Applications.

#SECONDO is free software; you can redistribute it and/or modify
#it under the terms of the GNU General Public License as published by
#the Free Software Foundation; either version 2 of the License, or
#(at your option) any later version.

#SECONDO is distributed in the hope that it will be useful,
#but WITHOUT ANY WARRANTY; without even the implied warranty of
#MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#GNU General Public License for more details.

#You should have received a copy of the GNU General Public License
#along with SECONDO; if not, write to the Free Software
#Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA

operator createinsertrel alias CREATEINSERTREL pattern _ op
operator createdeleterel alias CREATEDELETEREL pattern _ op
operator createupdaterel alias CREATEUPDATEREL pattern _ op
operator insert alias INSERT pattern _ _ op
operator insertsave alias INSERTSAVE pattern _ _ _ op
operator inserttuple alias INSERTTUPLE pattern _ op [list]
operator inserttuplesave alias INSERTTUPLESAVE pattern _ _ op [list]
operator deletedirect alias DELETEDIRECT pattern _ _ op
operator deletesearch alias DELETESEARCH pattern _ _ op
operator deletesearchsave alias DELETESEARCHSAVE pattern _ _ _ op
operator deletedirectsave alias DELETEDIRECTSAVE pattern _ _ _ op
operator updatesearch alias UPDATESEARCH pattern _ _ op [funlist]implicit parameter tuple type TUPLE
operator updatedirect alias UPDATEDIRECT pattern _ _ op [funlist]implicit parameter tuple type TUPLE

operator updatedirect2 alias UPDATEDIRECT2 pattern _ _ op [ _ ; funlist ] implicit parameters tuple1, tuple2 types TUPLE, TUPLE2

operator updatesearchsave alias UPDATESEARCHSAVE pattern _ _ _ op [funlist]implicit parameter tuple type TUPLE
operator updatedirectsave alias UPDATEDIRECTSAVE pattern _ _ _ op [funlist]implicit parameter tuple type TUPLE
operator addid alias ADDID pattern _ op
operator deletebyid alias DELETEBYID pattern _ op [ _ ]
operator updatebyid alias UPDATEBYID pattern _ op [ _; funlist]implicit parameter tuple type TUPLE

operator insertrtree alias INSERTRTREE pattern _ _ op [ _ ]
operator deletertree alias DELETERTREE pattern _ _ op [ _ ]
operator updatertree alias UPDATERTREE pattern _ _ op [ _ ]


# file TemporalNet/TemporalNetAlgebra.spec 

operator mpoint2mgpoint alias MPOINT2MGPOINT pattern op ( _, _ )
operator intersection alias INTERSECTION pattern op ( _, _ )
operator units alias UNITS pattern op ( _ )
operator simplify alias SIMPLIFY pattern op ( _ , _ )
operator passes alias PASSES pattern _ infixop _
operator trajectory alias TRAKECTORY pattern op ( _ )
operator length alias LENGTH pattern op ( _ )
operator atinstant alias ATINSTANT pattern _ infixop _
operator initial alias INITIAL pattern op ( _ )
operator final alias FINAL pattern op ( _ )
operator at alias AT pattern _ infixop _
operator inside alias INSIDE pattern _ infixop _
operator val alias VAL pattern op ( _ )
operator inst alias INST pattern op ( _ )
operator atperiods alias ATPERIODS pattern _ infixop _
operator present alias PRESENT pattern _ infixop _
operator isempty alias ISEMPTY pattern op ( _ )
operator no_components alias NO_COMPONENTS pattern op ( _ )
operator deftime alias DEFTIME pattern op ( _ )
operator unitrid alias UNITRID pattern  op ( _ )
operator unitstartpos alias UNITSTARTPOS pattern op ( _ )
operator unitendpos alias UNITENDPOS pattern op ( _ )
operator unitendtime alias UNITENDTIME pattern op ( _ )
operator unitstarttime alias UNITSTARTTIME pattern op ( _ )
operator unitbox alias UNITBOX pattern op ( _ )
operator unitbox2 alias UNITBOX2 pattern op ( _ )
operator unitboundingbox alias UNITBOUNDINGBOX pattern op ( _ )
operator mgpbbox alias MGPBBOX pattern op ( _ )
operator mgpoint2mpoint alias MGPOINT2MPOINT pattern op ( _ )
operator distance alias DISTANCE pattern op ( _ , _ )
operator union alias UNION pattern _ infixop _
operator startunitinst alias STARTUNITINST pattern op ( _ )
operator endunitinst alias STARTUNITINST pattern op ( _ )
operator ugpoint2mgpoint alias UGPOINT2MGPOINT pattern op ( _ )
operator mgp2mgpsecunits alias MGP2MGPSECUNITS pattern _ op [ _ , _ , _ ]
operator mgp2mgpsecunits2 alias MGP2MGPSECUNITS2 pattern op ( _ , _ )
operator mgp2mgpsecunits3 alias MGP2MGPSECUNITS3 pattern _ op [ _ ]
operator mgpsu2tuple alias MGPSU2TUPLE pattern _ op
operator intersects alias INTERSECTS pattern _ infixop _
operator netdistance alias NETDISTANCE pattern op ( _ , _ )
operator netdistancenew alias NETDISTANCENEW pattern op ( _ , _ )
operator mapmatching alias MAPMATCHING pattern op( _ , _ )


# file TrajectoryAnnotation/TrajectoryAnnotation.spec 

#This file is part of SECONDO.

#Copyright (C) 2004, University in Hagen, Department of Computer Science,
#Database Systems for New Applications.

#SECONDO is free software; you can redistribute it and/or modify
#it under the terms of the GNU General Public License as published by
#the Free Software Foundation; either version 2 of the License, or
#(at your option) any later version.

#SECONDO is distributed in the hope that it will be useful,
#but WITHOUT ANY WARRANTY; without even the implied warranty of
#MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#GNU General Public License for more details.

#You should have received a copy of the GNU General Public License
#along with SECONDO; if not, write to the Free Software
#Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA

operator geocode alias GEOCODE pattern op (_, _, _, _)



# file STPattern/STPatternAlgebra.spec 

#This file is part of SECONDO.

#Copyright (C) 2004, University in Hagen, Department of Computer Science, 
#Database Systems for New Applications.

#SECONDO is free software; you can redistribute it and/or modify
#it under the terms of the GNU General Public License as published by
#the Free Software Foundation; either version 2 of the License, or
#(at your option) any later version.

#SECONDO is distributed in the hope that it will be useful,
#but WITHOUT ANY WARRANTY; without even the implied warranty of
#MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#GNU General Public License for more details.

#You should have received a copy of the GNU General Public License
#along with SECONDO; if not, write to the Free Software
#Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA

operator vec alias CREATESTVECTOR pattern op(_)
operator stpattern alias STPATTERN pattern _ op[funlist;list]
operator stpattern2 alias STPATTERN2 pattern _ op[funlist;list]
operator stpatternex alias STPATTERNEX pattern _ op[funlist;list;_]
operator stpatternex2 alias STPATTERNEX2 pattern _ op[funlist;list;_]
operator stpatternextend alias STPATTERNEXTEND pattern _ op[funlist;list] implicit parameter streamelem type STREAMELEM
operator stpatternextend2 alias STPATTERNEXTEND2 pattern _ op[funlist;list] implicit parameter streamelem type STREAMELEM
operator stpatternexextend alias STPATTERNEXEXTEND pattern _ op[funlist;list;fun] implicit parameter streamelem type STREAMELEM
operator stpatternexextend2 alias STPATTERNEXEXTEND2 pattern _ op[funlist;list;fun] implicit parameter streamelem type STREAMELEM
operator stpatternextendstream alias STPATTERNEXTENDSTREAM pattern _ op[funlist;list] implicit parameter streamelem type STREAMELEM
operator stpatternextendstream2 alias STPATTERNEXTENDSTREAM2 pattern _ op[funlist;list] implicit parameter streamelem type STREAMELEM
operator stpatternexextendstream alias STPATTERNEXEXTENDSTREAM pattern _ op[funlist;list;fun] implicit parameter streamelem type STREAMELEM
operator stpatternexextendstream2 alias STPATTERNEXEXTENDSTREAM2 pattern _ op[funlist;list;fun] implicit parameter streamelem type STREAMELEM
operator stconstraint alias STCONSTRAINT pattern op(_,_,_)
operator end alias END pattern op(_)
operator start alias START pattern op(_)
operator randommbool alias RandomMBool pattern op(_)
operator passmbool alias PassMBool pattern op(_)
operator randomdelay alias RANDOMDELAY pattern op(_,_)
operator computeclosure alias COMPUTECLOSURE pattern _ op[funlist;list]
operator randomshiftdelay alias RANDOMSHIFTDELAY pattern op(_,_,_,_)

# file Optics/OpticsAlgebra.spec 


# file Standard-C++/StandardAlgebra.spec 

#This file is part of SECONDO.

#Copyright (C) 2004, University in Hagen, Department of Computer Science, 
#Database Systems for New Applications.

#SECONDO is free software; you can redistribute it and/or modify
#it under the terms of the GNU General Public License as published by
#the Free Software Foundation; either version 2 of the License, or
#(at your option) any later version.

#SECONDO is distributed in the hope that it will be useful,
#but WITHOUT ANY WARRANTY; without even the implied warranty of
#MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#GNU General Public License for more details.

#You should have received a copy of the GNU General Public License
#along with SECONDO; if not, write to the Free Software
#Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA

operator opticsR alias OPTICSR pattern _ op [list]
operator opticsM alias OPTICSM pattern _ op [list]
operator opticsF alias OPTICSF pattern _ op [list]
operator extractDbScan alias EXTRACTDBSCAN pattern _ op[_]


# file ExtRelation-C++/ExtRelationAlgebra.spec 

#This file is part of SECONDO. 

#Copyright (C) 2004, University in Hagen, Department of Computer Science, 
#Database Systems for New Applications.

#SECONDO is free software; you can redistribute it and/or modify
#it under the terms of the GNU General Public License as published by
#the Free Software Foundation; either version 2 of the License, or
#(at your option) any later version.

#SECONDO is distributed in the hope that it will be useful,
#but WITHOUT ANY WARRANTY; without even the implied warranty of
#MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#GNU General Public License for more details.

#You should have received a copy of the GNU General Public License
#along with SECONDO; if not, write to the Free Software
#Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA


operator head alias HEAD pattern _ op [ _ ]

operator max alias MAX pattern _ op [ _ ]
operator min alias MIN pattern _ op [ _ ]
operator avg alias AVG pattern _ op [ _ ]
operator sum alias SUM pattern _ op [ _ ]
operator var alias VAR pattern _ op [ _ ]
operator stats alias STATS pattern _ op [ _ , _ ]

operator concat alias CONCAT pattern _ _ op
operator cancel alias CANCEL pattern _ op [ fun ] implicit parameter tuple type TUPLE
operator rdup alias RDUP pattern _ op
operator krdup alias KRDUP pattern _ op [ list ]
operator krduph alias KRDUPH pattern _ op [ _,_ ]
operator sort_old alias SORTOLD pattern _ op
operator extend alias EXTEND pattern _ op [ funlist ] implicit parameter tuple type TUPLE
operator projectextend alias PROJECTEXTEND pattern _ op [ list ; funlist ] implicit parameter tuple type TUPLE
operator extendstream alias EXTENDSTREAM pattern _ op [funlist] implicit parameter tuple type TUPLE
operator projectextendstream alias PROJECTEXTENDSTREAM pattern _ op [list; funlist] implicit parameter tuple type TUPLE

operator groupby alias GROUPBY pattern _ op [list; funlist] implicit parameter group type GROUP
operator slidingwindow alias SLIDINGWINDOW pattern _ op [_, _; funlist] implicit parameter group type GROUP
operator mergesec alias MERGESEC pattern _ _ op
operator mergediff alias MERGEDIFF pattern _ _ op
operator mergeunion alias MERGEUNION pattern _ _ op

operator sortby_old alias SORTBYOLD pattern _ op [list]
operator mergejoin alias MERGEJOIN pattern _ _ op [_, _] !!
operator sortmergejoin_old alias SORTMERGEJOINOLD pattern _ _ op [_, _] !!
operator smouterjoin alias SMOUTERJOIN pattern _ _ op [_, _] !!
operator hashjoin alias HASHJOIN pattern _ _ op [_, _, _] !!

operator loopjoin alias LOOPJOIN pattern _ op [ fun ] implicit parameter tuple type TUPLE !!
operator loopsel alias LOOPSEL pattern _ op [ fun ] implicit parameter tuple type TUPLE

operator extract alias EXTRACT pattern _ op [ _ ]

operator printrefs alias PRINTREFS pattern _ op

operator sample alias SAMPLEFEED pattern _ op [_, _]

operator aggregate alias AGGREGATE pattern _ op [ _; _; _ ] 
operator aggregateB alias AGGREGATEB pattern _ op [ _; _; _ ] 
operator aggregateC alias AGGREGATEC pattern _ op [  _  ] 

operator symmjoin alias SYMMJOIN pattern _ _ op [ fun ] implicit parameters lefttuple, righttuple types TUPLE, TUPLE2 !!

operator symmouterjoin alias SYMMOUTERJOIN pattern _ _ op [ fun ] implicit parameters lefttuple, righttuple types TUPLE, TUPLE2 !!

operator symmproductextend alias SYMMPRODUCTEXTEND pattern _ _ op [ funlist ] implicit parameters lefttuple, righttuple types TUPLE, TUPLE2
operator symmproduct alias SYMMPRODUCT pattern _ _ op
operator addcounter alias ADDCOUNTER pattern _  op [_ , _]

operator ksmallest alias KSMALLEST pattern _ op [_ ; list  ] 
operator kbiggest alias KBIGGEST pattern _ op [_ ; list  ] 

operator extend_aggr alias EXTEND_AGGR pattern _ op [list  ; funlist ]

operator extend_last  alias EXTEND_LAST pattern _ op [funlist ]  implicit parameters currenttuple, lasttuple types TUPLE, TUPLE

operator extend_next alias EXTEND_NEXT pattern _ op [funlist ] implicit parameters currenttuple, lasttuple types TUPLE, TUPLE

operator toFields alias TOFIELDS pattern _ op [ _ ]
operator fromFields alias FROMFIELDS pattern _ _ op


operator applyToAll alias APPLYTOALL pattern _ op [ _ ]


operator replaceAttr alias REPLACEATTR  pattern _ op [ funlist ] implicit parameter tuple type TUPLE

operator pfilter alias PFILTER pattern _ op [fun] implicit parameters currenttuple, lasttuple types TUPLE, TUPLE

operator extendX alias EXTENDX pattern _ op[list ; fun ; _] implicit parameter tuple type TUPLE

operator countMt alias COUNTMT pattern _op [_]

operator bringToMemory alias BRINGTOMEMORY pattern _ op

operator feedS alias feedS pattern _ op[_]


operator nth alias NTH pattern _ op [_, _] 

operator obojoin alias OBOJOIN pattern _ _ op

operator obojoinD alias OBOJOIND pattern _ _ op[list]
operator gettuples alias GETTUPLES pattern _ _ op
operator isOrdered alias ISORDERED pattern _ op
operator isOrderedBy alias ISORDEREDBY pattern _ op[list]

operator tids alias TIDS pattern _ op

operator noRefs alias NOREFS pattern op(_)



# file Rectangle/RectangleAlgebra.spec 

#This file is part of SECONDO.

#Copyright (C) 2004, University in Hagen, Department of Computer Science,
#Database Systems for New Applications.

#SECONDO is free software; you can redistribute it and/or modify
#it under the terms of the GNU General Public License as published by
#the Free Software Foundation; either version 2 of the License, or
#(at your option) any later version.

#SECONDO is distributed in the hope that it will be useful,
#but WITHOUT ANY WARRANTY; without even the implied warranty of
#MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#GNU General Public License for more details.

#You should have received a copy of the GNU General Public License
#along with SECONDO; if not, write to the Free Software
#Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA

operator rectangle2 alias RECTANGLE2 pattern op ( _ , _, _, _)
operator rectangle3 alias RECTANGLE3 pattern op ( _ , _, _, _, _, _)
operator rectangle4 alias RECTANGLE4 pattern op ( _ , _, _, _, _, _, _, _)
operator rectangle8 alias RECTANGLE8 pattern op ( _ , _, _, _, _, _, _, _, _)

operator translate alias TRANSLATE pattern  _ op [list]
operator union alias UNION pattern _ infixop _
operator inside alias INSIDE pattern _ infixop _
operator intersects alias INTERSECTS pattern _ infixop _
operator intersection alias INTERSECTION pattern op ( _ , _)
operator distance alias DISTANCE pattern op ( _ , _ )
operator rectproject alias RECTPROJECT pattern op ( _ , _ , _ )
operator minD alias MIND pattern op ( _ , _ )
operator maxD alias MAXD pattern op ( _ , _ )
operator bbox alias BBOX pattern op( _, _ )
operator enlargeRect alias ENLARGERECT pattern op( _ )
operator scalerect alias SCALERECT pattern op( _, _, _ )
operator size alias SIZE pattern op( _ )
operator bboxintersects alias BBOXINTERSECTS pattern _ infixop _
operator cellnumber alias CELLNUMBER pattern op(_, _, _, _, _, _)
operator gridintersects alias GRIDINTERSECTS pattern op (_, _, _, _, _, _, _, _)
operator gridcell2rect alias GRIDCELL2RECT pattern op (_, _, _, _, _, _)
operator center alias CENTER pattern op ( _ )
operator partitionRect alias PARTITIONRECT pattern op (_,_,_)
operator topleftclass alias TOPLEFTCLASS pattern op ( _ , _ )

operator extendGeo alias EXTENDGEO pattern _ op [_]
operator perimeter alias PERIMETER pattern op(_)
operator scale alias SCALE pattern _ op [_,_]

# file DistributedClustering/DistributedClusteringAlgebra.spec 


# file Standard-C++/StandardAlgebra.spec 

#This file is part of SECONDO.

#Copyright (C) 2004, University in Hagen, Department of Computer Science, 
#Database Systems for New Applications.

#SECONDO is free software; you can redistribute it and/or modify
#it under the terms of the GNU General Public License as published by
#the Free Software Foundation; either version 2 of the License, or
#(at your option) any later version.

#SECONDO is distributed in the hope that it will be useful,
#but WITHOUT ANY WARRANTY; without even the implied warranty of
#MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#GNU General Public License for more details.

#You should have received a copy of the GNU General Public License
#along with SECONDO; if not, write to the Free Software
#Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA

operator dbdacscan alias DBDACSCAN pattern _ op [list]
operator distclmerge alias DISTCLMERGE pattern op (_,_,_,_,_,_,_,_,_,_)
operator distsamp alias DISTSAMP pattern _ _ op [list]
# file ChessB/ChessBAlgebra.spec 

#This file is part of SECONDO.

#Copyright (C) 2004, University in Hagen, Department of Computer Science, 
#Database Systems for New Applications.

#SECONDO is free software; you can redistribute it and/or modify
#it under the terms of the GNU General Public License as published by
#the Free Software Foundation; either version 2 of the License, or
#(at your option) any later version.

#SECONDO is distributed in the hope that it will be useful,
#but WITHOUT ANY WARRANTY; without even the implied warranty of
#MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#GNU General Public License for more details.

#You should have received a copy of the GNU General Public License
#along with SECONDO; if not, write to the Free Software
#Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA

operator = alias EQUAL pattern _ infixop _
operator < alias LESS pattern _ infixop _
operator ~ alias APPROXEQUAL pattern  _ infixop _
operator is alias IS pattern _ infixop _
operator samecolor alias SAMECOLOR pattern _ infixop _
operator is_neighbor alias IS_NEIGHBOR pattern _ infixop _
operator left alias LEFT pattern _ infixop _
operator right alias RIGHT pattern _ infixop _
operator above alias ABOVE pattern _ infixop _
operator below alias BELOW pattern _ infixop _

operator iswhite alias ISWHITE pattern op ( _ )
operator piecevalue alias PIECEVALUE pattern op ( _ )
operator column alias COLUMN pattern op ( _ )
operator row alias ROW pattern op ( _ )
operator north alias NORTH pattern op ( _ )
operator south alias SOUTH pattern op ( _ )
operator west alias WEST pattern op ( _ )
operator east alias EAST pattern op ( _ )
operator northwest alias NORTHWEST pattern op ( _ )
operator southeast alias SOUTHEAST pattern op ( _ )
operator northeast alias NORTHEAST pattern op ( _ )
operator southwest alias SOUTHWEST pattern op ( _ )

operator startfield alias from pattern op ( _ )
operator endfield alias to pattern op ( _ )
operator agent alias AGENTB pattern _ op
operator captures alias capturesb pattern _ op 
operator captured alias CAPTUREDB pattern _ op
operator check alias is_checkb pattern _ op
operator checkmate alias CHECKMATE pattern op ( _ )
operator is_mate alias ISMATE pattern op ( _ )
operator stalemate alias is_stalemate pattern op ( _ )
operator is_castling alias IS_CASTLING pattern op ( _ )
operator is_enpassant alias IS_ENPASSANT pattern op ( _ )
operator enpassant_field alias ENPASSANT_FIELD pattern op ( _ )
operator readpgn alias READPGN pattern  op ( _ )
operator lastmove alias LASTMOVE pattern  op ( _ )
operator is_even alias IS_EVEN pattern  op ( _ )
operator is_odd alias IS_ODD pattern  op ( _ )

operator neighbors alias NEIGHBORS pattern _ op
operator pieces alias PIECES pattern _ op
operator moveNo alias MOVENO pattern _ op
operator pos_fields alias POS_FIELDS pattern _ op
operator pos_moves alias POS_MOVES pattern _ op
operator pos_moves_blocked alias POS_MOVES_BLOCKED pattern _ op
operator positions alias POSITIONS pattern _ op
operator moves alias MOVES pattern _ op
operator history alias HISTORY pattern _ op
operator twotuples alias TWOTUPLES pattern _ op

operator includes alias INCLUDES pattern _ op [ _ ]
operator piececount alias PIECECOUNT pattern _ op [ _ ]
operator attackcount alias ATTACKCOUNT pattern _ op [ _ ]
operator protectcount alias PROTECTCOUNT pattern _ op [ _ ]
operator apply_ply alias APPLY_PLY pattern _ op [ _ ]
operator piece_moves alias PIECE_MOVES pattern _ op [ _ ]
operator piece_moves_blocked alias PIECE_MOVES_BLOCKED pattern _ op [ _ ]
operator getkey alias GETKEY pattern _ op [ _ ]
operator getposition alias GETPOSITION pattern _ op [ _ ]
operator getmove alias GETMOVE pattern _ op [ _ ]
operator exists alias EXISTS pattern _ op [ fun ] implicit parameter elem type STREAMELEM
operator forall alias FORALL pattern _ op [ fun ] implicit parameter elem type STREAMELEM
operator ntuples alias NTUPLES pattern _ op [ _ ]

operator apply_move alias APPLY_MOVE pattern _ op [ _, _ ]
operator posrange_b alias POSRANGEB pattern _ op [ _, _ ]

operator attackedby alias ATTACKEDBY pattern _ _ op [ _ ]
operator attackedfrom alias ATTACKEDFROM pattern _ _ op [ _ ]
operator protectedby alias PROTECTEDBY pattern _ _ op [ _ ]
operator protectedfrom alias PROTECTEDFROM pattern _ _ op [ _ ]

# just to test a stream operator implementation inside the
# chess algebra's class framework.
operator stddev alias STDDEV pattern _ op
#operator movingpoints alias MOVINGPOINTS pattern _ op

# file OrderedRelation/OrderedRelationAlgebra.spec 

#This file is part of SECONDO.

#Copyright (C) 2004, University in Hagen, Department of Computer Science,
#Database Systems for New Applications.

#SECONDO is free software; you can redistribute it and/or modify
#it under the terms of the GNU General Public License as published by
#the Free Software Foundation; either version 2 of the License, or
#(at your option) any later version.

#SECONDO is distributed in the hope that it will be useful,
#but WITHOUT ANY WARRANTY; without even the implied warranty of
#MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#GNU General Public License for more details.

#You should have received a copy of the GNU General Public License
#along with SECONDO; if not, write to the Free Software
#Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA

operator oleftrange alias OLEFTRANGE pattern _ op [list]
operator orightrange alias ORIGHTRANGE pattern _ op [list]
operator orange alias ORANGE pattern _ op [list; list]
operator oshortestpathd alias OSHORTESTPATHD pattern _ op [ _, _,_; fun] 
         implicit parameter tuple type TUPLE
operator oshortestpatha alias OSHORTESTPATHA pattern _ op [ _, _,_; fun, fun]
         implicit parameter tuple type TUPLE

operator getotuples alias GETOTUPLES pattern _ _ op

operator getotuples2 alias GETOTUPLES2 pattern _ _ _ op



# file Record/RecordAlgebra.spec 

#This file is part of SECONDO.

#Copyright (C) 2004, University in Hagen, Department of Computer Science, 
#Database Systems for New Applications.

#SECONDO is free software; you can redistribute it and/or modify
#it under the terms of the GNU General Public License as published by
#the Free Software Foundation; either version 2 of the License, or
#(at your option) any later version.

#SECONDO is distributed in the hope that it will be useful,
#but WITHOUT ANY WARRANTY; without even the implied warranty of
#MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#GNU General Public License for more details.

#You should have received a copy of the GNU General Public License
#along with SECONDO; if not, write to the Free Software
#Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA

operator createRecord alias CREATERECORD pattern op (_)
operator transformT2Rstream alias TRANSFORMT2RSTREAM pattern _ op
operator transformR2Tstream alias TRANSFORMR2TSTREAM pattern _ op
operator attr alias ATTR pattern op (_, _)


# file Picture/PictureAlgebra.spec 

operator getWidth alias GETWIDTH pattern _ op
operator getHeight alias GETHEIGHT pattern _ op
operator isgrayscale alias ISGRAYSCALE pattern _ op
operator getFilename alias GETFILENAME pattern _ op
operator getCategory alias getCATEGORY pattern _ op
operator getPictureDate alias GETPICTUREDATE pattern _ op
operator isportrait alias ISPORTRAIT pattern _ op
operator colordist alias COLORDIST pattern _ op [ _ ]
operator equals alias EQUALS pattern _  _ op [ _, _ ]
#operator contains alias CONTAINS pattern _ infixop _
operator simpleequals alias SIMPLEEQUALS pattern _ infixop _
operator like alias LIKE pattern _ op [ _, _, _, _ ]
operator cut alias CUT pattern _ op [ _, _, _, _ ]
operator scale alias SCALE pattern _ op [ _, _ ]
operator flipleft alias FLIPLEFT pattern _ op [ _ ]
operator mirror alias MIRROR pattern _ op [ _ ]
operator display alias DISPLAY pattern _ op
operator export alias EXPORT pattern _ op [ _ ]

operator distance alias DISTANCE pattern op(_,_)
operator getHistHsv8 alias GETHISTHSV8 pattern op(_)
operator getHistHsv16 alias GETHISTHSV16 pattern op(_)
operator getHistHsv32 alias GETHISTHSV32 pattern op(_)
operator getHistHsv64 alias GETHISTHSV64 pattern op(_)
operator getHistHsv128 alias GETHISTHSV128 pattern op(_)
operator getHistHsv256 alias GETHISTHSV256 pattern op(_)
operator getHistLab256 alias GETHISTLAB256 pattern op(_)


# file Standard-C++/StandardAlgebra.spec 

#This file is part of SECONDO.

#Copyright (C) 2004, University in Hagen, Department of Computer Science,
#Database Systems for New Applications.

#SECONDO is free software; you can redistribute it and/or modify
#it under the terms of the GNU General Public License as published by
#the Free Software Foundation; either version 2 of the License, or
#(at your option) any later version.

#SECONDO is distributed in the hope that it will be useful,
#but WITHOUT ANY WARRANTY; without even the implied warranty of
#MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#GNU General Public License for more details.

#You should have received a copy of the GNU General Public License
#along with SECONDO; if not, write to the Free Software
#Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA

operator + alias PLUS pattern _ infixop _
operator - alias MINUS pattern _ infixop _
operator * alias TIMES pattern _ infixop _
operator / alias DIVIDEDBY pattern _ infixop _

operator div alias DIV pattern _ infixop _
operator mod alias MOD pattern _ infixop _
operator randint alias RANDINT pattern op ( _ )
operator randseed alias RANDSEED pattern op ( _ )
operator log alias LOG pattern op ( _ )

operator > alias GT pattern _ infixop _
operator < alias LT pattern _ infixop _
operator <= alias LE pattern _ infixop _
operator >= alias GE pattern _ infixop _
operator # alias NE pattern _ infixop _

operator = alias EQ pattern _ infixop _

operator not alias NOT pattern op ( _ )
operator sqrt alias SQRT pattern op ( _ )
operator and alias AND pattern  _ infixop _
operator sand alias SAND pattern  _ infixop _
operator or alias OR pattern  _ infixop _
operator sor alias SOR pattern  _ infixop _

operator contains alias CONTAINS pattern _ infixop _
operator substr alias SUBSTR pattern op ( _, _ , _ )

operator isempty alias ISEMPTY pattern op ( _ )

operator intersection alias INTERSECTION pattern op (_, _)
operator minus alias SET_MINUS pattern _ infixop _

operator setoption alias SETOPTION pattern op (_, _)

operator relcount alias RELCOUNT pattern _ op
operator relcount2 alias RELCOUNT2 pattern _ op

operator keywords alias KEYWORD pattern _ op
operator elapsedtime alias ELAPSEDTIME pattern _ op
operator between alias BETWEEN pattern _ op [ _, _]

operator ldistance alias LDISTANCE pattern op (_ , _)

operator hashvalue alias HASHVALUE pattern op ( _ , _)

operator round alias ROUND pattern op( _ , _ )
operator int2real alias INT2REAL pattern op( _ , _ )
operator real2int alias REAL2INT pattern op( _ , _ )
operator int2bool alias INT2BOOL pattern op( _ , _ )
operator bool2int alias BOOL2INT pattern op( _ , _ )
operator floor alias FLOOR pattern op( _ , _ )
operator ceil alias CEIL pattern op( _ , _ )
operator num2string alias NUM2STRING pattern op( _ )
operator char alias CHAR pattern op ( _ )
operator ifthenelse alias IFTHENELSE pattern op (_, _, _)

operator abs alias ABS pattern op ( _ )
operator ++ alias PLUSPLUS pattern _ op
operator isdefined alias ISDEFINED pattern op ( _ )
operator assert alias ASSERT pattern op ( _ )
operator compare alias COMPARE pattern op ( _, _ )

operator getMinVal alias GETMINVAL pattern op ( _ )
operator getMaxVal alias GETMAXVAL pattern op ( _ )

operator sin alias SIN pattern op ( _ )
operator cos alias COS pattern op ( _ )
operator tan alias TAN pattern op ( _ )
operator arcsin alias ARCSIN pattern op ( _ )
operator arccos alias ARCCOS pattern op ( _ )
operator arctan alias ARCTAN pattern op ( _ )
operator arctan2 alias ARCTAN2 pattern op ( _, _ )
operator const_pi alias CONST_PI pattern op ( )
operator const_e alias CONST_E pattern op ( )
operator rad2deg alias RAD2DEG pattern op ( _ )
operator deg2rad alias DEG2RAD pattern op ( _ )
operator logB alias LOGB pattern op ( _ , _ )
operator pow alias POW pattern op ( _ , _ )
operator dms2deg alias DMS2DEG pattern op ( _ , _ , _ , _ )

operator ifthenelse2 alias IFTHENELSE2 pattern op( _, _, _ )
operator length alias LENGTH pattern op( _ )
operator randmax alias RANDMAX pattern op( _ )
operator seqinit alias SEQINIT pattern op( _ )
operator seqnext alias SEQNEXT pattern op( _ )

operator binand alias BINAND pattern _ infixop _
operator binands alias BINANDS pattern _ op

operator switch alias SWITCH pattern _ op[ _; _ ; _]

operator true alias TRUE pattern  op()
operator false alias FALSE  pattern op()




# file PlaneSweep/PlaneSweepAlgebra.spec 

operator realm alias REALM pattern op (_ ,_)
operator intersection_new alias INTERSECTION_NEW pattern op (_,_)
operator union_new alias UNION_NEW pattern op (_,_)
operator minus_new alias MINUS_NEW pattern op (_,_)
operator p_intersects alias P_INTERSECTS pattern  _ infixop _
operator intersects_new alias INTERSECTS_NEW pattern _ infixop _
     

# file Cassandra/CassandraAlgebra.spec 

#This file is part of SECONDO.

#Copyright (C) 2004, University in Hagen, Department of Computer Science, 
#Database Systems for New Applications.

#SECONDO is free software; you can redistribute it and/or modify
#it under the terms of the GNU General Public License as published by
#the Free Software Foundation; either version 2 of the License, or
#(at your option) any later version.

#SECONDO is distributed in the hope that it will be useful,
#but WITHOUT ANY WARRANTY; without even the implied warranty of
#MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#GNU General Public License for more details.

#You should have received a copy of the GNU General Public License
#along with SECONDO; if not, write to the Free Software
#Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA

operator cdelete alias CDELETE pattern op ( _ )
operator clist alias CLIST pattern op ( )
operator cspread alias CSPREAD pattern _ op [ _ , _ , _ , _ ]
operator ccollect alias CCOLLECT pattern op ( _ , _ )
operator ccollectlocal alias CCOLLECTLOCAL pattern op ( _ , _ )
operator ccollectrange alias CCOLLECTRANGE pattern op ( _ , _ , _ , _ )
operator ccollectquery alias CCOLLECTQUERY pattern op ( _ , _ , _ )
operator cquerylist alias CQUERYLIST pattern op ( )
operator cqueryexecute alias CQUERYEXECUTE pattern op ( _ , _ )
operator cquerywait alias CQUERYWAIT pattern op ( _ , _ , _ )
operator cqueryreset alias CQUERYRESET pattern op ( )


# file IMEX/ImExAlgebra.spec 

#This file is part of SECONDO.

#Copyright (C) 2008, University in Hagen,
#Faculty of Mathematics and Computer Science,
#Database Systems for New Applications.

#SECONDO is free software; you can redistribute it and/or modify
#it under the terms of the GNU General Public License as published by
#the Free Software Foundation; either version 2 of the License, or
#(at your option) any later version.

#SECONDO is distributed in the hope that it will be useful,
#but WITHOUT ANY WARRANTY; without even the implied warranty of
#MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#GNU General Public License for more details.

#You should have received a copy of the GNU General Public License
#along with SECONDO; if not, write to the Free Software
#Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA


operator csvexport alias CSVEXPORT pattern _ op [ _ , _ ]
operator shpexport alias SHPEXPORT pattern _ op [ _ ]
operator db3export alias DB3EXPORT pattern _ op [ _ ]
operator shptype alias SHPTYPE pattern op( _ )
operator shpimport alias SHPIMPORT pattern _ op [ _ ]
operator dbtype alias dbTYPE pattern op( _ )
operator dbimport alias DBIMPORT pattern _ op [ _ ]
operator saveObject alias SAVEOBJECT pattern _ op [ _ , _ ]
operator csvimport  alias csvimport pattern _ op [ _ , _ , _ ]
operator isFile  alias ISFILE pattern op( _ )
operator isDirectory alias ISDIRECTORY pattern op( _ )
operator removeFile alias removeFILE pattern op( _ )
operator createDirectory alias CREATEDIRECTORY pattern op( _ )
operator fileSize alias FILESIZE pattern op( _, _ )
operator writeFile alias WRITEFILE pattern op( _, _, _ )
operator readFile alias READFILE pattern op( _ )
operator moveFile alias MOVEFILE pattern op( _, _ )
operator copyFile alias COPYFILE pattern op( _, _ )
operator getDirectory alias GETDIRECTORY pattern op( _, _ )
operator toCSVtext alias TOCSVTEXT pattern op( _ )
operator fromCSVtext alias FROMCSVTEXT pattern op( _, _ )
operator getSecondoVersion alias GETSECONDOVERSION pattern op ( _ )
operator getBDBVersion alias GETBDBVERSION pattern op ( _ )
operator getPID alias GETPID pattern op ( _ )
operator getSecondoPlatform alias GETSECONDOPLATFORM pattern op ( _ )
operator getPageSize alias GETPAGESIZE pattern op ( _ )
operator sqlExport alias SQLEXPORT pattern _ op [ _,_,_] 
operator rtf2txtfile alias rtf2txtfile pattern op( _ )
operator basename alias BASENAME pattern op(_)
operator removeDirectory alias REMOVEDIRECTORY pattern op(_,_)
operator shpBox alias SHPBOX pattern op(_)
operator shpCollect alias SHPCOLLECT pattern _ op[_,_]
operator db3Collect alias DB3COLLECT pattern _ op[_]
operator createShx alias CREATESHX pattern op(_,_)

operator noShpRecords alias NOSHPRECORDS pattern op(_)
operator noDB3Records alias NODB3RECORDS pattern op(_,_)

operator extractShpPart alias extractSHPPart pattern op(_,_,_,_,_,_)
operator extractDB3Part alias extractSHPPart pattern op(_,_,_,_)

operator splitShp alias SPLITSHP pattern op(_,_,_)
operator splitDB3 alias SPLITDB3 pattern op(_,_)

# file PlugJoin/PlugJoinAlgebra.spec 

operator spatialjoin0 alias SPATIALJOIN0 pattern _ _ op [ _, _ ]



# file BinaryFile/BinaryFileAlgebra.spec 

#This file is part of SECONDO.

#Copyright (C) 2004, University in Hagen, Department of Computer Science, 
#Database Systems for New Applications.

#SECONDO is free software; you can redistribute it and/or modify
#it under the terms of the GNU General Public License as published by
#the Free Software Foundation; either version 2 of the License, or
#(at your option) any later version.

#SECONDO is distributed in the hope that it will be useful,
#but WITHOUT ANY WARRANTY; without even the implied warranty of
#MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#GNU General Public License for more details.

#You should have received a copy of the GNU General Public License
#along with SECONDO; if not, write to the Free Software
#Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA

operator saveto alias SAVETO pattern _ infixop _

# file NestedRelation/NestedRelationAlgebra.spec 

#This file is part of SECONDO.

#Copyright (C) 2004, University in Hagen, Department of Computer Science, 
#Database Systems for New Applications.

#SECONDO is free software; you can redistribute it and/or modify
#it under the terms of the GNU General Public License as published by
#the Free Software Foundation; either version 2 of the License, or
#(at your option) any later version.

#SECONDO is distributed in the hope that it will be useful,
#but WITHOUT ANY WARRANTY; without even the implied warranty of
#MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#GNU General Public License for more details.

#You should have received a copy of the GNU General Public License
#along with SECONDO; if not, write to the Free Software
#Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA

operator feed alias FEED pattern _ op
operator consume alias CONSUME pattern _ op
operator rename alias RENAME pattern _ op [ _ ]
operator extract alias EXTRACT pattern _ op [ _ ]
operator afeed alias AFEED pattern _ op  
operator aconsume alias ACONSUME pattern _ op 
operator nest alias NEST pattern _ op [ list; _ ] 
operator unnest alias UNNEST pattern _ op [ _ ]

operator gettuples alias GETTUPLES pattern _ _ op

  

# file Distributed2/Distributed2Algebra.spec 



operator connect alias CONNECT pattern op(_,_,_)
operator checkConnections alias CHECKCONNECTIONS pattern op()
operator rcmd alias RCMD pattern op(_,_)
operator disconnect alias DISCONNECT pattern op(_,_)
operator rquery alias rquery pattern op(_,_)
operator prcmd alias PRCMD pattern _ op [_,_]
operator sendFile alias SENDFILE pattern op(_,_,_)
operator requestFile alias REQUESTFILE pattern op(_,_,_)
operator psendFile alias PSENDFILE  pattern _ op [_,_,_]
operator prequestFile alias PREQUESTFILE  pattern _ op [_,_,_]
operator getRequestFolder alias GETREQUESTFOLDER pattern op(_)
operator getSendFolder alias GETSENDFOLDER pattern op(_)
operator pconnect alias PCONNECT pattern _ op[_,_,_]
operator prquery alias PRQUERY  pattern _ op[_,_]
operator prquery2 alias PRQUERY2  pattern _ op[_,_,_,_,_]

operator put alias PUT pattern op (_,_,_)
operator get alias GET pattern op (_,_)
operator size alias SIZE pattern op (_)
operator getWorkers alias getWorkers pattern op (_)

operator fconsume5 alias FCONSUME5 pattern _ op [_]
operator ffeed5 alias FFEED5 pattern _ op 

operator createDArray alias CREATEDARRAY pattern _ op[_,_,_]

operator pput alias PPUT pattern _ op [_,_]
operator ddistribute2 alias DDISTRIBUTE2 pattern _ op [_,_,_,_]
operator ddistribute3 alias DDISTRIBUTE3 pattern _ op [_,_,_,_]
operator ddistribute4 alias DDISTRIBUTE4 pattern _ op [_,fun,_,_] implicit parameter elem type STREAMELEM

operator fdistribute5 alias FDISTRIBUTE5 pattern _ op [_,_,_]
operator fdistribute6 alias FDISTRIBUTE6 pattern _ op [_,_]
operator fdistribute7 alias FDISTRIBUTE7 pattern _ op[_,fun,_,_] implicit parameter elem type STREAMELEM

operator closeWorkers alias closeWorkers pattern op(_)
operator showWorkers alias showWorkers pattern op(_)

operator dloop alias DLOOP pattern _ op[_,fun] implicit parameter darrayelem type ARRAYFUNARG1 
operator dloop2 alias DLOOP2 pattern _ _ op[_,fun] implicit parameters elem1, elem2 types DARRAYELEM, DARRAYELEM2


operator dmap alias DMAP pattern _ op[_,fun] implicit parameter dmapelem type ARRAYFUNARG1
operator dmap2 alias DMAP2 pattern _ _ op[_,fun,_] implicit parameters elem1, elem2 types ARRAYFUNARG1, ARRAYFUNARG2


operator dmap2n alias DMAP2n pattern _ _ op[_,fun,_] implicit parameters elem1, elem2 types ARRAYFUNARG1, ARRAYFUNARG2


operator dmap3 alias DMAP3 pattern _ _ _ op[_,fun,_] implicit parameters elem1, elem2, elem3  types ARRAYFUNARG1, ARRAYFUNARG2, ARRAYFUNARG3
operator dmap4 alias DMAP4 pattern _ _ _ _ op[_,fun,_] implicit parameters elem1, elem2, elem3, elem4  types ARRAYFUNARG1, ARRAYFUNARG2, ARRAYFUNARG3, ARRAYFUNARG4
operator dmap5 alias DMAP5 pattern _ _ _ _ _ op[_,fun,_] implicit parameters elem1, elem2, elem3, elem4 , elem5  types ARRAYFUNARG1, ARRAYFUNARG2, ARRAYFUNARG3, ARRAYFUNARG4, ARRAYFUNARG5
operator dmap6 alias DMAP6 pattern _ _ _ _ _ _ op[_,fun,_] implicit parameters elem1, elem2, elem3, elem4, elem5, elem6  types ARRAYFUNARG1, ARRAYFUNARG2, ARRAYFUNARG3, ARRAYFUNARG4, ARRAYFUNARG5, ARRAYFUNARG6
operator dmap7 alias DMAP7 pattern _ _ _ _ _ _ _ op[_,fun,_] implicit parameters elem1, elem2, elem3, elem4, elem5, elem6, elem7  types ARRAYFUNARG1, ARRAYFUNARG2, ARRAYFUNARG3, ARRAYFUNARG4, ARRAYFUNARG5, ARRAYFUNARG6, ARRAYFUNARG7
operator dmap8 alias DMAP8 pattern _ _ _ _ _ _ _ _ op[_,fun,_] implicit parameters elem1, elem2, elem3, elem4, elem5, elem6, elem7, elem8  types ARRAYFUNARG1, ARRAYFUNARG2, ARRAYFUNARG3, ARRAYFUNARG4, ARRAYFUNARG5, ARRAYFUNARG6, ARRAYFUNARG7, ARRAYFUNARG8

operator dsummarize alias DSUMMARIZE pattern _ op

operator getValue alias GETVALUE pattern _op 

operator deleteRemoteObjects alias DELETEREMOTEOBJECTS pattern op(_,_)

operator clone alias CLONE pattern _ op[_]

operator share alias SHARE pattern op(_,_,_)

operator cleanUp alias CLEANUP pattern op(_,_)

operator dfdistribute2 alias DFDISTRIBUTE2 pattern _ op [_,_,_,_,_]
operator dfdistribute3 alias DFDISTRIBUTE3 pattern _ op [_,_,_,_]
operator dfdistribute4 alias DFDISTRIBUTE4 pattern _ op [_,fun,_,_] implicit parameter elem type STREAMELEM

operator gettuples alias GETTUPLES pattern _ _ op

operator transferFileServer alias TRANSFERFILESERVER pattern op(_)

operator receiveFileClient alias RECEIVEFILECLIENT pattern op(_,_,_,_)

operator transferFile alias TRANSFERFILE pattern op(_,_,_,_,_)

operator traceCommands alias TRACECOMMANDS pattern op(_)


operator staticFileTransferator alias STATICFILETRANSFERATOR pattern op(_,_)
operator killStaticFileTransferator alias KILLSTATICFILETRANSFERATOR pattern op(_)
operator putFileTCP alias PUTFILETCP pattern op(_,_,_,_,_)
operator getFileTCP alias GETFILETCP pattern op(_,_,_,_,_)

operator fsfeed5 alias FSFEED5 pattern _ op[_]


operator partition alias PARTITION pattern _ op[_,fun,_] implicit parameter elem type SUBSUBTYPE1 
operator partitionF alias PARTITIONF pattern _ op[_,fun,fun,_] implicit parameters elem1,elem2 types FFR, FFR 

operator collect2 alias COLLECT2 pattern _ op[_,_]

operator areduce alias AREDUCE pattern _ op [_ , fun, _] implicit parameter elem type AREDUCEARG1 
operator areduce2 alias AREDUCE2 pattern _ _ op [_ , fun, _] implicit parameters elem1, elem2 types AREDUCEARG1 , AREDUCEARG2


operator saveAttr alias SAVEATTR pattern _ op[_] 
operator loadAttr alias LOADATTR pattern  op(_) 

operator createFrel alias CREATEFREL pattern op(_,_,_)

operator createFSrel alias CREATEFSREL pattern _ op[_]

operator saveObjectToFile alias SAVEOBJECTTOFILE pattern _ op[_]

operator getObjectFromFile alias GETOBJECTFROMFILE pattern _ op

operator dproduct alias DPRODUCT  pattern _ _ op[_,fun,_] implicit parameters elem1, elem2 types DPRODUCTARG1, DPRODUCTARG2 

operator ddistribute8  alias DDISTRIBUTE pattern _ op[_,fun, fun,_,_, _] implicit parameter elem type STREAMELEM
operator dfdistribute8  alias DFDISTRIBUTE pattern _ op[_,fun, fun,_,_, _] implicit parameter elem type STREAMELEM

operator partition8Local alias PARTITION8LOCAL pattern _ op[ fun,fun, _,_,_,_,_] implicit parameter elem type STREAMELEM

operator partitionF8 alias PARTITIONF8 pattern  _ op [ _, fun, fun, fun, _,_] implicit parameter elem type P8TM 

operator da2enableLog alias DA2ENABLELOG pattern op(_)
operator da2clearLog  alias DA2CLEARLOG pattern op()
operator da2Log alias DA2LOG pattern op()

operator deleteRemoteDatabases alias DELETEREMOTEDATABASES pattern op(_,_)

operator setAccount alias SETACCOUNT pattern op(_,_)


# file FileIndexAlgebra/FileIndexAlgebra.spec 

operator createfbtree alias CREATEFBTREE pattern _op[_,_,_]
operator bulkloadfbtree alias BULKLOADFBTREE pattern _op[_,_,_]
operator removefbtree alias REMOVEFBTREE pattern _op[_,_,_]
operator rebuildfbtree alias REBUILDFBTREE pattern op(_,_)
operator insertfbtree alias INSERTFBTREE pattern _op[_,_,_]
operator deletefbtree alias DELETEFBTREE pattern _op[_,_,_]
operator rebuildfbtree alias REBUILDFBTREE pattern op(_,_)
operator frange alias FRANGE pattern _ op[_,_]
operator fleftrange alias FLEFTRANGE pattern _ op[_]
operator frightrange alias FRIGHTRANGE pattern _ op[_]
operator fexactmatch alias FEXACTMATCH pattern _ op[_]
operator createfrtree alias CREATEFRTREE pattern _op[_,_,_,_]
operator insertfrtree alias INSERTFRTREE pattern _op[_,_,_]
operator deletefrtree alias DELETEFRTREE pattern _op[_,_,_]
operator fwindowintersects alias FWINDOWINTERSECTS pattern op(_,_)
operator rebuildfrtree alias REBUILDFRTREE pattern op(_,_)
operator bulkloadfrtree alias BULKLOADFRTREE pattern _ op[_,_,_,_,_]
# file Network/NetworkAlgebra.spec 

operator = alias EQUAL pattern _ infixop _
operator at alias AT pattern _ infixop _
operator atinstant alias ATINSTANT pattern _ infixop _
operator atperiods alias ATPERIODS pattern _ infixop _
operator bbox alias BBOX pattern op ( _ , _ )
operator circlen alias CIRCLEN pattern op( _ , _ )
operator distance alias DISTANCE pattern op ( _ , _ )
operator getAdjacentSections alias GETADJACENTSECTIONS pattern op ( _ , _ , _ )
operator getBGP alias GETBGP pattern op ( _ )
operator getReverseAdjacentSections alias GETREVERSEADJACENTSECTIONS pattern op ( _ , _ , _ )
operator gline2line alias GLINE2LINE pattern op ( _ )
operator gpoint2point alias GPOINT2POINT pattern op ( _ )
operator gpoint2rect alias GPOINT2RECT pattern op ( _ )
operator in_circlen alias IN_CIRCLEN pattern op( _ , _ )
operator initial alias INITIAL pattern op ( _ )
operator inside alias INSIDE pattern _ infixop _
operator inst alias INST pattern op ( _ )
operator intersects alias INTERSECTS pattern _ infixop _
operator isempty alias ISEMPTY pattern op ( _ )
operator junctions alias JUNCTIONS pattern op ( _ )
operator length alias LENGTH pattern op ( _ )
operator line2gline alias LINE2GLINE pattern op ( _ , _ )
operator netbbox alias NETBBOX pattern op( _ )
operator netdistance alias NETDISTANCE pattern op ( _ , _ )
operator netdistancenew alias NETDISTANCENEW pattern op ( _ , _ )
operator no_components alias NO_COMPONENTS pattern op ( _ )
operator out_circlen alias OUT_CIRCLEN pattern op( _ , _ )
operator point2gpoint alias POINT2GPOINT pattern op ( _ , _ )
operator polygpoints alias POLYGPOINTS pattern op ( _ , _ )
operator routeintervals alias ROUTEINTERVALS pattern op ( _ )
operator routes alias ROUTES pattern op ( _ )
operator sections alias SECTIONS pattern op ( _ )
operator shortest_path alias SHORTEST_PATH pattern op ( _ , _ )
operator shortest_pathastar alias SHORTEST_PATHASTAR pattern op ( _ , _ )
operator shortestpathtree alias SHORTESTPATHTREE pattern op ( _ , _ )
operator spsearchvisited alias SPSEARCHVISITED pattern op ( _ , _ , _ )
operator thenetwork alias THENETWORK pattern op ( _, _ )
operator union alias UNION pattern _ infixop _

# file Cluster/ClusterAlgebra.spec 


# file Standard-C++/StandardAlgebra.spec 

#This file is part of SECONDO.

#Copyright (C) 2004, University in Hagen, Department of Computer Science, 
#Database Systems for New Applications.

#SECONDO is free software; you can redistribute it and/or modify
#it under the terms of the GNU General Public License as published by
#the Free Software Foundation; either version 2 of the License, or
#(at your option) any later version.

#SECONDO is distributed in the hope that it will be useful,
#but WITHOUT ANY WARRANTY; without even the implied warranty of
#MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#GNU General Public License for more details.

#You should have received a copy of the GNU General Public License
#along with SECONDO; if not, write to the Free Software
#Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA

operator cluster_a alias CLUSTERA pattern op ( _ )
operator cluster_b alias CLUSTERB pattern _ op [ _, _]
operator cluster_c alias CLUSTERC pattern _ op [ _, _]
operator cluster_g alias CLUSTERC pattern _ op [ _, _]
operator cluster_d alias CLUSTERD pattern _ op [  _ ]
operator cluster_e alias CLUSTERE pattern _ op [  _ ]
operator cluster_f alias CLUSTERF pattern _ op [  _ ]

# file XTree/XTreeAlgebra.spec 

#This file is part of SECONDO.

#Copyright (C) 2004, University in Hagen, Department of Computer Science,
#Database Systems for New Applications.

#SECONDO is free software; you can redistribute it and/or modify
#it under the terms of the GNU General Public License as published by
#the Free Software Foundation; either version 2 of the License, or
#(at your option) any later version.

#SECONDO is distributed in the hope that it will be useful,
#but WITHOUT ANY WARRANTY; without even the implied warranty of
#MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#GNU General Public License for more details.

#You should have received a copy of the GNU General Public License
#along with SECONDO; if not, write to the Free Software
#Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA

operator creatextree alias CREATEXTREE pattern _ op [_]
operator creatextree2 alias CREATEXTREE2 pattern _ op [_, _]
operator creatextree3 alias CREATEXTREE3 pattern _ op [_, _, _]

operator rangesearch alias RANGESEARCH pattern _ _ op [_, _]
operator nnsearch alias NNSEARCH pattern _ _ op [_, _]
operator windowintersects alias WINDOWINTERSECTS pattern _ _ op [_]
operator nnscan alias NNSCAN pattern _ _ op [_]

# file GPattern/GPatternAlgebra.spec 

#This file is part of SECONDO.

#Copyright (C) 2004, University in Hagen, Department of Computer Science, 
#Database Systems for New Applications.

#SECONDO is free software; you can redistribute it and/or modify
#it under the terms of the GNU General Public License as published by
#the Free Software Foundation; either version 2 of the License, or
#(at your option) any later version.

#SECONDO is distributed in the hope that it will be useful,
#but WITHOUT ANY WARRANTY; without even the implied warranty of
#MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#GNU General Public License for more details.

#You should have received a copy of the GNU General Public License
#along with SECONDO; if not, write to the Free Software
#Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA


operator reportpattern alias REPORTPATTERN pattern _ op[funlist;list] 
operator gpattern alias GPATTERN pattern _ op[fun,fun,_,_,_] implicit parameter tuple type TUPLE
operator crosspattern alias CROSSPATTERN pattern _ op[fun,fun,fun,_,_,_] implicit parameter tuple type TUPLE
operator tconstraint alias TCONSTRAINT pattern op(_,_,_)
operator emptymset alias EMPTYMSET pattern op()
operator emptymset alias EMPTYMSET pattern op()
operator mbool2mset alias MBOOL2MSET pattern _op[_]
operator union alias UNION pattern _ infixop _
operator union2 alias UNION2 pattern _ infixop _
operator cardinality alias CARDINALITY pattern op(_)
operator intstream2set alias INTSTREAM2SET pattern _op[_]
operator boundingregion alias BOUNDINGREGION pattern op(_,_,_)
operator members alias MEMBERS pattern op(_,_,_)
operator convexhull2 alias CONVEXHULL2 pattern op(_,_)
operator collectintset alias COLLETINTSET pattern _ op
operator generateboids alias GENERATEBOIDS pattern op(_,_,_,_)
operator issubset alias ISSUBSET pattern _ infixop _
operator smooth alias SMOOTH pattern op(_, _)
# file Precise2D/Precise2DAlgebra.spec 

#This file is part of SECONDO.

#Copyright (C) 2004, University in Hagen, Department of Computer Science, 
#Database Systems for New Applications.

#SECONDO is free software; you can redistribute it and/or modify
#it under the terms of the GNU General Public License as published by
#the Free Software Foundation; either version 2 of the License, or
#(at your option) any later version.

#SECONDO is distributed in the hope that it will be useful,
#but WITHOUT ANY WARRANTY; without even the implied warranty of
#MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#GNU General Public License for more details.

#You should have received a copy of the GNU General Public License
#along with SECONDO; if not, write to the Free Software
#Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA

operator crossings alias CROSSINGS pattern op ( _, _ )

operator intersection alias INTERSECTION pattern op ( _, _ )

operator intersects alias INTERSECTS pattern _ infixop _

operator intersects2 alias INTERSECTS pattern _ infixop _

operator overlaps2 alias OVERLAPS pattern _ infixop _

operator lineToLine2 alias LINETOLINE2 pattern op( _ )

operator minus alias MINUS pattern _ infixop _

operator union alias UNION pattern _ infixop _

operator inside2 alias INSIDE2 pattern _ infixop _

operator crossingsWithScaling alias CROSSINGSWITHSCALING pattern op ( _, _ )

operator intersectionWithScaling alias INTERSECTIONWITHSCALING pattern op ( _, _ )

operator intersectsWithScaling alias INTERSECTSWITHSCALING pattern _ infixop _

operator overlapsWithScaling alias OVERLAPSWITHSCALING pattern _ infixop _

operator minusWithScaling alias MINUSWITHSCALING pattern _ infixop _

operator unionWithScaling alias UNIONWITHSCALING pattern _ infixop _

operator insideWithScaling alias INSIDEWITHSCALING pattern _ infixop _

operator coarse alias COARSE pattern op( _ )

operator coarse2 alias COARSE2 pattern op( _ )

operator testIntersection alias TESTINTERSECTION pattern op ( _, _ )

operator testIntersects alias TESTINTERSECTS pattern _ infixop _

operator testMinus alias TESTMINUS pattern _ infixop _

operator testUnion alias TESTUNION pattern _ infixop _

operator testIntersectionWithScaling alias TESTINTERSECTIONWITHSCALING pattern op ( _, _ )

operator testIntersectsWithScaling alias TESTINTERSECTSWITHSCALING pattern _ infixop _

operator testMinusWithScaling alias TESTMINUSWITHSCALING pattern _ infixop _

operator testUnionWithScaling alias TESTUNIONWITHSCALING pattern _ infixop _

operator bbox alias BBOX pattern op(_,_)

# file JNet/JNetAlgebra.spec 

operator = alias EQ pattern _ infixop _
operator >= alias GE pattern _ infixop _
operator > alias GT pattern _ infixop _
operator <= alias LE pattern _ infixop _
operator < alias LT pattern _ infixop _
operator - alias MINUS pattern _ infixop _
operator # alias NE pattern _ infixop _
operator altrlocs alias ALTRLOCS pattern op ( _ )
operator at alias AT pattern _ infixop _
operator atinstant alias ATINSTANT pattern _ infixop _
operator atperiods alias ATPERIODS pattern _ infixop _
operator bbox alias BBOX pattern op ( _ , _ )
operator circle alias CIRCLE pattern op ( _ , _ , _ )
operator createijpoint alias CREATEIJPOINT pattern op ( _ , _ )
operator createjline alias CREATEJLINE pattern op ( _ , _ )
operator createjnet alias CREATEJNET pattern op ( _ , _ , _ , _ , _ )
operator createjpoint alias CREATEJPOINT pattern op ( _ , _ )
operator createjpoints alias CREATEJPOINTS pattern op ( _ , _ )
operator createlist alias CREATELIST pattern _ op
operator createmjpoint alias CREATEMJPOINT pattern op ( _ )
operator createndg alias CREATENDG pattern op ( _ , _ , _ , _ , _ )
operator createrint alias CREATERINT pattern op ( _ , _ , _ , _ )
operator createrloc alias CREATERLOC pattern op ( _ , _ , _ )
operator createstream alias CREATESTREAM pattern op ( _ )
operator createujpoint alias CREATEUJPOINT pattern op ( _ , _ , _ , _ , _ , _ )
operator fromnetwork alias FROMNETWORK pattern op ( _ )
operator getAdjacentSections alias GETADJACENTSECTIONS pattern op ( _ , _ , _ )
operator getBGP alias GETBGP pattern op ( _ )
operator getReverseAdjacentSections alias GETREVERSEADJACENTSECTIONS pattern op ( _ , _ , _ )
operator distances alias DISTANCES pattern op ( _ )
operator incircle alias INCIRCLE pattern op ( _ , _ )
operator initial alias INITIAL pattern op ( _ )
operator inside alias INSIDE pattern _ infixop _
operator inst alias INST pattern op ( _ )
operator intersects alias INTERSECTS pattern _ infixop _
operator isempty alias ISEMPTY pattern op ( _ )
operator junctions alias JUNCTIONS pattern op ( _ )
operator length alias LENGTH pattern op ( _ )
operator netbox alias NETBOX pattern op ( _ )
operator netdistance alias NETDISTANCE pattern op ( _ , _ )
operator outcircle alias OUTCIRCLE pattern op ( _ , _ )
operator passes alias PASSES pattern _ infixop _
operator present alias PRESENT pattern _ infixop _
operator restrict alias RESTRICT pattern op( _ , _ )
operator reverseshortestpathtree alias REVERSESHORTESTPATHTREE pattern op ( _ )
operator routes alias ROUTES pattern op ( _ )
operator sections alias SECTIONS pattern op ( _ )
operator shortest_path alias SHORTEST_PATH pattern op( _ , _ )
operator shortestpathtree alias SHORTESPATHTREE pattern op ( _ , _ )
operator tempnetbox alias TEMPNETBOX pattern op ( _ )
operator tojline alias TOJLINE pattern op ( _ )
operator tonetwork alias TONETWORK pattern op ( _ , _ )
operator trajectory alias TRAJECTORY pattern op ( _ )
operator union alias UNION pattern _ infixop _
operator units alias UNITS pattern op ( _ )
operator val alias VAL pattern op ( _ )

# file TrajectorySimilarity/TrajectorySimilarity.spec 

#This file is part of SECONDO.

#Copyright (C) 2015, University in Hagen, Department of Computer Science,
#Database Systems for New Applications.

#SECONDO is free software; you can redistribute it and/or modify
#it under the terms of the GNU General Public License as published by
#the Free Software Foundation; either version 2 of the License, or
#(at your option) any later version.

#SECONDO is distributed in the hope that it will be useful,
#but WITHOUT ANY WARRANTY; without even the implied warranty of
#MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#GNU General Public License for more details.

#You should have received a copy of the GNU General Public License
#along with SECONDO; if not, write to the Free Software
#Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA

operator isempty alias ISEMPTY pattern op(_)
operator no_components alias NO_COMPONENTS pattern op(_)
operator to_dline alias TO_DLINE pattern op(_)
operator to_pointseq alias TO_POINTSEQ pattern op(_, _)
operator to_tpointseq alias TO_TPOINTSEQ pattern op(_, _)
operator sample_to_pointseq alias SAMPLE pattern op(_, _)
operator sample_to_tpointseq alias SAMPLE pattern op(_, _)

operator dist_origin alias DIST_ORIGIN pattern op(_, _)
operator dist_destination alias DIST_DESTINATION pattern op(_, _)
operator dist_origin_and_destination alias DIST_DESTINATION pattern op(_, _)

operator dist_euclidean alias DIST_EUCLIDEAN pattern op(_, _)

operator lcss alias LCSS pattern op(_, _, _)
operator rel_lcss alias REL_LCSS pattern op(_, _, _)
operator dist_lcss alias DIST_LCSS pattern op(_, _, _)

operator dist_lip alias DIST_LIP pattern op(_, _)
operator dist_stlip alias DIST_STLIP pattern op(_, _, _, _)
operator dist_spstlip2 alias DIST_SPSTLIP2 pattern op(_, _, _, _, _)
operator genlip alias GENLIP pattern op(_, _, _, _)
operator genlip2 alias GENLIP2 pattern op(_, _, _, _)

# file FText/FTextAlgebra.spec 

#This file is part of SECONDO.

#Copyright (C) 2004, University in Hagen, Department of Computer Science,
#Database Systems for New Applications.

#SECONDO is free software; you can redistribute it and/or modify
#it under the terms of the GNU General Public License as published by
#the Free Software Foundation; either version 2 of the License, or
#(at your option) any later version.

#SECONDO is distributed in the hope that it will be useful,
#but WITHOUT ANY WARRANTY; without even the implied warranty of
#MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#GNU General Public License for more details.

#You should have received a copy of the GNU General Public License
#along with SECONDO; if not, write to the Free Software
#Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA

operator length alias LENGTH pattern op(_)
operator sentences alias SENTENCES pattern _ op
operator dice alias DICE pattern op (_, _, _)
operator contains alias CONTAINS pattern _ infixop _
operator keywords alias KEYWORDS pattern _ op
operator sentences alias SENTENCES pattern _ op
operator getcatalog alias GETCATALOG pattern op( _ )
operator subtext alias SUBTEXT pattern op(_, _, _)
operator find alias FIND pattern op(_, _)
operator replace alias REPLACE pattern op(_, _, _)
operator chartext alias CHARTEXT pattern op(_)
operator toupper alias TOUPPER pattern op(_)
operator tolower alias TOLOWER pattern op(_)
operator totext alias TOTEXT pattern op(_)
operator substr alias SUBSTR pattern op(_, _, _)
operator isempty alias ISEMPTY pattern op( _ )
operator trim alias TRIM pattern op( _ )
operator + alias PLUS pattern _ infixop  _
operator = alias EQ pattern _ infixop _
operator # alias NE pattern _ infixop _
operator < alias LT pattern _ infixop _
operator > alias GT pattern _ infixop _
operator <= alias LE pattern _ infixop _
operator >= alias GE pattern _ infixop _
operator tostring alias TOSTRING pattern op(_)
operator sendtextUDP alias SENDTEXTUDP pattern op(_, _, _, _)
operator receivetextUDP alias RECEIVETEXTUDP pattern op(_, _, _)
operator receivetextstreamUDP alias RECEIVETEXTSTREAMUDP pattern op(_, _, _)
operator sendtextstreamTCP alias SENDTEXTSTREAMTCP pattern _ op [ _, _, _, _ ]

operator isDBObject alias ISDBOBJECT pattern op( _ )
operator evaluate alias EVALUATE pattern op( _ )
operator getTypeNL alias GETTYPENL pattern _ op
operator getValueNL alias GETVALUENL pattern _ op
operator letObject alias LETOBJECT pattern op ( _, _, _ )
operator deleteObject alias DELETEOBJECT pattern op ( _ )
operator createObject alias CREATEOBJECT pattern op ( _, _, _)
operator updateObject alias UPDATEOBJECT pattern op ( _, _, _)
operator deriveObject alias DERIVEOBJECT pattern op ( _, _, _)
operator getObjectTypeNL alias GETOBJECTTYPENL pattern op ( _ )
operator getObjectValueNL alias GETOBJECTVALUENL pattern op ( _ )
operator toObject alias TOOBJECT pattern op(_, _)
operator getDatabaseName alias GETDATABASENAME pattern op( _ )
operator matchingOperatorNames alias MATCHINGOPERATORNAMES  pattern op( _,_ )
operator matchingOperators alias MATCHINGOPERATORS  pattern op( _,_ )
operator sys_getMatchingOperators alias SYS_GETMATCHINGOPERATORS pattern op( _,_ )
operator sys_getAlgebraName alias SYS_GETALGEBRANAME pattern op( _ )
operator sys_getAlgebraId alias SYS_GETALGEBRAID pattern op( _ )

operator sys_getOperatorInfo alias SYS_GETOPERATORINFO pattern op( _,_ )
operator sys_getTypeConstructorInfo alias SYS_GETTYPECONSTRUCTORINFO pattern op( _,_ )

operator md5 alias MD5 pattern op(_,_)
operator checkpw alias CHECKPW pattern op(_,_)
operator crypt alias Crypt pattern op(_)
operator blowfish_encode alias BLOWFISH_ENCODE pattern op(_,_)
operator blowfish_decode alias BLOWFISH_DECODE pattern op(_,_)
operator charToText alias CHARTOTEXT pattern op(_)

operator checkOperatorTypeMap alias CHECKOPERATORTYPEMAP pattern op( _, _ )
operator checkOperatorTypeMap2 alias CHECKOPERATORTYPEMAP2 pattern op( _, _ )
operator strequal alias STREQUAL pattern op( _, _, _ )
operator svg2text alias SVG2TEXT pattern op( _ )
operator text2svg alias TEXT2SVG pattern op( _ )
operator tokenize alias TOKENIZE pattern op( _, _ )
operator attr2text alias ATTR22TEXT pattern op(_)
operator trimAll alias trimAll pattern _ op
operator trimAllUndef alias trimAllUndef pattern _ op
operator str2real alias STRTOREAL pattern  op(_)
operator cn2en alias CNTOEN pattern  op(_)
operator str2int alias STRTOINT pattern  op(_)
operator recode alias RECODE pattern _ op [_, _]
operator endsWith alias ENDSWITH pattern _ infixop _
operator startsWith alias STARTSWITH pattern _ infixop _
operator starts alias STARTS pattern _ infixop _

operator markText alias markText pattern _ op[_,_,_,_,_] 
operator bashModifier alias BASHMODIFIER pattern op(_)
operator getBashModifiers alias GETBASHMODIFIERS pattern op()

operator getQueryNL alias GETQUERYNL pattern op()
operator getOpTreeNL alias GETOPTREENL pattern op()
operator getOpName alias GETOPNAME pattern op()

operator regexmatches alias REGEXMATCHES pattern op(_,_)
operator startsReg alias STARTSREG pattern op(_,_)
operator findPattern alias FINDPATTERN pattern op(_,_)
operator createRegEx alias CREATEREGEX pattern op(_)
operator createRegEx2 alias CREATEREGEX2 pattern op(_)

operator tmcheck alias TMCHECK pattern _ op [_]
operator fileExtension alias fileEXTENSION pattern op(_)
operator maskBackslash alias MASKBACKSLASH pattern _ op

operator messageTest alias MESSAGETEST pattern _ op [_]

operator errorMessage alias ERRORMESSAGE pattern op(_)

operator filepath2text alias FILEPATHTOTEXT pattern op(_)
operator text2filepath alias TEXTTOFILEPATH pattern op(_)

operator secondoHome alias SECONDOHOME pattern op()

operator query2list alias QUERY2LIST pattern op (_)

operator substrw alias SUBSTRW pattern _ op[_,_]
operator getConfig alias GETCONFIG pattern op()
operator getPARAM alias GETPARAM pattern op(_,_,_,_)

operator executeScript alias EXECUTESCRIPT pattern op(_,_,_)
operator like2regex alias LIKE2REGEX pattern op(_,_)


# file HubLabeling/HubLabeling.spec 

# simple prefix operator having one argument

operator hlCalcRank alias hlCalcRank pattern op(_,_,_)

operator hlOneHopReverseSearch alias hlOneHopReverseSearch pattern op(_,_,_)

operator hlHHopForwardSearch alias hlHHopForwardSearch pattern op(_,_,_,_,_)

operator hlForwardSearchGetDist alias hlForwardSearchGetDist pattern op(_,_,_)

operator hlRemoveTFromCurrentWitnessList alias hlRemoveTFromCurrentWitnessList pattern op(_,_)

operator hlForwardSearchCheckForWitnessPath alias hlForwardSearchCheckForWitnessPath pattern op(_,_,_,_,_)

operator hlInsertOrUpdateTupleInNotYetVisitedList alias hlInsertOrUpdateTupleInNotYetVisitedList pattern op(_,_,_,_)

operator hlForwardSearchIterativeStepsScanNewVertices alias hlForwardSearchIterativeStepsScanNewVertices pattern op(_,_,_,_,_,_,_)

operator hlForwardSearchProcessIncomingEdgeIterativeSteps alias hlForwardSearchProcessIncomingEdgeIterativeSteps pattern op(_,_,_,_,_,_,_)

operator hlForwardSearchProcessIncomingEdgeInitialSteps alias hlForwardSearchProcessIncomingEdgeInitialSteps pattern op(_,_,_,_,_,_)

operator hlForwardSearchCreateAndAppendShortcuts alias hlForwardSearchCreateAndAppendShortcuts pattern op(_,_,_,_)

operator hlForwardSearchProcessIncomingEdge alias hlForwardSearchProcessIncomingEdge pattern op(_,_,_,_,_,_,_,_)

operator hlAddShortcutsToEdgesRealtions alias hlAddShortcutsToEdgesRealtions pattern op(_,_,_)

operator hlRemoveContractedEdgesFromEdgesRelations alias hlRemoveContractedEdgesFromEdgesRelations pattern op(_,_,_)

operator hlRemoveParallelEdgesFromEdgesRelations alias hlRemoveParallelEdgesFromEdgesRelations pattern op(_,_,_)

operator hlDoContraction alias hlDoContraction pattern op(_,_,_,_,_)

operator hlIterateOverAllNodesByRankAscAndDoContraction alias hlIterateOverAllNodesByRankAscAndDoContraction pattern op(_,_,_,_,_)

operator hlCreateLabelCheckForWitnessScanNewVertices alias hlCreateLabelCheckForWitnessScanNewVertices pattern op(_,_,_,_,_,_)

operator hlCreateLabelCheckForWitness alias hlCreateLabelCheckForWitness pattern op(_,_,_,_,_,_,_)

operator hlCreateLabelScanNewVertices alias hlCreateLabelScanNewVertices pattern op(_,_,_,_,_,_,_)

operator hlGetRankBaId alias hlGetRankBaId pattern op(_,_,_)

operator hlCreateLabelByDijkstraWithStalling alias hlCreateLabelByDijkstraWithStalling pattern op(_,_,_,_,_,_,_)

operator hlFillForwardOrReverseLabel alias hlFillForwardOrReverseLabel pattern op(_)

operator hlGetPathViaPoints alias hlGetPathViaPoints pattern op(_,_,_,_,_,_)

operator hlQuery alias hlQuery pattern op(_,_,_,_,_)

operator hlPruneLabelByBootstrapping alias hlPruneLabelByBootstrapping pattern op(_,_,_,_,_,_)

operator hlReorderLabels alias hlReorderLabels pattern op(_,_,_,_,_,_)

operator hlCreateLabels alias hlCreateLabels pattern op(_,_,_,_,_)

# file SpatialJoin/SpatialJoinAlgebra.spec 

#This file is part of SECONDO.

#Copyright (C) 2004, University in Hagen, Department of Computer Science, 
#Database Systems for New Applications.

#SECONDO is free software; you can redistribute it and/or modify
#it under the terms of the GNU General Public License as published by
#the Free Software Foundation; either version 2 of the License, or
#(at your option) any later version.

#SECONDO is distributed in the hope that it will be useful,
#but WITHOUT ANY WARRANTY; without even the implied warranty of
#MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#GNU General Public License for more details.

#You should have received a copy of the GNU General Public License
#along with SECONDO; if not, write to the Free Software
#Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA

operator spatialjoin alias SPATIALJOIN pattern _ _ op [ _, _ ]
operator parajoin2 alias PARAJOIN2 pattern _ _ op[_,_;fun] implicit parameters stream1, stream2 types ANY, ANY2
# file Hadoop/HadoopAlgebra.spec 

#This file is part of SECONDO.

#Copyright (C) 2004, University in Hagen, Department of Computer Science, 
#Database Systems for New Applications.

#SECONDO is free software; you can redistribute it and/or modify
#it under the terms of the GNU General Public License as published by
#the Free Software Foundation; either version 2 of the License, or
#(at your option) any later version.

#SECONDO is distributed in the hope that it will be useful,
#but WITHOUT ANY WARRANTY; without even the implied warranty of
#MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#GNU General Public License for more details.

#You should have received a copy of the GNU General Public License
#along with SECONDO; if not, write to the Free Software
#Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA

operator spread alias SPREAD pattern _op [list; list; list]
operator spreadFiles alias SPREADFILES pattern op (_,_,_)
operator collect alias COLLECT pattern _op[list]
operator para alias PARA pattern op (_)
operator hadoopMap alias HADOOPMAP pattern _ op [list; fun] implicit parameter lobject1 type TPARA
operator hadoopReduce alias HADOOPREDUCE pattern _ op [list; fun] implicit parameter lobject1 type TPARA
operator hadoopReduce2 alias HADOOPREDUCE2 pattern _ _ op [list; fun] implicit parameters lobject1, lobject2 types TPARA, TPARA2 
operator createFList alias CREATEFLIST pattern _ op[_, _, _, _]
operator pffeed alias PFFEED pattern _ op [list;list]
operator pffeed2 alias PFFEED2 pattern _ op [list;list]
operator pffeed3 alias PFFEED3 pattern _ op [list;list]
operator hadoopMapAll alias HADOOPMAPALL pattern op (_)
operator hadoopMap2 alias HADOOPMAP2 pattern _ _ op [list; fun] implicit parameters lobject1, lobject2 types TPARA, TPARA2

# file BTree2/BTree2Algebra.spec 

#This file is part of SECONDO.

#Copyright (C) 2004, University in Hagen, Department of Computer Science,
#Database Systems for New Applications.

#SECONDO is free software; you can redistribute it and/or modify
#it under the terms of the GNU General Public License as published by
#the Free Software Foundation; either version 2 of the License, or
#(at your option) any later version.

#SECONDO is distributed in the hope that it will be useful,
#but WITHOUT ANY WARRANTY; without even the implied warranty of
#MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#GNU General Public License for more details.

#You should have received a copy of the GNU General Public License
#along with SECONDO; if not, write to the Free Software
#Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA

#operator createbtree alias CREATEBTREE pattern _ op [ _,_,_,_ ]
operator createbtree2 alias CREATEBTREE2 pattern _ op [ _,_,_,_ ]
operator insertbtree2 alias INSERTBTREE2 pattern _ _ op [ _, _]
operator insertbtree alias INSERTBTREE pattern _ _ op [ _ ]
operator deletebtree2 alias DELETEBTREE2 pattern _ _ op [ _, _]
operator deletebtree alias DELETEBTREE pattern _ _ op [ _ ]
operator updatebtree2 alias UPDATEBTREE2 pattern _ _ op [ _, _]
operator updatebtree alias UPDATEBTREE pattern _ _ op [ _ ]

operator exactmatch2 alias EXACTMATCH2 pattern _ op [ _ ]
operator exactmatchS alias EXACTMATCHS pattern _ op [ _ ]
operator exactmatch alias EXACTMATCH pattern _ _ op [ _ ]
operator range2 alias RANGE2 pattern _ op [ _, _ ]
operator rangeS alias RANGES pattern _ op [ _, _ ]
operator range alias RANGE pattern _ _ op [ _, _ ]
operator leftrange2 alias LEFTRANGE2 pattern _ op [ _ ]
operator leftrangeS alias LEFTRANGES pattern _ op [ _ ]
operator leftrange alias LEFTRANGE pattern _ _ op [ _ ]
operator rightrange2 alias RIGHTRANGE2 pattern _ op [ _ ]
operator rightrangeS alias RIGHTRANGES pattern _ op [ _ ]
operator rightrange alias RIGHTRANGE pattern _ _ op [ _ ]

operator keyrange2 alias KEYRANGE2 pattern _ op [ _ ]
operator keyrange alias KEYRANGE pattern _ _ op [ _ ]
operator getFileInfo alias GETFILEINFO pattern op ( _ )
operator treeheight alias TREEHEIGHT pattern op ( _ )
operator no_nodes alias NO_NODES pattern op ( _ )
operator no_entries alias NO_ENTRIES pattern op ( _ )
operator getRootNode alias GETROOTNODE pattern op ( _ )
operator getNodeInfo alias GETNODEINFO pattern op ( _ , _ )
operator getNodeSons alias GETNODESONS pattern op ( _ , _ )
operator internal_node_capacity alias INTERNAL_NODE_CAPACITY pattern op ( _ )
operator leaf_node_capacity alias LEAF_NODE_CAPACITY pattern op ( _ )
operator getMinFillDegree alias GETMINFILLDEGREE pattern op ( _ )
operator getNodeSize alias GETNODESIZE pattern op ( _ )

operator reset_counters alias RESET_COUNTERS pattern op ( _ )
operator set_cache_size alias SET_CACHE_SIZE pattern op ( _ , _ )
operator get_cache_size alias GET_CACHE_SIZE pattern op ( _ )
operator pin_nodes alias PIN_NODES pattern _ op [ _ ]
operator unpin_nodes alias UNPIN_NODES pattern _ op [ _ ]
operator get_pinned_nodes alias GET_PINNED_NODES pattern op ( _ )
operator get_no_nodes_visited alias GET_NO_NODES_VISITED pattern op ( _ )
operator get_no_cachehits alias GET_NO_CACHEHITS pattern op ( _ )
operator set_cache_limit_type alias SETCACHELIMITTYPE pattern op ( _ , _ )

operator set_maxkeysize alias SETMAXKEYSIZE pattern op(_)
operator get_maxkeysize alias GETMAXKEYSIZE pattern op(_)
operator set_maxvaluesize alias SETMAXVALUESIZE pattern op(_)
operator get_maxvaluesize alias GETMAXVALUESIZE pattern op(_)
operator get_statistics alias GETSTATISTICS pattern op(_)
operator set_debug alias SETDEBUG pattern op(_)

operator getentry2 alias GETENTRY2 pattern op ( _ )

# file TemporalUnit/TemporalUnitAlgebra.spec 

#This file is part of SECONDO.

#Copyright (C) 2008, University in Hagen,
#Faculty of Mathematics and  Computer Science,
#Database Systems for New Applications.

#SECONDO is free software; you can redistribute it and/or modify
#it under the terms of the GNU General Public License as published by
#the Free Software Foundation; either version 2 of the License, or
#(at your option) any later version.

#SECONDO is distributed in the hope that it will be useful,
#but WITHOUT ANY WARRANTY; without even the implied warranty of
#MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#GNU General Public License for more details.

#You should have received a copy of the GNU General Public License
#along with SECONDO; if not, write to the Free Software
#Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA


operator speed alias SPEED pattern op ( _ )
operator queryrect2d alias QUERYRECT2D pattern op ( _ )
operator point2d alias POINT2D pattern op ( _ )
operator get_duration alias GET_DURATION pattern op ( _ )
operator makemvalue alias MAKEMVALUE pattern _ op [ _ ]
operator the_mvalue alias THE_MVALUE pattern _ op
operator velocity alias VELOCITY pattern op ( _ )
operator derivable alias DERIVABLE pattern op ( _ )
operator derivative alias DERIVATIVE pattern op ( _ )
operator atperiods alias ATPERIODS pattern _ infixop _
operator when alias WHEN pattern _ op[_]
operator at alias AT pattern _ infixop _
operator atmax alias ATMAX pattern op ( _ )
operator atmin alias ATMIN pattern op ( _ )
operator intersection alias INTERSECTION pattern op ( _ , _ )
operator inside alias INSIDE pattern _ infixop _
operator distance alias DISTANCE pattern op ( _ , _ )
operator abs alias ABS pattern op ( _ )
operator printstream alias PRINTSTREAM pattern _ op
operator uint2ureal alias UINT2UREAL pattern op ( _ )
operator the_unit alias THE_UNIT pattern op( _ , _ , _ , _ , _ , _ , _ )
operator the_ivalue alias THE_IVALUE pattern op( _ , _ )
operator == alias VEQ pattern _ infixop _
operator ## alias VNE pattern _ infixop _
operator << alias VLT pattern _ infixop _
operator >> alias VGT pattern _ infixop _
operator <<== alias VLE pattern _ infixop _
operator >>== alias VGE pattern _ infixop _

operator no_components alias NO_COMPONENTS pattern op ( _ )
operator isempty alias ISEMPTY pattern op ( _ )
operator length alias LENGTH pattern op ( _ )
operator not alias NOT pattern op ( _ )
operator and alias AND pattern _ infixop _
operator or alias OR pattern _ infixop _
operator sometimes alias SOMETIMES pattern op ( _ )
operator never alias NEVER pattern op ( _ )
operator always alias ALWAYS pattern op ( _ )
operator = alias EQ pattern _ infixop _
operator # alias NE pattern _ infixop _
operator < alias LT pattern _ infixop _
operator > alias GT pattern _ infixop _
operator <= alias LE pattern _ infixop _
operator >= alias GE pattern _ infixop _
operator canmeet alias CANMEET pattern op ( _ , _ , _ , _ )

operator the_mvalue2 alias THE_MVALUE2 pattern _ op
operator atRect alias atRect pattern _ infixop _

operator contains alias CONTAINS pattern _ infixop _

operator swapcoord alias SWAPCOORD pattern op ( _ )
operator getInterval alias getInterval  pattern op ( _ )

# file GraphViz/GraphVizAlgebra.spec 

#This file is part of SECONDO.

#Copyright (C) 2004, University in Hagen, Department of Computer Science, 
#Database Systems for New Applications.

#SECONDO is free software; you can redistribute it and/or modify
#it under the terms of the GNU General Public License as published by
#the Free Software Foundation; either version 2 of the License, or
#(at your option) any later version.

#SECONDO is distributed in the hope that it will be useful,
#but WITHOUT ANY WARRANTY; without even the implied warranty of
#MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#GNU General Public License for more details.

#You should have received a copy of the GNU General Public License
#along with SECONDO; if not, write to the Free Software
#Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA

operator lastoptree alias LASTOPTREE pattern op(_)

 

# file Groupby/GroupbyAlgebra.spec 

#This file is part of SECONDO. 

#Copyright (C) 2004, University in Hagen, Department of Computer Science, 
#Database Systems for New Applications.

#SECONDO is free software; you can redistribute it and/or modify
#it under the terms of the GNU General Public License as published by
#the Free Software Foundation; either version 2 of the License, or
#(at your option) any later version.

#SECONDO is distributed in the hope that it will be useful,
#but WITHOUT ANY WARRANTY; without even the implied warranty of
#MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#GNU General Public License for more details.

#You should have received a copy of the GNU General Public License
#along with SECONDO; if not, write to the Free Software
#Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA

operator groupby2 alias GROUPBY2 pattern _ op [list; funlist] implicit parameter tuple type TUPLE



# file TemporalExt/TemporalExtAlgebra.spec 

#This file is part of SECONDO.

#Copyright (C) 2004, University in Hagen, Department of Computer Science,
#Database Systems for New Applications.

#SECONDO is free software; you can redistribute it and/or modify
#it under the terms of the GNU General Public License as published by
#the Free Software Foundation; either version 2 of the License, or
#(at your option) any later version.

#SECONDO is distributed in the hope that it will be useful,
#but WITHOUT ANY WARRANTY; without even the implied warranty of
#MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#GNU General Public License for more details.

#You should have received a copy of the GNU General Public License
#along with SECONDO; if not, write to the Free Software
#Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA

operator atinstant alias ATINSTANT pattern _ infixop _
operator atperiods alias ATPERIODS pattern _ infixop _
operator present alias PRESENT pattern _ infixop _
operator passes alias PASSES pattern _ infixop _
operator initial alias INITIAL pattern op ( _ )
operator final alias FINAL pattern op ( _ )
operator at alias AT pattern _ infixop _
operator deftime alias DEFTIME pattern op ( _ )
operator inst alias INST pattern op ( _ )
operator val alias VAL pattern op ( _ )
operator derivative_new alias DERIVATIVE_NEW pattern op ( _ )
operator derivable_new alias DERIVABLE_NEW pattern op ( _ )
operator speed_new alias SPEED_NEW pattern op ( _ )
operator rangevalues alias RANGEVALUES pattern op ( _ )
operator sometimes alias SOMETIMES pattern op ( _ )
operator always alias ALWAYS pattern op ( _ )
operator never alias NEVER pattern op ( _ )
operator setunitoftime alias SETUNITOFTIME pattern op ( _ )
operator setunitofdistance alias SETUNITOFDISTANCE pattern op ( _ )
operator velocity_new alias VELOCITY_NEW pattern op ( _ )
operator direction alias DIRECTION pattern op ( _, _, _ )
operator heading alias HEADING pattern op ( _, _, _ )
operator locations alias LOCATIONS pattern op ( _ )
operator atmin alias ATMIN pattern op ( _ )
operator atmax alias ATMAX pattern op ( _ )
operator concatS alias CONCATS pattern  _ op
operator concatS2 alias CONCATS2 pattern  _ op [ _ ]
operator everNearerThan alias EVERNEARERTHAN pattern op( _, _, _ )
operator inside alias INSIDE pattern _ infixop _
# file Relation-C++/RelationAlgebra.spec 

#This file is part of SECONDO.

#Copyright (C) 2004, University in Hagen, Department of Computer Science,
#Database Systems for New Applications.

#SECONDO is free software; you can redistribute it and/or modify
#it under the terms of the GNU General Public License as published by
#the Free Software Foundation; either version 2 of the License, or
#(at your option) any later version.

#SECONDO is distributed in the hope that it will be useful,
#but WITHOUT ANY WARRANTY; without even the implied warranty of
#MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#GNU General Public License for more details.

#You should have received a copy of the GNU General Public License
#along with SECONDO; if not, write to the Free Software
#Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA

operator count alias COUNT pattern _ op
operator count2 alias COUNT2 pattern _ op
operator countboth alias COUNTBOTH pattern _ _ op
operator roottuplesize alias ROOTTUPLESIZE pattern _ op
operator exttuplesize alias EXTTUPLESIZE pattern _ op
operator tuplesize alias TUPLESIZE pattern _ op
operator memtuplesize alias MEMTUPLESIZE pattern _ op
operator memattrsize alias MEMATTRSIZE pattern _ op
operator rootattrsize alias ROOTATTRSIZE pattern _ op[ _ ]
operator extattrsize alias EXTATTRSIZE pattern _ op[ _ ]
operator attrsize alias ATTRSIZE pattern _ op[ _ ]
operator sizecounters alias SIZECOUNTERS pattern _ op[ _ ]
operator dumpstream alias DUMPSTREAM pattern _ op[ _ ]
operator feed alias FEED pattern _ op
operator consume alias CONSUME pattern _ op
operator oconsume alias OCONSUME pattern _ op [ list ]
operator tconsume alias TCONSUME pattern _ op
operator attr alias ATTR pattern op (_, _)
operator project alias PROJECT pattern _ op [list]
operator feedproject alias FEEDPROJECT pattern _ op [list]
operator remove alias REMOVE pattern _ op [list]
operator filter alias FILTER pattern _ op [ fun ] implicit parameter streamelem type STREAMELEM !!
operator reduce alias REDUCE pattern _ op [ fun, _ ] implicit parameter tuple type TUPLE
operator product alias PRODUCT pattern _ _ op
operator rename alias RENAME pattern _ op [ _ ]
operator mconsume alias MCONSUME pattern _ op
operator ! alias BUFFER pattern _ op
operator getFileInfo alias GETFILEINFO pattern op ( _ )

operator renameattr alias RENAMEATTR pattern _ op [funlist  ]
operator validateAttr alias VALIDATEATTR pattern _ op 

operator feedNth alias FEEDNTH pattern _ op[_,_]




# file Tile/TileAlgebra.spec 

#This file is part of SECONDO.

#Copyright (C) 2013, University in Hagen, Department of Computer Science,
#Database Systems for New Applications.

#SECONDO is free software; you can redistribute it and/or modify
#it under the terms of the GNU General Public License as published by
#the Free Software Foundation; either version 2 of the License, or
#(at your option) any later version.

#SECONDO is distributed in the hope that it will be useful,
#but WITHOUT ANY WARRANTY; without even the implied warranty of
#MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#GNU General Public License for more details.

#You should have received a copy of the GNU General Public License
#along with SECONDO; if not, write to the Free Software
#Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA

# author: Dirk Zacher

operator atinstant alias ATINSTANT pattern _ infixop _
operator atlocation alias ATLOCATION pattern _ op [_,_]
operator atperiods alias ATPERIODS pattern _ infixop _
operator atrange alias ATRANGE pattern _ op [_,_,_]
operator bbox alias BBOX pattern op(_,_)
operator compose alias COMPOSE pattern _ infixop _
operator deftime alias DEFTIME pattern op(_)
operator fromline alias FROMLINE pattern op(_)
operator fromregion alias FROMREGION pattern op(_,_)
operator getgrid alias GETGRID pattern op(_)
operator inst alias INST pattern op(_)
operator load alias LOAD pattern op(_)
operator map alias MAP pattern _ op [fun]
         implicit parameter element type CELL1
operator map2 alias MAP2 pattern _ _ op [fun]
         implicit parameters elem1, elem2 types CELL1, CELL2
operator matchgrid alias MATCHGRID pattern _ op [_,fun,_]
         implicit parameter element type CELLS
operator maximum alias MAXIMUM pattern op(_)
operator minimum alias MINIMUM pattern op(_)
operator t2mt alias TTOMT pattern  op(_,_,_,_)
operator tiles alias TILES pattern op(_)
operator toraster2 alias TORASTER2 pattern op(_)
operator toregion alias TOREGION pattern _ op
operator val alias VAL pattern op(_)

# file OldRelation-C++/OldRelationAlgebra.spec 

#This file is part of SECONDO.

#Copyright (C) 2004, University in Hagen, Department of Computer Science, 
#Database Systems for New Applications.

#SECONDO is free software; you can redistribute it and/or modify
#it under the terms of the GNU General Public License as published by
#the Free Software Foundation; either version 2 of the License, or
#(at your option) any later version.

#SECONDO is distributed in the hope that it will be useful,
#but WITHOUT ANY WARRANTY; without even the implied warranty of
#MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#GNU General Public License for more details.

#You should have received a copy of the GNU General Public License
#along with SECONDO; if not, write to the Free Software
#Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA

operator loopjoinrel alias LOOPJOINREL pattern _ op [ fun ] implicit parameter tuple type TUPLE
# file SymbolicTrajectory/SymbolicTrajectoryAlgebra.spec 

operator tolabel alias TOLABEL pattern op ( _ )
operator mstringtomlabel alias MSTRINGTOMLABEL pattern op ( _ )
operator tolabels alias TOLABELs pattern op ( _ , _ )
operator toplaces alias TOPLACEs pattern op ( _ , _ )
operator contains alias CONTAINS pattern _ infixop _
operator toplace alias TOPLACE pattern op ( _ , _ )
operator name alias NAME pattern op ( _ )
operator ref alias REF pattern op ( _ )
operator distance alias DISTANCE pattern op ( _ , _ )
operator topattern alias TOPATTERN pattern _ op
operator toclassifier alias TOCLASSIFIER pattern _ op
operator matches alias MATCHES pattern _ infixop _
operator createtupleindex alias CREATETUPLEINDEX pattern _ op [ _ ]
operator bulkloadtupleindex alias BULKLOADTUPLEINDEX pattern _ op [ _ ]
operator tmatches alias TMATCHES pattern _ op [ _ , _ ]
operator indextmatches alias INDEXTMATCHES pattern _ _ op [ _ , _ ]
operator indexrewrite alias INDEXREWRITE pattern _ _ op [ _ , _ ]
operator createunitrtree alias CREATEUNITRTREE pattern _ op [ _ ]
operator indexmatches alias INDEXMATCHES pattern _ op [ _ , _ , _ ]
operator filtermatches alias FILTERMATCHES pattern _ op [ _ , _ ]
operator rewrite alias REWRITE pattern op ( _ , _ )
operator multirewrite alias MULTIREWRITE pattern _ op [ _ , _ ]
operator classify alias CLASSIFY pattern op ( _ , _ )
operator indexclassify alias INDEXCLASSIFY pattern _ op [ _ , _ , _ ]
operator compress alias COMPRESS pattern op ( _ )
operator fillgaps alias FILLGAPS pattern op ( _ , _ )
operator makemvalue2 alias MAKEMVALUE2 pattern _ op [ _ ]
operator createml alias CREATEML pattern op ( _ , _ )
operator createmlrelation alias CREATEMLRELATION pattern op ( _ , _ , _ )
operator createtrie alias CREATETRIE pattern _ op [ _ ]
operator derivegroups alias DERIVEGROUPS pattern _ op [ _ , _ ]
# file MMRTree/MMRTreeAlgebra.spec 



operator realJoinMMRTree    alias   REALJOINMMRTREE  pattern _ _ op [ _, _ ,_,_]
operator joinMMRTreeIt    alias   JOINMMRTREEIT  pattern _ _ op [ _, _ ,_,_]
operator joinMMRTreeItVec    alias   JOINMMRTREEITVEC  pattern _ _ op [ _, _ ,_,_]
operator realJoinMMRTreeVec    alias   REALJOINMMRTREEVEC  pattern _ _ op [ _, _ ,_,_]
operator statMMRTree    alias   STATMMRTREE  pattern _ op [ _, _, _]
operator insertMMRTree    alias   INSERTMMRTREE  pattern _ op [ _, _ ]

operator itSpatialJoin    alias   ITSPATIALJOIN  pattern _ _ op [ _, _ ,_,_]


operator simJoin alias SIMJOIN pattern _ _ op [_,_,_]
operator simjoinfun alias SIMJOINFUN pattern _ _ op [_,_,_,_]




# file HybridTrajectory/HybridTrajectory.spec 

operator getHybridPartition alias GETHYBRIDPARTITION pattern _ op
operator atinstant alias ATINSTANT pattern _ infixop _
operator atperiods alias ATPERIODS pattern _ infixop _
# file MapMatching/MapMatchingAlgebra.spec 

#This file is part of SECONDO.

#Copyright (C) 2004, University in Hagen, Department of Computer Science, 
#Database Systems for New Applications.

#SECONDO is free software; you can redistribute it and/or modify
#it under the terms of the GNU General Public License as published by
#the Free Software Foundation; either version 2 of the License, or
#(at your option) any later version.

#SECONDO is distributed in the hope that it will be useful,
#but WITHOUT ANY WARRANTY; without even the implied warranty of
#MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#GNU General Public License for more details.

#You should have received a copy of the GNU General Public License
#along with SECONDO; if not, write to the Free Software
#Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA

operator mapmatchmht alias MAPMATCHMHT pattern op( _ , _ )
operator omapmatchmht alias OMAPMATCHMHT pattern op( _ , _ , _ , _ )
operator omapmatchmht alias OMAPMATCHMHT_P pattern op( _ , _ , _ , _ )
operator omapmatchmht_mpoint alias OMAPMATCHMHT_MPOINT pattern op( _ , _ , _ , _ )
operator gpximport alias GPXIMPORT pattern op( _ )

# file TupleIdentifier/TupleIdentifier.spec 

#This file is part of SECONDO.

#Copyright (C) 2004, University in Hagen, Department of Computer Science,
#Database Systems for New Applications.

#SECONDO is free software; you can redistribute it and/or modify
#it under the terms of the GNU General Public License as published by
#the Free Software Foundation; either version 2 of the License, or
#(at your option) any later version.

#SECONDO is distributed in the hope that it will be useful,
#but WITHOUT ANY WARRANTY; without even the implied warranty of
#MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#GNU General Public License for more details.

#You should have received a copy of the GNU General Public License
#along with SECONDO; if not, write to the Free Software
#Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA

operator tupleid alias TUPLEID pattern op( _ )
operator addtupleid alias ADDTUPLEID pattern _ op
operator = alias EQ pattern _ infixop _
operator # alias NE pattern _ infixop _
operator > alias GT pattern _ infixop _
operator < alias LT pattern _ infixop _
operator >= alias GE pattern _ infixop _
operator <= alias LE pattern _ infixop _
operator tid2int alias TID2INT pattern op( _ )
operator int2tid alias INT2TID pattern op( _ )

# file Function-C++/FunctionAlgebra.spec 

operator within alias WITHIN pattern _ op [ fun ] implicit parameter const1 type ANY
operator within2 alias WITHIN2 pattern _ _ op [ fun ] implicit parameters const1, const2 types ANY, ANY2
operator whiledo alias WHILEDO pattern _ op [fun; fun; _] implicit parameter const1 type ANY


# file GeneralTree/GeneralTreeAlgebra.spec 

#This file is part of SECONDO.

#Copyright (C) 2004, University in Hagen, Department of Computer Science,
#Database Systems for New Applications.

#SECONDO is free software; you can redistribute it and/or modify
#it under the terms of the GNU General Public License as published by
#the Free Software Foundation; either version 2 of the License, or
#(at your option) any later version.

#SECONDO is distributed in the hope that it will be useful,
#but WITHOUT ANY WARRANTY; without even the implied warranty of
#MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#GNU General Public License for more details.

#You should have received a copy of the GNU General Public License
#along with SECONDO; if not, write to the Free Software
#Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA

operator gethpoint alias GETHPOINT pattern op(_)
operator gethpoint2 alias GETHPOINT2 pattern op(_, _)

operator getbbox alias GETBBOX pattern op(_)
operator getbbox2 alias GETBBOX2 pattern op(_, _)

operator getdistdata alias GETDISTDATA pattern op(_)
operator getdistdata2 alias GETDISTDATA2 pattern op(_, _)

operator gdistance alias GDISTANCE pattern op (_, _)
operator gdistance2 alias GDISTANCE2 pattern op (_, _, _)
operator gdistance3 alias GDISTANCE3 pattern op (_, _, _, _)
