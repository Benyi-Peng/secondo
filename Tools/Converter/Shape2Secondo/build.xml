<project name="GeoToolsProject" default="dist" basedir=".">

  <!-- set global properties for this build -->
  <property name="src" value="." />
  <property name="build" value="${src}/build" />
  <property name="dist"  value="${src}/dist" />
	<property name="demos" value="${src}/demonstrations"/>
	<property name="utils" value="${src}/utils"/>
  <property name="jars" value="${demos}/jars" />
	<!-- change to point to your 1.1 development env -->
	<property name="1.1classes" value="/apps/jdk1.1.6/lib/classes.zip" />
<property name="coll.import" value="com.sun.java.util.collections"/>
 <property name="build.src" value="${src}/${build}/src1.2"/>
 <property name="build.code" value="${src}/${build}/class1.2"/>

  <target name="prepare">
    <!-- Create the time stamp -->
    <tstamp/>
    <!-- Create the build directory structure used by compile -->
    <mkdir dir="${build}" />
  </target>

  <target name="compile" depends="prepare">
    <!-- Compile the java code from ${src} into ${build} -->
    <echo message="build.xml compile code in ${src} to ${build} with jars from ${jars}"/> 
    <javac destdir="${build}" optimize="on">
			<src path="${src}"/>
			<include name="uk/**"/>
        <classpath>
            <pathelement location="${jars}/collections.jar"/>
            <pathelement location="${jars}/xerces.jar" />
            <pathelement location="${jars}/support.jar"/>
            <pathelement location="${jars}/JimiCore.jar"/>
            <pathelement location="${jars}/postgis.jar"/>
            <pathelement location="${jars}/postgresql.jar"/>
            <pathelement location="${jars}/dxflib.jar"/>
            <pathelement location="${jars}/simple-jprotocols.jar"/>
            <pathelement location="${jars}/gml4j-jdk11.jar"/>
            <pathelement location="${jars}/jdom-jdk11.jar"/>
	</classpath>
    </javac>
  </target>
  <target name="server" depends="prepare">
    <!-- Compile the java code from ${src} into ${build} -->
    <javac destdir="${build}">
			<src path="${src}"/>
			<src path="server"/>
			<include name="uk/**"/>
        <classpath>
            <pathelement location="${jars}/collections.jar"/>
            <pathelement location="${jars}/xerces.jar" />
            <pathelement location="${jars}/support.jar"/>
            <pathelement location="${jars}/JimiCore.jar"/>
            <pathelement location="${jars}/servlet.jar"/>
            <pathelement location="${jars}/postgis.jar"/>
            <pathelement location="${jars}/postgresql.jar"/>
            <pathelement location="${jars}/dxflib.jar"/>
	</classpath>
    </javac>
  </target>
  <target name="utils" depends="prepare,jar">
		<ant antfile="${utils}/build.xml" target="all">
			<property name="src" value="${utils}"/>
			<property name="jars" value="${utils}/jars"/>
		</ant>
  </target>
  <target name="utils-zip" depends="prepare,jar">
		<ant antfile="${utils}/build.xml" target="zip">
			<property name="src" value="${utils}"/>
		</ant>
  </target>
  <target name="strict" depends="clean,prepare">
    <!-- a 1.1 Compile the java code from ${src} into ${build} -->
    <javac target="1.1" bootclasspath="${1.1classes}" srcdir="${src}" destdir="${build}" >
        <classpath>
            <pathelement location="${jars}/collections.jar"/>
            <pathelement location="${jars}/xerces.jar" />
</classpath>
    </javac>

  </target>

		<target name="demos" depends="jar">
			<ant antfile="${demos}/build.xml"/>
		</target>
		<target name="demos-zip" depends="jar">
			<ant antfile="${demos}/build.xml" target="zip"/>
		</target>
		<target name="docs" >
			<mkdir dir="${dist}/docs" />
			<javadoc 
			packagenames="uk.*,cmp.*,com.*"
			sourcepath="${src}" 
			destdir="${dist}/docs"
			windowtitle="GeoTools API" 
			bottom="Copyright &#169; 2002 Centre for Computational Geography
			under the GNU Lesser General Public Licence." >
                        <classpath>
            <pathelement location="${jars}/collections.jar"/>
            <pathelement location="${jars}/xerces.jar"/>
            <pathelement location="${jars}/support.jar"/>
            <pathelement location="${jars}/JimiCore.jar"/>
            <pathelement location="${jars}/postgis.jar"/>
            <pathelement location="${jars}/postgresql.jar"/>
            <pathelement location="${jars}/dxflib.jar"/>
            <pathelement location="${jars}/simple-jprotocols.jar"/>
            <pathelement location="${jars}/gml4j-jdk11.jar"/>
            <pathelement location="${jars}/jdom-jdk11.jar"/>
	</classpath>
        </javadoc>
		</target>

		<target name="dist" depends="jar,docs,jar1.2">
			<!-- Create the ${dist}/lib directory -->
			<mkdir dir="${dist}/lib" />
			<!-- Put everything in ${build} into the MyProject-${DSTAMP}.jar file -->
  </target>

			<target name="jar" depends="compile">
			<mkdir dir="${dist}/lib" />
			<!-- Put everything in ${build} into the MyProject-${DSTAMP}.jar file -->
                        <echo file="${build}/mf.mf">Manifest-Version: 1.0
Main-Class: uk.ac.leeds.ccg.geotools.VersionInfo
Created-By: Ant 1.4.1"</echo>
                            
			<jar jarfile="${dist}/lib/GeoTools-${DSTAMP}.jar" manifest="${build}/mf.mf" basedir="${build}" includes="uk/**" />
			<copy file="${dist}/lib/GeoTools-${DSTAMP}.jar"
			tofile="${dist}/lib/geotools.jar"/>
  </target>
			<target name="core" depends="compile">
			<mkdir dir="${dist}/lib" />
			<!-- Put everything in ${build} into the MyProject-${DSTAMP}.jar file -->
			<jar jarfile="${dist}/lib/geotools-core.jar" basedir="${build}" includes="uk/ac/leeds/ccg/geotools/**" />
  </target>

	<target name="package" depends="compile">
		<mkdir dir="${dist}/lib" />
		<!-- Put everything in ${build} into the MyProject-${DSTAMP}.jar file -->
		<jar jarfile="${dist}/lib/geotools-${pack}.jar" basedir="${build}" includes="uk/ac/leeds/ccg/${pack}/**" />
  </target>
	<target name="geotools">
		<ant target="package">
			<property name="pack" value="geotools"/>
		</ant>
	</target>
	<target name="dbffile">
		<ant target="package">
			<property name="pack" value="dbffile"/>
		</ant>
	</target>
	<target name="gml">
		<ant target="package">
			<property name="pack" value="gml"/>
		</ant>
	</target>
	<target name="mif">
		<ant target="package">
			<property name="pack" value="mif"/>
		</ant>
	</target>
	<target name="ogc">
		<ant target="package">
			<property name="pack" value="ogc"/>
		</ant>
	</target>
	<target name="raster">
		<ant target="package">
			<property name="pack" value="raster"/>
		</ant>
	</target>
	<target name="sfsql">
		<ant target="package">
			<property name="pack" value="sfsql"/>
		</ant>
	</target>
	<target name="shapefile">
		<ant target="package">
			<property name="pack" value="shapefile"/>
		</ant>
	</target>
	<target name="simplefeature">
		<ant target="package">
			<property name="pack" value="simplefeature"/>
		</ant>
	</target>
	<target name="widgets">
		<ant target="package">
			<property name="pack" value="widgets"/>
		</ant>
	</target>



	

  <target name="clean">
    <!-- Delete the ${build} and ${dist} directory trees -->
    <delete dir="${build}" />
    <delete dir="${dist}" />
		<ant antfile="${utils}/build.xml" target="clean">
			<property name="src" value="${utils}"/>
		</ant>
		<ant antfile="${demos}/build.xml" target="clean">
			<property name="src" value="${demos}"/>
		</ant>
  </target>
	<target name="src" depends="prepare">
		<zip zipfile="${dist}/lib/GeoToolsSrc-${DSTAMP}.zip" 
			basedir="${src}/uk" 
		/>
	</target>

<target name="compile1.2" depends="convertCollections">
    <mkdir dir="${build.code}"/>
   <javac srcdir="${build.src}" destdir="${build.code}">
		 <classpath>
			 <pathelement location="${jars}/xerces.jar" />
			 <pathelement location="${jars}/support.jar" />
                         <pathelement location="${jars}/JimiCore.jar" />
                         <pathelement location="${jars}/postgis.jar" />
                         <pathelement location="${jars}/postgresql.jar" />
                         <pathelement location="${jars}/dxflib.jar"/>
                         <pathelement location="${jars}/gml4j.jar"/>
                         <pathelement location="${jars}/simple-jprotocols.jar"/>
		 </classpath>
	 </javac>

</target>

  <target name="convertCollections" depends="prepare-src1.2">
    <replace dir="${build.src}" includes="**"
             value="Comparable" token="com.sun.java.util.collections.Comparable"/>
    <replace dir="${build.src}" includes="**"
             value="java.util" token="${coll.import}"/>
  </target>
<target name="prepare-src1.2" >
    <!-- create directories -->
    <mkdir dir="${build.src}"/>

    <!-- copy src files -->
    <copy todir="${build.src}/uk">
			<fileset dir="${src}/uk"/>
		</copy>
    <copy todir="${build.src}/cmp">
			<fileset dir="${src}/cmp"/>
		</copy>
  </target>
	<target name="jar1.2" depends="compile1.2">
		<mkdir dir="${dist}/lib" />
		<tstamp/>
		<!-- Put everything in ${build} into the MyProject-${DSTAMP}.jar file -->
		<zip zipfile="${dist}/lib/GeoToolsSrc1.2-${DSTAMP}.zip" basedir="${build.src}" />
		<jar jarfile="${dist}/lib/GeoTools1.2-${DSTAMP}.jar" basedir="${build.code}" />
		<copy file="${dist}/lib/GeoTools1.2-${DSTAMP}.jar"
      tofile="${dist}/lib/geotools1.2.jar"/>
  </target>
<target name="archive">
<zip basedir="../src" compress="true" includes="**/**.java" zipfile="../src.zip"/>
</target>

</project>
