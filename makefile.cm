#This file is part of SECONDO.
#
#Copyright (C) 2004, University in Hagen, Department of Computer Science, 
#Database Systems for New Applications.
#
#SECONDO is free software; you can redistribute it and/or modify
#it under the terms of the GNU General Public License as published by
#the Free Software Foundation; either version 2 of the License, or
#(at your option) any later version.
#
#SECONDO is distributed in the hope that it will be useful,
#but WITHOUT ANY WARRANTY; without even the implied warranty of
#MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#GNU General Public License for more details.
#
#You should have received a copy of the GNU General Public License
#along with SECONDO; if not, write to the Free Software
#Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
#
########################################################################
#
# makefile.cm - rules for CM and deployment related tasks
#
#########################################################################


# some direcories used to build tar.gz files for
# Secondo sources or installation kits
pref := SECONDO_INSTALLATION_KIT
net := $(SECONDO_INST_KIT_ROOT)/$(pref)
netsc := $(net)/scripts

# local directory for tar archives
ifndef tempdir
tempdir := /tmp/make-$(USER)
endif
shrc := $(shell if [ ! -d $(tempdir) ]; then if ! mkdir -p $(tempdir); then echo "false"; fi fi)
ifeq ($(shrc),false)
$(error Could not create directory $(tempdir)!)
endif


# run some shell commands
tsdk := $(tempdir)/sdk_dist
tnew := $(tempdir)/sdk_changed 
tupd := $(tempdir)/show_update_msg

shrc := $(shell rm -f $(tupd))
shrc := $(shell if [ ! -e $(tsdk) ]; then touch $(tsdk); fi)
shrc := $(shell if [ ! -e $(tnew) ]; then touch $(tnew); fi)

# Rules for copying configuration scripts
SCRIPT_DIR := ./CM-Scripts

SCRIPT_FILES := setvar.bash \
		libutil.sh \
		catvar.sh

RC_FILES_1 := secondorc \
	      secondo.sdkrc \
	      secondo.aliases

RC_FILES_2 := secondo.linuxrc \
              secondo.win32rc \
	      profile	

RC_FILES_OS := $(RC_FILES_1) secondo.$(platform)rc 
ifeq ($(platform),win32)
RC_FILES_OS += profile
endif

SDK_SCRIPTS_BIN := $(addprefix $(SECONDO_SDK)/bin/, $(SCRIPT_FILES))
SDK_SCRIPTS_HOME := $(addprefix $(HOME)/., $(RC_FILES_OS))

INST_KIT_BIN := $(addprefix $(netsc)/bin/, $(SCRIPT_FILES))
INST_KIT_HOME := $(addprefix $(netsc)/home/, $(RC_FILES_1) $(RC_FILES_2))


# Files located at the web server
websrv := $(SECONDO_WEBSRV_ROOT)/files

lin_guide := Linux-Installation-Guide.pdf
win_guide := Windows-Installation-Guide.pdf

lin_sdk := linux-sdk.tar.gz
win_sdk := win32-sdk.zip
iso_sdk := secondo-cd.iso.zip

INST_GUIDES := $(addprefix $(websrv)/, $(lin_guide) $(win_guide))
INST_KITS := $(addprefix $(websrv)/, $(lin_sdk) $(win_sdk) $(iso_sdk))
INST_KITS2 := $(addprefix $(tempdir)/, $(lin_sdk) $(win_sdk))


WIN_SRC := $(tempdir)/secondo-$(tag)-CP1252.zip
LIN_SRC := $(tempdir)/secondo-$(tag)-LAT1.tar.gz
SRC_FILES := $(WIN_SRC) $(LIN_SRC)

ALL_SDK_SCRIPTS := $(net)/installsdk $(INST_KIT_BIN) $(INST_KIT_HOME)


.PHONY: update-environment 
update-environment: show-separator remove-old-apps remove-old-config $(SDK_SCRIPTS_BIN) $(SDK_SCRIPTS_HOME) show-update-msg


UPDATE_MSG := "\n\
  Configuration Setup has been updated. If you have made changes\n\
  in one of the files above please transfer them into the new versions.\n\
  A backup copy ending with ~ will be kept.\n\n\
  Afterwards please execute the command\n\
  source ~/.secondorc or close this shell \n\
  and start a new one.\n\n\
  Make can't do this for you since all commands started within\n\
  make are processed in a new subshell, hence the environment\n\
  of your current running shell will not be modified.\n"
	
VPATH := $(SCRIPT_DIR)
$(SECONDO_SDK)/bin/%: %
	@touch $(tupd)
	@cp --backup $< $@
	@echo " updating" $@

$(HOME)/.%: .%
	@touch $(tupd)
	@cp --backup $< $@
	@echo " updating" $@

$(netsc)/home/%: .%
	cp $< $@

$(netsc)/bin/%: %
	cp $< $@


.PHONY: show-update-msg
show-update-msg:
	@if [ -e $(tupd) ]; then echo -e $(UPDATE_MSG); \
	else echo -e " ... are up to date.\n"; fi

.PHONY: show-separator
show-separator:
	@echo -e "\n *** Bash environment setup files *** \n"

# update the installation kit 
.PHONY: update-sdk 
update-sdk: checkrootdir $(tnew) $(tsdk) 

# special target which only updates script files
.PHONY: sdk-scripts
sdk-scripts: $(tnew)

$(tnew): $(ALL_SDK_SCRIPTS)
	touch $@

# special target which create new secondo source archives
.PHONY: src-dist
src-dist: src-archives
	touch $(tnew) 

# create new installation kits
.PHONY: sdk-dist
sdk-dist: $(INST_KITS2) $(tempdir)/secondo-cd.iso.zip

vpath %-Installation-Guide.pdf $(net)
vpath %.zip $(tempdir)
vpath %.gz $(tempdir)

# copy to web server
.PHONY: copy2web
copy2web: checkrootdir $(INST_GUIDES) $(INST_KITS)


$(websrv)/%-Installation-Guide.pdf: %-Installation-Guide.pdf
	cp $< $@

$(websrv)/%.zip: %.zip
	cp $< $@

$(websrv)/%.gz: %.gz
	cp $< $@

# check if a root for the secondo SDK tools is present
.PHONY: checkrootdir
checkrootdir:
ifndef SECONDO_INST_KIT_ROOT
	@echo -e "\nError: SECONDO_INST_KIT_ROOT not defined!\n"; exit 1
else
	@if [ ! -e $(net) ]; then \
	echo -e "\nDirectory net=\"$(net)\" does not exist!\n"; exit 2; fi
endif


$(tempdir)/linux-sdk.tar.gz: $(tnew)
	rm -f $@
	tar -C $(SECONDO_INST_KIT_ROOT) -cvzf $@ \
	$(pref)/Linux-Installation-Guide.pdf $(pref)/installsdk $(pref)/linux $(pref)/scripts --exclude $(pref)/linux/j2sdk* 

$(tempdir)/win32-sdk.zip: $(tnew)
	rm -f $@
	cd $(SECONDO_INST_KIT_ROOT) && zip -9 -r $@ \
	$(pref)/Windows-Installation-Guide.pdf $(pref)/MSYS-* $(pref)/installsdk \
	$(pref)/win32/prolog $(pref)/win32/mingw $(pref)/win32/non-gnu $(pref)/win32/gnu $(pref)/scripts

# create a iso image with Rockridge and Joliet extensions 
.PHONY: isoimage
isoimage: $(tempdir)/secondo-cd.iso.zip

$(tempdir)/secondo-cd.iso.zip: $(tempdir)/secondo-cd.iso
	rm -rf $@
	zip -9 $@ $<

$(tempdir)/secondo-cd.iso: $(tnew)
	rm -rf $@
	mkisofs -J -r -iso-level 2 -graft-points -o $@ /=$(net)

.PHONY: doc-dist 
doc-dist: $(net)/documentation
	rm -f $(tempdir)/secondo-$@.zip
	cd $(net) && zip -9 -r $(tempdir)/secondo-$@.zip documentation 


SECONDO_DEMO = $(tempdir)/secondo-demo

OLD_APPS := bin/SecondoTTYBDB \
	    bin/SecondoMonitorBDB \
	    bin/SecondoServerBDB \
	    bin/TestRunner \
	    bin/TestRunnerApp \
	    Optimizer/SecondoPL \
	    Optimizer/SecondoPLCS \

.PHONY: remove-old-apps
remove-old-apps:
	rm -f $(OLD_APPS)

.PHONY: remove-old-config
remove-old-config:
	rm -f bin/SecondoConfig.ini Optimizer/SecondoConfig.ini

SECONDO_APP := SecondoBDB \
	       SecondoCS \
	       SecondoListener \
	       SecondoMonitor \
	       SecondoRegistrar \
	       SecondoCheckpoint \

DEMO_BIN_FILES := $(addprefix $(SECONDO_DEMO)/bin/, $(SECONDO_APP))
DEMO_QUERY := bin/testqueries
DEMO_MAN := Documents/SecondoManual.pdf
DEMO_ARCHIVE := $(tempdir)/secondo-demo.tar.gz

vpath Secondo% bin

.PHONY: demo
demo: mkdemodir $(DEMO_ARCHIVE) 

$(DEMO_ARCHIVE): $(DEMO_BIN_FILES) $(DEMO_QUERY) $(DEMO_MAN)
	cp $(DEMO_QUERY) $(SECONDO_DEMO)/bin
	cp $(DEMO_MAN) $(SECONDO_DEMO)
	cd $(tempdir); tar -cvzf $@ secondo-demo

.PHONY: mkdemodir
mkdemodir:
	mkdir -p $(SECONDO_DEMO)/bin


$(SECONDO_DEMO)/bin/Secondo%: Secondo%
	cp $< $@
	strip $@


define checkTag
  @if [ -z "$(tag)" ]; then echo -e "\n Error: Variable \"tag\" not set! \n"; exit 1; fi
endef


.PHONY: tag-version
tag-version:
	$(checkTag)
	cvs -Q tag -F $(tag)


fileList := $(tempdir)/_SRC_FILE_LIST
.PHONY: src-archives
src-archives: $(fileList) 
	rm -rf $(SRC_FILES)
	tar -czf $(LIN_SRC) -T $<
# a list of file endings which need not to be recoded
	find secondo ! \( \
          -type d \
          -or -name "*.bmp" \
          -or -name "*.zip" \
          -or -name "*.tgz" \
          -or -name "*.jar" \
          -or -name "*.dll" \
          -or -name "*.gif" \
          -or -name "*.jpg" \
          -or -name "*.sxd" \
          -or -name "*.sda" \
          -or -name "*.fig" \
          -or -name "*.pdf" \
          -or -name "*.eps" \
          -or -name "*.fm" \
          -or -name "*.gz" \
          -or -name "*.book" \
          -or -name "*.canvas" \
          -or -path "*javazoom*" \
        \) \
        -exec recode lat1..cp1252 {} \;
	cat $< | zip -9 -r $(WIN_SRC) -@ > /dev/null
	rm -rf secondo

$(fileList): secondo/makefile
	find secondo ! -type d \
                     ! -name "opt" \
                     ! -name "geo" \
                     ! -name ".sda" \
                     ! -name ".sxd" \
                     ! -name ".canvas" \
                     ! -path "*/Data/*" \
                     ! -path "*/Generators/TPC-H/*" \
                     ! -path "*/Algebras/NauticalMap*" \
                     ! -name "*.pdf" > $@ 
	find secondo/Data ! -type d -size -10k >> $@

secondo/makefile:
	$(checkTag)
	cvs -Q export -r$(tag) secondo 


$(net)/installsdk: install.bash
	cp $< $@
	chmod 755 $@

# store modified files in a tar archive

.PHONY: changes
changes: /tmp/modfiles.list
	sort -u $<

.PHONY: /tmp/cvslist
/tmp/cvslist:	
	cvs -nq update | grep "^[MAC] " | sed -e "s#[M,A,C] #./#g" > $@


.PHONY: backup 
backup: backup.tgz
	rm -f /tmp/modfiles.list

ifndef days
days:=0
endif
ifndef hours 
hours:=1
endif
/tmp/modfiles.list: /tmp/cvslist
	rm -f $@
	find . -cmin -$$[$(days)*24+$(hours)*60] -a ! -iregex ".*\.\(\(tab\|yy\)\..*\|a\|o\|class\|dep\)" >> $@
	cat $< >> $@

backup.tgz: /tmp/modfiles.list
	rm -f $@
	tar -cvzf $@ $$(sort -u $<)

